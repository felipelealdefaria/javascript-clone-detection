"use strict";function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}function _possibleConstructorReturn(a,b){return b&&("object"===_typeof(b)||"function"==typeof b)?b:_assertThisInitialized(a)}function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _getPrototypeOf(a){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)},_getPrototypeOf(a)}function _inherits(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),b&&_setPrototypeOf(a,b)}function _setPrototypeOf(a,b){return _setPrototypeOf=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},_setPrototypeOf(a,b)}var Similarity=require("../interface/Similarity");module.exports=function(a){function b(){return _classCallCheck(this,b),_possibleConstructorReturn(this,_getPrototypeOf(b).call(this))}return _inherits(b,a),_createClass(b,[{key:"similarity",value:function similarity(a,c){if(Similarity.checkThanosType(a),Similarity.checkRivalType(c),a=Similarity.initParams(a,c)[0],c=Similarity.initParams(a,c)[1],!a.length&&!c.length)return 1;if(!a.length||!c.length)return 0;if(a===c)return 1;for(var d=Array.from(new Set(a.split("").concat(c.split("")))),e=b.stringVectorization(a.split(""),d),f=b.stringVectorization(c.split(""),d),g=0,h=0,j=0,k=0;k<e.length;++k)g+=e[k]*f[k],h+=e[k]*e[k],j+=f[k]*f[k];return h=Math.sqrt(h),j=Math.sqrt(j),1*g/(h*j)}},{key:"distance",value:function distance(a,b){return 1-this.similarity(a,b)}}],[{key:"stringVectorization",value:function stringVectorization(a,b){return b.map(function(b){return a.includes(b)?1:0})}}]),b}(Similarity);