{
  "version": 3,
  "sources": ["../node_modules/estraverse/estraverse.js", "../node_modules/abstract-syntax-tree/src/walk.js", "../node_modules/abstract-syntax-tree/src/equal.js", "../node_modules/esquery/node_modules/estraverse/estraverse.js", "../node_modules/esquery/parser.js", "../node_modules/esquery/esquery.js", "../node_modules/abstract-syntax-tree/src/find/index.js", "../node_modules/abstract-syntax-tree/src/each.js", "../node_modules/abstract-syntax-tree/src/first.js", "../node_modules/abstract-syntax-tree/src/last.js", "../node_modules/abstract-syntax-tree/src/count.js", "../node_modules/abstract-syntax-tree/src/traverse.js", "../node_modules/abstract-syntax-tree/src/has.js", "../node_modules/abstract-syntax-tree/src/remove.js", "../node_modules/meriyah/dist/meriyah.cjs", "../node_modules/abstract-syntax-tree/src/parse.js", "../node_modules/abstract-syntax-tree/src/replace.js", "../node_modules/abstract-syntax-tree/src/template/estemplate.js", "../node_modules/tslib/tslib.js", "../node_modules/ast-types/lib/types.js", "../node_modules/ast-types/lib/path.js", "../node_modules/ast-types/lib/scope.js", "../node_modules/ast-types/lib/node-path.js", "../node_modules/ast-types/lib/path-visitor.js", "../node_modules/ast-types/lib/equiv.js", "../node_modules/ast-types/fork.js", "../node_modules/ast-types/def/core-operators.js", "../node_modules/ast-types/lib/shared.js", "../node_modules/ast-types/def/core.js", "../node_modules/ast-types/def/es6.js", "../node_modules/ast-types/def/es2016.js", "../node_modules/ast-types/def/es2017.js", "../node_modules/ast-types/def/es2018.js", "../node_modules/ast-types/def/es2019.js", "../node_modules/ast-types/def/es2020.js", "../node_modules/ast-types/def/jsx.js", "../node_modules/ast-types/def/es-proposals.js", "../node_modules/ast-types/def/type-annotations.js", "../node_modules/ast-types/def/flow.js", "../node_modules/ast-types/def/esprima.js", "../node_modules/ast-types/def/babel-core.js", "../node_modules/ast-types/def/babel.js", "../node_modules/ast-types/def/typescript.js", "../node_modules/ast-types/gen/namedTypes.js", "../node_modules/ast-types/main.js", "../node_modules/abstract-syntax-tree/src/template/index.js", "../node_modules/abstract-syntax-tree/src/prepend.js", "../node_modules/abstract-syntax-tree/src/append.js", "../node_modules/astring/src/astring.js", "../node_modules/abstract-syntax-tree/src/generate.js", "../node_modules/abstract-syntax-tree/src/reduce.js", "../node_modules/abstract-syntax-tree/src/match.js", "../node_modules/abstract-syntax-tree/src/serialize.js", "../node_modules/source-map/lib/base64.js", "../node_modules/source-map/lib/base64-vlq.js", "../node_modules/source-map/lib/util.js", "../node_modules/source-map/lib/array-set.js", "../node_modules/source-map/lib/mapping-list.js", "../node_modules/source-map/lib/source-map-generator.js", "../node_modules/source-map/lib/binary-search.js", "../node_modules/source-map/lib/read-wasm.js", "../node_modules/source-map/lib/wasm.js", "../node_modules/source-map/lib/source-map-consumer.js", "../node_modules/source-map/lib/source-node.js", "../node_modules/source-map/source-map.js", "../node_modules/abstract-syntax-tree/src/sourcemap.js", "../node_modules/abstract-syntax-tree/src/mark.js", "../node_modules/abstract-syntax-tree/src/program.js", "../node_modules/abstract-syntax-tree/src/iife.js", "../node_modules/abstract-syntax-tree/src/nodes/Node.js", "../node_modules/abstract-syntax-tree/src/nodes/SourceLocation.js", "../node_modules/abstract-syntax-tree/src/nodes/Position.js", "../node_modules/abstract-syntax-tree/src/nodes/Identifier.js", "../node_modules/abstract-syntax-tree/src/nodes/Literal.js", "../node_modules/abstract-syntax-tree/src/nodes/RegExpLiteral.js", "../node_modules/abstract-syntax-tree/src/nodes/Program.js", "../node_modules/abstract-syntax-tree/src/nodes/Function.js", "../node_modules/abstract-syntax-tree/src/nodes/Statement.js", "../node_modules/abstract-syntax-tree/src/nodes/ExpressionStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/Directive.js", "../node_modules/abstract-syntax-tree/src/nodes/BlockStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/FunctionBody.js", "../node_modules/abstract-syntax-tree/src/nodes/EmptyStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/DebuggerStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/WithStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/ReturnStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/LabeledStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/BreakStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/ContinueStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/IfStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/SwitchStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/SwitchCase.js", "../node_modules/abstract-syntax-tree/src/nodes/ThrowStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/TryStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/CatchClause.js", "../node_modules/abstract-syntax-tree/src/nodes/WhileStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/DoWhileStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/ForStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/ForInStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/Declaration.js", "../node_modules/abstract-syntax-tree/src/nodes/FunctionDeclaration.js", "../node_modules/abstract-syntax-tree/src/nodes/VariableDeclaration.js", "../node_modules/abstract-syntax-tree/src/nodes/VariableDeclarator.js", "../node_modules/abstract-syntax-tree/src/nodes/Expression.js", "../node_modules/abstract-syntax-tree/src/nodes/ThisExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/ArrayExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/ObjectExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/Property.js", "../node_modules/abstract-syntax-tree/src/nodes/FunctionExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/UnaryExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/UnaryOperator.js", "../node_modules/abstract-syntax-tree/src/nodes/UpdateExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/UpdateOperator.js", "../node_modules/abstract-syntax-tree/src/nodes/BinaryExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/BinaryOperator.js", "../node_modules/abstract-syntax-tree/src/nodes/AssignmentExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/AssignmentOperator.js", "../node_modules/abstract-syntax-tree/src/nodes/LogicalExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/LogicalOperator.js", "../node_modules/abstract-syntax-tree/src/nodes/MemberExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/ConditionalExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/CallExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/NewExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/SequenceExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/Pattern.js", "../node_modules/abstract-syntax-tree/src/nodes/ForOfStatement.js", "../node_modules/abstract-syntax-tree/src/nodes/Super.js", "../node_modules/abstract-syntax-tree/src/nodes/SpreadElement.js", "../node_modules/abstract-syntax-tree/src/nodes/YieldExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/TemplateLiteral.js", "../node_modules/abstract-syntax-tree/src/nodes/TaggedTemplateExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/TemplateElement.js", "../node_modules/abstract-syntax-tree/src/nodes/ObjectPattern.js", "../node_modules/abstract-syntax-tree/src/nodes/ArrayPattern.js", "../node_modules/abstract-syntax-tree/src/nodes/RestElement.js", "../node_modules/abstract-syntax-tree/src/nodes/AssignmentPattern.js", "../node_modules/abstract-syntax-tree/src/nodes/Class.js", "../node_modules/abstract-syntax-tree/src/nodes/ClassBody.js", "../node_modules/abstract-syntax-tree/src/nodes/MethodDefinition.js", "../node_modules/abstract-syntax-tree/src/nodes/ClassDeclaration.js", "../node_modules/abstract-syntax-tree/src/nodes/ClassExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/MetaProperty.js", "../node_modules/abstract-syntax-tree/src/nodes/ModuleDeclaration.js", "../node_modules/abstract-syntax-tree/src/nodes/ModuleSpecifier.js", "../node_modules/abstract-syntax-tree/src/nodes/ImportDeclaration.js", "../node_modules/abstract-syntax-tree/src/nodes/ImportSpecifier.js", "../node_modules/abstract-syntax-tree/src/nodes/ImportDefaultSpecifier.js", "../node_modules/abstract-syntax-tree/src/nodes/ImportNamespaceSpecifier.js", "../node_modules/abstract-syntax-tree/src/nodes/ExportNamedDeclaration.js", "../node_modules/abstract-syntax-tree/src/nodes/ExportSpecifier.js", "../node_modules/abstract-syntax-tree/src/nodes/ExportDefaultDeclaration.js", "../node_modules/abstract-syntax-tree/src/nodes/ExportAllDeclaration.js", "../node_modules/abstract-syntax-tree/src/nodes/AwaitExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/BigIntLiteral.js", "../node_modules/abstract-syntax-tree/src/nodes/ChainExpression.js", "../node_modules/abstract-syntax-tree/src/nodes/ChainElement.js", "../node_modules/abstract-syntax-tree/src/nodes/ImportExpression.js", "../node_modules/abstract-syntax-tree/src/transform/toBinaryExpression.js", "../node_modules/abstract-syntax-tree/src/optimize/binaryExpressionReduction.js", "../node_modules/abstract-syntax-tree/src/optimize/utilities/isNodeTruthy.js", "../node_modules/abstract-syntax-tree/src/optimize/ifStatementRemoval.js", "../node_modules/abstract-syntax-tree/src/optimize/utilities/isGlobalProperty.js", "../node_modules/abstract-syntax-tree/src/optimize/logicalExpressionReduction.js", "../node_modules/abstract-syntax-tree/src/optimize/memberExpressionReduction.js", "../node_modules/abstract-syntax-tree/src/optimize/negationOperatorRemoval.js", "../node_modules/abstract-syntax-tree/src/optimize/ternaryOperatorReduction.js", "../node_modules/abstract-syntax-tree/src/optimize/typeofOperatorReduction.js", "../node_modules/abstract-syntax-tree/index.js", "../node_modules/string-comparison/lib/index.js", "../src/clone-detection/libs/read-files.js", "../src/clone-detection/libs/sort-match.js", "../src/clone-detection/libs/pre-processing.js", "../src/clone-detection/libs/parse-to-ast.js"],
  "sourcesContent": ["/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ChainExpression: 'ChainExpression',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ChainExpression: ['expression'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n  \n    function candidateExistsInLeaveList(leavelist, candidate) {\n        for (var i = leavelist.length - 1; i >= 0; --i) {\n            if (leavelist[i].node === candidate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n\n                            if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                              continue;\n                            }\n\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        if (candidateExistsInLeaveList(leavelist, candidate)) {\n                          continue;\n                        }\n\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "const estraverse = require('estraverse')\n\nmodule.exports = function walk (tree, callback) {\n  return estraverse.traverse(tree, { enter: callback })\n}\n", "function getValue (object, key) {\n  if (typeof object[key] !== 'undefined') return object[key]\n\n  key = ('' + key).split('.')\n  for (let i = 0; i < key.length; i++) {\n    object = object[key[i]]\n    if (typeof object === 'undefined') return\n  }\n  return object\n};\n\nfunction isPlainObject (object) {\n  return Object.prototype.toString.call(object) === '[object Object]'\n}\n\nfunction compare (node, criterias) {\n  for (const key in criterias) {\n    if (Object.prototype.hasOwnProperty.call(criterias, key)) {\n      const value1 = getValue(node, key)\n      const value2 = getValue(criterias, key)\n      if ({}.toString.call(value2) === '[object RegExp]') {\n        if (!value2.test(value1)) return false\n      } else if (isPlainObject(value2)) {\n        if (!compare(value1, value2)) return false\n      } else if (Array.isArray(value2) && Array.isArray(value1)) {\n        for (let i = value2.length - 1; i >= 0; i--) {\n          if (value1.indexOf(value2[i]) < 0) return false\n        }\n      } else if (Array.isArray(value2)) {\n        return false\n      } else if (Array.isArray(value1)) {\n        if (value1.indexOf(value2) < 0) return false\n      } else {\n        if (value1 !== value2) return false\n      }\n    }\n  }\n\n  return true\n};\n\nmodule.exports = function equal (node, criterias) {\n  return compare(node, criterias)\n}\n", "/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ChainExpression: 'ChainExpression',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ChainExpression: ['expression'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n  \n    function candidateExistsInLeaveList(leavelist, candidate) {\n        for (var i = leavelist.length - 1; i >= 0; --i) {\n            if (leavelist[i].node === candidate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n\n                            if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                              continue;\n                            }\n\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        if (candidateExistsInLeaveList(leavelist, candidate)) {\n                          continue;\n                        }\n\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  }\n})(this, function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = function(ss) {\n            return ss.length === 1 ? ss[0] : { type: 'matches', selectors: ss };\n          },\n        peg$c1 = function() { return void 0; },\n        peg$c2 = \" \",\n        peg$c3 = peg$literalExpectation(\" \", false),\n        peg$c4 = /^[^ [\\],():#!=><~+.]/,\n        peg$c5 = peg$classExpectation([\" \", \"[\", \"]\", \",\", \"(\", \")\", \":\", \"#\", \"!\", \"=\", \">\", \"<\", \"~\", \"+\", \".\"], true, false),\n        peg$c6 = function(i) { return i.join(''); },\n        peg$c7 = \">\",\n        peg$c8 = peg$literalExpectation(\">\", false),\n        peg$c9 = function() { return 'child'; },\n        peg$c10 = \"~\",\n        peg$c11 = peg$literalExpectation(\"~\", false),\n        peg$c12 = function() { return 'sibling'; },\n        peg$c13 = \"+\",\n        peg$c14 = peg$literalExpectation(\"+\", false),\n        peg$c15 = function() { return 'adjacent'; },\n        peg$c16 = function() { return 'descendant'; },\n        peg$c17 = \",\",\n        peg$c18 = peg$literalExpectation(\",\", false),\n        peg$c19 = function(s, ss) {\n          return [s].concat(ss.map(function (s) { return s[3]; }));\n        },\n        peg$c20 = function(a, ops) {\n            return ops.reduce(function (memo, rhs) {\n              return { type: rhs[0], left: memo, right: rhs[1] };\n            }, a);\n          },\n        peg$c21 = \"!\",\n        peg$c22 = peg$literalExpectation(\"!\", false),\n        peg$c23 = function(subject, as) {\n            const b = as.length === 1 ? as[0] : { type: 'compound', selectors: as };\n            if(subject) b.subject = true;\n            return b;\n          },\n        peg$c24 = \"*\",\n        peg$c25 = peg$literalExpectation(\"*\", false),\n        peg$c26 = function(a) { return { type: 'wildcard', value: a }; },\n        peg$c27 = \"#\",\n        peg$c28 = peg$literalExpectation(\"#\", false),\n        peg$c29 = function(i) { return { type: 'identifier', value: i }; },\n        peg$c30 = \"[\",\n        peg$c31 = peg$literalExpectation(\"[\", false),\n        peg$c32 = \"]\",\n        peg$c33 = peg$literalExpectation(\"]\", false),\n        peg$c34 = function(v) { return v; },\n        peg$c35 = /^[><!]/,\n        peg$c36 = peg$classExpectation([\">\", \"<\", \"!\"], false, false),\n        peg$c37 = \"=\",\n        peg$c38 = peg$literalExpectation(\"=\", false),\n        peg$c39 = function(a) { return (a || '') + '='; },\n        peg$c40 = /^[><]/,\n        peg$c41 = peg$classExpectation([\">\", \"<\"], false, false),\n        peg$c42 = \".\",\n        peg$c43 = peg$literalExpectation(\".\", false),\n        peg$c44 = function(a, as) {\n            return [].concat.apply([a], as).join('');\n          },\n        peg$c45 = function(name, op, value) {\n              return { type: 'attribute', name: name, operator: op, value: value };\n            },\n        peg$c46 = function(name) { return { type: 'attribute', name: name }; },\n        peg$c47 = \"\\\"\",\n        peg$c48 = peg$literalExpectation(\"\\\"\", false),\n        peg$c49 = /^[^\\\\\"]/,\n        peg$c50 = peg$classExpectation([\"\\\\\", \"\\\"\"], true, false),\n        peg$c51 = \"\\\\\",\n        peg$c52 = peg$literalExpectation(\"\\\\\", false),\n        peg$c53 = peg$anyExpectation(),\n        peg$c54 = function(a, b) { return a + b; },\n        peg$c55 = function(d) {\n                return { type: 'literal', value: strUnescape(d.join('')) };\n              },\n        peg$c56 = \"'\",\n        peg$c57 = peg$literalExpectation(\"'\", false),\n        peg$c58 = /^[^\\\\']/,\n        peg$c59 = peg$classExpectation([\"\\\\\", \"'\"], true, false),\n        peg$c60 = /^[0-9]/,\n        peg$c61 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c62 = function(a, b) {\n                // Can use `a.flat().join('')` once supported\n                const leadingDecimals = a ? [].concat.apply([], a).join('') : '';\n                return { type: 'literal', value: parseFloat(leadingDecimals + b.join('')) };\n              },\n        peg$c63 = function(i) { return { type: 'literal', value: i }; },\n        peg$c64 = \"type(\",\n        peg$c65 = peg$literalExpectation(\"type(\", false),\n        peg$c66 = /^[^ )]/,\n        peg$c67 = peg$classExpectation([\" \", \")\"], true, false),\n        peg$c68 = \")\",\n        peg$c69 = peg$literalExpectation(\")\", false),\n        peg$c70 = function(t) { return { type: 'type', value: t.join('') }; },\n        peg$c71 = /^[imsu]/,\n        peg$c72 = peg$classExpectation([\"i\", \"m\", \"s\", \"u\"], false, false),\n        peg$c73 = \"/\",\n        peg$c74 = peg$literalExpectation(\"/\", false),\n        peg$c75 = /^[^\\/]/,\n        peg$c76 = peg$classExpectation([\"/\"], true, false),\n        peg$c77 = function(d, flgs) { return {\n              type: 'regexp', value: new RegExp(d.join(''), flgs ? flgs.join('') : '') };\n            },\n        peg$c78 = function(i, is) {\n          return { type: 'field', name: is.reduce(function(memo, p){ return memo + p[0] + p[1]; }, i)};\n        },\n        peg$c79 = \":not(\",\n        peg$c80 = peg$literalExpectation(\":not(\", false),\n        peg$c81 = function(ss) { return { type: 'not', selectors: ss }; },\n        peg$c82 = \":matches(\",\n        peg$c83 = peg$literalExpectation(\":matches(\", false),\n        peg$c84 = function(ss) { return { type: 'matches', selectors: ss }; },\n        peg$c85 = \":has(\",\n        peg$c86 = peg$literalExpectation(\":has(\", false),\n        peg$c87 = function(ss) { return { type: 'has', selectors: ss }; },\n        peg$c88 = \":first-child\",\n        peg$c89 = peg$literalExpectation(\":first-child\", false),\n        peg$c90 = function() { return nth(1); },\n        peg$c91 = \":last-child\",\n        peg$c92 = peg$literalExpectation(\":last-child\", false),\n        peg$c93 = function() { return nthLast(1); },\n        peg$c94 = \":nth-child(\",\n        peg$c95 = peg$literalExpectation(\":nth-child(\", false),\n        peg$c96 = function(n) { return nth(parseInt(n.join(''), 10)); },\n        peg$c97 = \":nth-last-child(\",\n        peg$c98 = peg$literalExpectation(\":nth-last-child(\", false),\n        peg$c99 = function(n) { return nthLast(parseInt(n.join(''), 10)); },\n        peg$c100 = \":\",\n        peg$c101 = peg$literalExpectation(\":\", false),\n        peg$c102 = \"statement\",\n        peg$c103 = peg$literalExpectation(\"statement\", true),\n        peg$c104 = \"expression\",\n        peg$c105 = peg$literalExpectation(\"expression\", true),\n        peg$c106 = \"declaration\",\n        peg$c107 = peg$literalExpectation(\"declaration\", true),\n        peg$c108 = \"function\",\n        peg$c109 = peg$literalExpectation(\"function\", true),\n        peg$c110 = \"pattern\",\n        peg$c111 = peg$literalExpectation(\"pattern\", true),\n        peg$c112 = function(c) {\n          return { type: 'class', name: c };\n        },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$resultsCache = {},\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 0,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselectors();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1();\n        }\n        s0 = s1;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 1,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = [];\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c3); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s1 = peg$c2;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseidentifierName() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 2,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c4.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c4.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c6(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsebinaryOp() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 3,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s2 = peg$c7;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c9();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 126) {\n            s2 = peg$c10;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c12();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s2 = peg$c13;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parse_();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 32) {\n              s1 = peg$c2;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c16();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseselectors() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 30 + 4,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseselector();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c17;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseselector();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseselector();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c19(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 5,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsesequence();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsebinaryOp();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsesequence();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsebinaryOp();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsesequence();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsesequence() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 6,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseatom();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseatom();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c23(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseatom() {\n      var s0;\n\n      var key    = peg$currPos * 30 + 7,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$parsewildcard();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseidentifier();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseattr();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsefield();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsenegation();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsematches();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsehas();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsefirstChild();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parselastChild();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parsenthChild();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsenthLastChild();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseclass();\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsewildcard() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 8,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s1 = peg$c24;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c26(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseidentifier() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 9,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c27;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifierName();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 10,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c30;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c31); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattrValue();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c32;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c33); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrOps() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 11,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (peg$c35.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrEqOps() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 12,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrName() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 13,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifierName();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s4 = peg$c42;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseidentifierName();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c42;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseidentifierName();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrValue() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 14,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseattrName();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattrEqOps();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsetype();\n              if (s5 === peg$FAILED) {\n                s5 = peg$parseregex();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c45(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseattrName();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseattrOps();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsestring();\n                if (s5 === peg$FAILED) {\n                  s5 = peg$parsenumber();\n                  if (s5 === peg$FAILED) {\n                    s5 = peg$parsepath();\n                  }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c45(s1, s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseattrName();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c46(s1);\n          }\n          s0 = s1;\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 15,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c47;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c49.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s4 = peg$c51;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c53); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c54(s4, s5);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c53); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c47;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c55(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s1 = peg$c56;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c57); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          if (peg$c58.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c59); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c53); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c58.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c59); }\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 92) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c53); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c54(s4, s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s3 = peg$c56;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c55(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 16,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c60.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c61); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s3 = peg$c42;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c60.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c61); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c62(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsepath() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 17,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifierName();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c63(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetype() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 18,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c64) {\n        s1 = peg$c64;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c66.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c66.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c67); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c70(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseflags() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 19,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = [];\n      if (peg$c71.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c71.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseregex() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 30 + 20,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c75.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c76); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c75.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c76); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s3 = peg$c73;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseflags();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c77(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefield() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 30 + 21,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c42;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifierName();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c42;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseidentifierName();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseidentifierName();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c78(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenegation() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 22,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c79) {\n        s1 = peg$c79;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c81(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsematches() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 23,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 9) === peg$c82) {\n        s1 = peg$c82;\n        peg$currPos += 9;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c84(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsehas() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 24,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c85) {\n        s1 = peg$c85;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c87(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefirstChild() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 25,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 12) === peg$c88) {\n        s1 = peg$c88;\n        peg$currPos += 12;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c89); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parselastChild() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 26,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11) === peg$c91) {\n        s1 = peg$c91;\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c92); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c93();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenthChild() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 27,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11) === peg$c94) {\n        s1 = peg$c94;\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c61); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c96(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenthLastChild() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 28,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 16) === peg$c97) {\n        s1 = peg$c97;\n        peg$currPos += 16;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c98); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c61); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c99(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseclass() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 29,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s1 = peg$c100;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c101); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 9).toLowerCase() === peg$c102) {\n          s2 = input.substr(peg$currPos, 9);\n          peg$currPos += 9;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c103); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 10).toLowerCase() === peg$c104) {\n            s2 = input.substr(peg$currPos, 10);\n            peg$currPos += 10;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c105); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 11).toLowerCase() === peg$c106) {\n              s2 = input.substr(peg$currPos, 11);\n              peg$currPos += 11;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c107); }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 8).toLowerCase() === peg$c108) {\n                s2 = input.substr(peg$currPos, 8);\n                peg$currPos += 8;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c109); }\n              }\n              if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 7).toLowerCase() === peg$c110) {\n                  s2 = input.substr(peg$currPos, 7);\n                  peg$currPos += 7;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c111); }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c112(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n\n      function nth(n) { return { type: 'nth-child', index: { type: 'literal', value: n } }; }\n      function nthLast(n) { return { type: 'nth-last-child', index: { type: 'literal', value: n } }; }\n      function strUnescape(s) {\n        return s.replace(/\\\\(.)/g, function(match, ch) {\n          switch(ch) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            default: return ch;\n          }\n        });\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n});\n", "/* vim: set sw=4 sts=4 : */\nimport estraverse from 'estraverse';\nimport parser from './parser.js';\n\n/**\n* @typedef {\"LEFT_SIDE\"|\"RIGHT_SIDE\"} Side\n*/\n\nconst LEFT_SIDE = 'LEFT_SIDE';\nconst RIGHT_SIDE = 'RIGHT_SIDE';\n\n/**\n * @external AST\n * @see https://esprima.readthedocs.io/en/latest/syntax-tree-format.html\n */\n\n/**\n * One of the rules of `grammar.pegjs`\n * @typedef {PlainObject} SelectorAST\n * @see grammar.pegjs\n*/\n\n/**\n * The `sequence` production of `grammar.pegjs`\n * @typedef {PlainObject} SelectorSequenceAST\n*/\n\n/**\n * Get the value of a property which may be multiple levels down\n * in the object.\n * @param {?PlainObject} obj\n * @param {string} key\n * @returns {undefined|boolean|string|number|external:AST}\n */\nfunction getPath(obj, key) {\n    const keys = key.split('.');\n    for (const key of keys) {\n        if (obj == null) { return obj; }\n        obj = obj[key];\n    }\n    return obj;\n}\n\n/**\n * Determine whether `node` can be reached by following `path`,\n * starting at `ancestor`.\n * @param {?external:AST} node\n * @param {?external:AST} ancestor\n * @param {string[]} path\n * @returns {boolean}\n */\nfunction inPath(node, ancestor, path) {\n    if (path.length === 0) { return node === ancestor; }\n    if (ancestor == null) { return false; }\n    const field = ancestor[path[0]];\n    const remainingPath = path.slice(1);\n    if (Array.isArray(field)) {\n        for (const component of field) {\n            if (inPath(node, component, remainingPath)) { return true; }\n        }\n        return false;\n    } else {\n        return inPath(node, field, remainingPath);\n    }\n}\n\n/**\n * @callback TraverseOptionFallback\n * @param {external:AST} node The given node.\n * @returns {string[]} An array of visitor keys for the given node.\n */\n/**\n * @typedef {object} ESQueryOptions\n * @property { { [nodeType: string]: string[] } } [visitorKeys] By passing `visitorKeys` mapping, we can extend the properties of the nodes that traverse the node.\n * @property {TraverseOptionFallback} [fallback] By passing `fallback` option, we can control the properties of traversing nodes when encountering unknown nodes.\n */\n\n/**\n * Given a `node` and its ancestors, determine if `node` is matched\n * by `selector`.\n * @param {?external:AST} node\n * @param {?SelectorAST} selector\n * @param {external:AST[]} [ancestry=[]]\n * @param {ESQueryOptions} [options]\n * @throws {Error} Unknowns (operator, class name, selector type, or\n * selector value type)\n * @returns {boolean}\n */\nfunction matches(node, selector, ancestry, options) {\n    if (!selector) { return true; }\n    if (!node) { return false; }\n    if (!ancestry) { ancestry = []; }\n\n    switch(selector.type) {\n        case 'wildcard':\n            return true;\n\n        case 'identifier':\n            return selector.value.toLowerCase() === node.type.toLowerCase();\n\n        case 'field': {\n            const path = selector.name.split('.');\n            const ancestor = ancestry[path.length - 1];\n            return inPath(node, ancestor, path);\n\n        }\n        case 'matches':\n            for (const sel of selector.selectors) {\n                if (matches(node, sel, ancestry, options)) { return true; }\n            }\n            return false;\n\n        case 'compound':\n            for (const sel of selector.selectors) {\n                if (!matches(node, sel, ancestry, options)) { return false; }\n            }\n            return true;\n\n        case 'not':\n            for (const sel of selector.selectors) {\n                if (matches(node, sel, ancestry, options)) { return false; }\n            }\n            return true;\n\n        case 'has': {\n            const collector = [];\n            for (const sel of selector.selectors) {\n                const a = [];\n                estraverse.traverse(node, {\n                    enter (node, parent) {\n                        if (parent != null) { a.unshift(parent); }\n                        if (matches(node, sel, a, options)) {\n                            collector.push(node);\n                        }\n                    },\n                    leave () { a.shift(); },\n                    keys: options && options.visitorKeys,\n                    fallback: options && options.fallback || 'iteration'\n                });\n            }\n            return collector.length !== 0;\n\n        }\n        case 'child':\n            if (matches(node, selector.right, ancestry, options)) {\n                return matches(ancestry[0], selector.left, ancestry.slice(1), options);\n            }\n            return false;\n\n        case 'descendant':\n            if (matches(node, selector.right, ancestry, options)) {\n                for (let i = 0, l = ancestry.length; i < l; ++i) {\n                    if (matches(ancestry[i], selector.left, ancestry.slice(i + 1), options)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n\n        case 'attribute': {\n            const p = getPath(node, selector.name);\n            switch (selector.operator) {\n                case void 0:\n                    return p != null;\n                case '=':\n                    switch (selector.value.type) {\n                        case 'regexp': return typeof p === 'string' && selector.value.value.test(p);\n                        case 'literal': return `${selector.value.value}` === `${p}`;\n                        case 'type': return selector.value.value === typeof p;\n                    }\n                    throw new Error(`Unknown selector value type: ${selector.value.type}`);\n                case '!=':\n                    switch (selector.value.type) {\n                        case 'regexp': return !selector.value.value.test(p);\n                        case 'literal': return `${selector.value.value}` !== `${p}`;\n                        case 'type': return selector.value.value !== typeof p;\n                    }\n                    throw new Error(`Unknown selector value type: ${selector.value.type}`);\n                case '<=': return p <= selector.value.value;\n                case '<': return p < selector.value.value;\n                case '>': return p > selector.value.value;\n                case '>=': return p >= selector.value.value;\n            }\n            throw new Error(`Unknown operator: ${selector.operator}`);\n        }\n        case 'sibling':\n            return matches(node, selector.right, ancestry, options) &&\n                sibling(node, selector.left, ancestry, LEFT_SIDE, options) ||\n                selector.left.subject &&\n                matches(node, selector.left, ancestry, options) &&\n                sibling(node, selector.right, ancestry, RIGHT_SIDE, options);\n        case 'adjacent':\n            return matches(node, selector.right, ancestry, options) &&\n                adjacent(node, selector.left, ancestry, LEFT_SIDE, options) ||\n                selector.right.subject &&\n                matches(node, selector.left, ancestry, options) &&\n                adjacent(node, selector.right, ancestry, RIGHT_SIDE, options);\n\n        case 'nth-child':\n            return matches(node, selector.right, ancestry, options) &&\n                nthChild(node, ancestry, function () {\n                    return selector.index.value - 1;\n                }, options);\n\n        case 'nth-last-child':\n            return matches(node, selector.right, ancestry, options) &&\n                nthChild(node, ancestry, function (length) {\n                    return length - selector.index.value;\n                }, options);\n\n        case 'class':\n            switch(selector.name.toLowerCase()){\n                case 'statement':\n                    if(node.type.slice(-9) === 'Statement') return true;\n                    // fallthrough: interface Declaration <: Statement { }\n                case 'declaration':\n                    return node.type.slice(-11) === 'Declaration';\n                case 'pattern':\n                    if(node.type.slice(-7) === 'Pattern') return true;\n                    // fallthrough: interface Expression <: Node, Pattern { }\n                case 'expression':\n                    return node.type.slice(-10) === 'Expression' ||\n                        node.type.slice(-7) === 'Literal' ||\n                        (\n                            node.type === 'Identifier' &&\n                            (ancestry.length === 0 || ancestry[0].type !== 'MetaProperty')\n                        ) ||\n                        node.type === 'MetaProperty';\n                case 'function':\n                    return node.type === 'FunctionDeclaration' ||\n                        node.type === 'FunctionExpression' ||\n                        node.type === 'ArrowFunctionExpression';\n            }\n            throw new Error(`Unknown class name: ${selector.name}`);\n    }\n\n    throw new Error(`Unknown selector type: ${selector.type}`);\n}\n\n/**\n * Get visitor keys of a given node.\n * @param {external:AST} node The AST node to get keys.\n * @param {ESQueryOptions|undefined} options\n * @returns {string[]} Visitor keys of the node.\n */\nfunction getVisitorKeys(node, options) {\n    const nodeType = node.type;\n    if (options && options.visitorKeys && options.visitorKeys[nodeType]) {\n        return options.visitorKeys[nodeType];\n    }\n    if (estraverse.VisitorKeys[nodeType]) {\n        return estraverse.VisitorKeys[nodeType];\n    }\n    if (options && typeof options.fallback === 'function') {\n        return options.fallback(node);\n    }\n    // 'iteration' fallback\n    return Object.keys(node).filter(function (key) {\n        return key !== 'type';\n    });\n}\n\n\n/**\n * Check whether the given value is an ASTNode or not.\n * @param {any} node The value to check.\n * @returns {boolean} `true` if the value is an ASTNode.\n */\nfunction isNode(node) {\n    return node !== null && typeof node === 'object' && typeof node.type === 'string';\n}\n\n/**\n * Determines if the given node has a sibling that matches the\n * given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\nfunction sibling(node, selector, ancestry, side, options) {\n    const [parent] = ancestry;\n    if (!parent) { return false; }\n    const keys = getVisitorKeys(parent, options);\n    for (const key of keys) {\n        const listProp = parent[key];\n        if (Array.isArray(listProp)) {\n            const startIndex = listProp.indexOf(node);\n            if (startIndex < 0) { continue; }\n            let lowerBound, upperBound;\n            if (side === LEFT_SIDE) {\n                lowerBound = 0;\n                upperBound = startIndex;\n            } else {\n                lowerBound = startIndex + 1;\n                upperBound = listProp.length;\n            }\n            for (let k = lowerBound; k < upperBound; ++k) {\n                if (isNode(listProp[k]) && matches(listProp[k], selector, ancestry, options)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * Determines if the given node has an adjacent sibling that matches\n * the given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\nfunction adjacent(node, selector, ancestry, side, options) {\n    const [parent] = ancestry;\n    if (!parent) { return false; }\n    const keys = getVisitorKeys(parent, options);\n    for (const key of keys) {\n        const listProp = parent[key];\n        if (Array.isArray(listProp)) {\n            const idx = listProp.indexOf(node);\n            if (idx < 0) { continue; }\n            if (side === LEFT_SIDE && idx > 0 && isNode(listProp[idx - 1]) && matches(listProp[idx - 1], selector, ancestry, options)) {\n                return true;\n            }\n            if (side === RIGHT_SIDE && idx < listProp.length - 1 && isNode(listProp[idx + 1]) &&  matches(listProp[idx + 1], selector, ancestry, options)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n* @callback IndexFunction\n* @param {Integer} len Containing list's length\n* @returns {Integer}\n*/\n\n/**\n * Determines if the given node is the nth child, determined by\n * `idxFn`, which is given the containing list's length.\n * @param {external:AST} node\n * @param {external:AST[]} ancestry\n * @param {IndexFunction} idxFn\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\nfunction nthChild(node, ancestry, idxFn, options) {\n    const [parent] = ancestry;\n    if (!parent) { return false; }\n    const keys = getVisitorKeys(parent, options);\n    for (const key of keys) {\n        const listProp = parent[key];\n        if (Array.isArray(listProp)) {\n            const idx = listProp.indexOf(node);\n            if (idx >= 0 && idx === idxFn(listProp.length)) { return true; }\n        }\n    }\n    return false;\n}\n\n/**\n * For each selector node marked as a subject, find the portion of the\n * selector that the subject must match.\n * @param {SelectorAST} selector\n * @param {SelectorAST} [ancestor] Defaults to `selector`\n * @returns {SelectorAST[]}\n */\nfunction subjects(selector, ancestor) {\n    if (selector == null || typeof selector != 'object') { return []; }\n    if (ancestor == null) { ancestor = selector; }\n    const results = selector.subject ? [ancestor] : [];\n    for (const [p, sel] of Object.entries(selector)) {\n        results.push(...subjects(sel, p === 'left' ? sel : ancestor));\n    }\n    return results;\n}\n\n/**\n* @callback TraverseVisitor\n* @param {?external:AST} node\n* @param {?external:AST} parent\n* @param {external:AST[]} ancestry\n*/\n\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {TraverseVisitor} visitor\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\nfunction traverse(ast, selector, visitor, options) {\n    if (!selector) { return; }\n    const ancestry = [];\n    const altSubjects = subjects(selector);\n    estraverse.traverse(ast, {\n        enter (node, parent) {\n            if (parent != null) { ancestry.unshift(parent); }\n            if (matches(node, selector, ancestry, options)) {\n                if (altSubjects.length) {\n                    for (let i = 0, l = altSubjects.length; i < l; ++i) {\n                        if (matches(node, altSubjects[i], ancestry, options)) {\n                            visitor(node, parent, ancestry);\n                        }\n                        for (let k = 0, m = ancestry.length; k < m; ++k) {\n                            const succeedingAncestry = ancestry.slice(k + 1);\n                            if (matches(ancestry[k], altSubjects[i], succeedingAncestry, options)) {\n                                visitor(ancestry[k], parent, succeedingAncestry);\n                            }\n                        }\n                    }\n                } else {\n                    visitor(node, parent, ancestry);\n                }\n            }\n        },\n        leave () { ancestry.shift(); },\n        keys: options && options.visitorKeys,\n        fallback: options && options.fallback || 'iteration'\n    });\n}\n\n\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\nfunction match(ast, selector, options) {\n    const results = [];\n    traverse(ast, selector, function (node) {\n        results.push(node);\n    }, options);\n    return results;\n}\n\n/**\n * Parse a selector string and return its AST.\n * @param {string} selector\n * @returns {SelectorAST}\n */\nfunction parse(selector) {\n    return parser.parse(selector);\n}\n\n/**\n * Query the code AST using the selector string.\n * @param {external:AST} ast\n * @param {string} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\nfunction query(ast, selector, options) {\n    return match(ast, parse(selector), options);\n}\n\nquery.parse = parse;\nquery.match = match;\nquery.traverse = traverse;\nquery.matches = matches;\nquery.query = query;\n\nexport default query;\n", "const walk = require('../walk')\nconst equal = require('../equal')\nconst TYPES = require('../../types.json')\nconst esquery = require('esquery')\n\nfunction isTypeSelector (selector) {\n  return TYPES.includes(selector)\n}\n\nfunction isWildcardSelector (selector) {\n  return selector === '*'\n}\n\nfunction isQuerySelector (selector) {\n  return typeof selector === 'string'\n}\n\nfunction findByType (tree, selector) {\n  return findByComparison(tree, { type: selector })\n}\n\nfunction findByWildcard (tree) {\n  const nodes = []\n  walk(tree, (node) => {\n    nodes.push(node)\n  })\n  return nodes\n}\n\nfunction findByQuery (tree, selector) {\n  return esquery(tree, selector)\n}\n\nfunction findByComparison (tree, selector) {\n  const nodes = []\n  walk(tree, (node) => {\n    if (equal(node, selector)) {\n      nodes.push(node)\n    }\n  })\n  return nodes\n}\n\nmodule.exports = function find (tree, selector) {\n  if (isTypeSelector(selector)) {\n    return findByType(tree, selector)\n  }\n  if (isWildcardSelector(selector)) {\n    return findByWildcard(tree)\n  }\n  if (isQuerySelector(selector)) {\n    return findByQuery(tree, selector)\n  }\n  return findByComparison(tree, selector)\n}\n", "const find = require('./find')\n\nmodule.exports = function each (tree, selector, callback) {\n  return find(tree, selector).forEach(callback)\n}\n", "const find = require('./find')\n\nmodule.exports = function first (tree, selector) {\n  return find(tree, selector)[0]\n}\n", "const find = require('./find')\n\nmodule.exports = function last (tree, selector) {\n  const nodes = find(tree, selector)\n  return nodes[nodes.length - 1]\n}\n", "const find = require('./find')\n\nmodule.exports = function count (tree, selector) {\n  return find(tree, selector).length\n}\n", "const estraverse = require('estraverse')\n\nmodule.exports = function traverse (tree, options) {\n  return estraverse.traverse(tree, options)\n}\n", "const count = require('./count')\nconst traverse = require('./traverse')\nconst equal = require('./equal')\n\nmodule.exports = function has (tree, selector) {\n  if (typeof selector === 'string') {\n    return count(tree, selector) > 0\n  }\n  let found = false\n  traverse(tree, {\n    enter (node) {\n      if (equal(node, selector)) {\n        found = true\n        return this.break()\n      }\n    }\n  })\n  return found\n}\n", "const estraverse = require('estraverse')\nconst find = require('./find')\nconst equal = require('./equal')\n\nfunction removeBySelector (tree, selector, options) {\n  const nodes = find(tree, selector)\n  removeByNode(tree, leaf => {\n    for (let i = 0, ilen = nodes.length; i < ilen; i += 1) {\n      if (equal(leaf, nodes[i])) {\n        return true\n      }\n    }\n    return false\n  }, options)\n}\n\nfunction removeByCallback (tree, callback, options) {\n  estraverse.replace(tree, {\n    enter (current) {\n      if (callback(current) === null) {\n        return this.remove()\n      }\n    },\n    leave (current) {\n      if (isNodeEmpty(current)) {\n        return this.remove()\n      }\n    }\n  })\n}\n\nfunction removeByNode (tree, compare, options) {\n  let count = 0\n  estraverse.replace(tree, {\n    enter (current) {\n      if (options.first && count === 1) {\n        return this.break()\n      }\n      if (compare(current)) {\n        count += 1\n        return this.remove()\n      }\n    },\n    leave (current) {\n      if (isNodeEmpty(current)) {\n        return this.remove()\n      }\n    }\n  })\n}\n\nfunction isExpressionEmpty (node) {\n  return node.expression === null\n}\n\nfunction isVariableDeclarationEmpty (node) {\n  return node.type === 'VariableDeclaration' && node.declarations.length === 0\n}\n\nfunction isNodeEmpty (node) {\n  return isExpressionEmpty(node) || isVariableDeclarationEmpty(node)\n}\n\nmodule.exports = function remove (tree, handle, options = {}) {\n  if (typeof handle === 'string') {\n    return removeBySelector(tree, handle, options)\n  } else if (typeof handle === 'function') {\n    return removeByCallback(tree, handle, options)\n  }\n  removeByNode(tree, node => equal(node, handle), options)\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst errorMessages = {\r\n    [0]: 'Unexpected token',\r\n    [28]: \"Unexpected token: '%0'\",\r\n    [1]: 'Octal escape sequences are not allowed in strict mode',\r\n    [2]: 'Octal escape sequences are not allowed in template strings',\r\n    [3]: 'Unexpected token `#`',\r\n    [4]: 'Illegal Unicode escape sequence',\r\n    [5]: 'Invalid code point %0',\r\n    [6]: 'Invalid hexadecimal escape sequence',\r\n    [8]: 'Octal literals are not allowed in strict mode',\r\n    [7]: 'Decimal integer literals with a leading zero are forbidden in strict mode',\r\n    [9]: 'Expected number in radix %0',\r\n    [145]: 'Invalid left-hand side assignment to a destructible right-hand side',\r\n    [10]: 'Non-number found after exponent indicator',\r\n    [11]: 'Invalid BigIntLiteral',\r\n    [12]: 'No identifiers allowed directly after numeric literal',\r\n    [13]: 'Escapes \\\\8 or \\\\9 are not syntactically valid escapes',\r\n    [14]: 'Unterminated string literal',\r\n    [15]: 'Unterminated template literal',\r\n    [16]: 'Multiline comment was not closed properly',\r\n    [17]: 'The identifier contained dynamic unicode escape that was not closed',\r\n    [18]: \"Illegal character '%0'\",\r\n    [19]: 'Missing hexadecimal digits',\r\n    [20]: 'Invalid implicit octal',\r\n    [21]: 'Invalid line break in string literal',\r\n    [22]: 'Only unicode escapes are legal in identifier names',\r\n    [23]: \"Expected '%0'\",\r\n    [24]: 'Invalid left-hand side in assignment',\r\n    [25]: 'Invalid left-hand side in async arrow',\r\n    [26]: 'Calls to super must be in the \"constructor\" method of a class expression or class declaration that has a superclass',\r\n    [27]: 'Member access on super must be in a method',\r\n    [29]: 'Await expression not allowed in formal parameter',\r\n    [30]: 'Yield expression not allowed in formal parameter',\r\n    [92]: \"Unexpected token: 'escaped keyword'\",\r\n    [31]: 'Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses',\r\n    [119]: 'Async functions can only be declared at the top level or inside a block',\r\n    [32]: 'Unterminated regular expression',\r\n    [33]: 'Unexpected regular expression flag',\r\n    [34]: \"Duplicate regular expression flag '%0'\",\r\n    [35]: '%0 functions must have exactly %1 argument%2',\r\n    [36]: 'Setter function argument must not be a rest parameter',\r\n    [37]: '%0 declaration must have a name in this context',\r\n    [38]: 'Function name may not contain any reserved words or be eval or arguments in strict mode',\r\n    [39]: 'The rest operator is missing an argument',\r\n    [40]: 'A getter cannot be a generator',\r\n    [41]: 'A computed property name must be followed by a colon or paren',\r\n    [130]: 'Object literal keys that are strings or numbers must be a method or have a colon',\r\n    [43]: 'Found `* async x(){}` but this should be `async * x(){}`',\r\n    [42]: 'Getters and setters can not be generators',\r\n    [44]: \"'%0' can not be generator method\",\r\n    [45]: \"No line break is allowed after '=>'\",\r\n    [46]: 'The left-hand side of the arrow can only be destructed through assignment',\r\n    [47]: 'The binding declaration is not destructible',\r\n    [48]: 'Async arrow can not be followed by new expression',\r\n    [49]: \"Classes may not have a static property named 'prototype'\",\r\n    [50]: 'Class constructor may not be a %0',\r\n    [51]: 'Duplicate constructor method in class',\r\n    [52]: 'Invalid increment/decrement operand',\r\n    [53]: 'Invalid use of `new` keyword on an increment/decrement expression',\r\n    [54]: '`=>` is an invalid assignment target',\r\n    [55]: 'Rest element may not have a trailing comma',\r\n    [56]: 'Missing initializer in %0 declaration',\r\n    [57]: \"'for-%0' loop head declarations can not have an initializer\",\r\n    [58]: 'Invalid left-hand side in for-%0 loop: Must have a single binding',\r\n    [59]: 'Invalid shorthand property initializer',\r\n    [60]: 'Property name __proto__ appears more than once in object literal',\r\n    [61]: 'Let is disallowed as a lexically bound name',\r\n    [62]: \"Invalid use of '%0' inside new expression\",\r\n    [63]: \"Illegal 'use strict' directive in function with non-simple parameter list\",\r\n    [64]: 'Identifier \"let\" disallowed as left-hand side expression in strict mode',\r\n    [65]: 'Illegal continue statement',\r\n    [66]: 'Illegal break statement',\r\n    [67]: 'Cannot have `let[...]` as a var name in strict mode',\r\n    [68]: 'Invalid destructuring assignment target',\r\n    [69]: 'Rest parameter may not have a default initializer',\r\n    [70]: 'The rest argument must the be last parameter',\r\n    [71]: 'Invalid rest argument',\r\n    [73]: 'In strict mode code, functions can only be declared at top level or inside a block',\r\n    [74]: 'In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement',\r\n    [75]: 'Without web compatibility enabled functions can not be declared at top level, inside a block, or as the body of an if statement',\r\n    [76]: \"Class declaration can't appear in single-statement context\",\r\n    [77]: 'Invalid left-hand side in for-%0',\r\n    [78]: 'Invalid assignment in for-%0',\r\n    [79]: 'for await (... of ...) is only valid in async functions and async generators',\r\n    [80]: 'The first token after the template expression should be a continuation of the template',\r\n    [82]: '`let` declaration not allowed here and `let` cannot be a regular var name in strict mode',\r\n    [81]: '`let \\n [` is a restricted production at the start of a statement',\r\n    [83]: 'Catch clause requires exactly one parameter, not more (and no trailing comma)',\r\n    [84]: 'Catch clause parameter does not support default values',\r\n    [85]: 'Missing catch or finally after try',\r\n    [86]: 'More than one default clause in switch statement',\r\n    [87]: 'Illegal newline after throw',\r\n    [88]: 'Strict mode code may not include a with statement',\r\n    [89]: 'Illegal return statement',\r\n    [90]: 'The left hand side of the for-header binding declaration is not destructible',\r\n    [91]: 'new.target only allowed within functions',\r\n    [93]: \"'#' not followed by identifier\",\r\n    [99]: 'Invalid keyword',\r\n    [98]: \"Can not use 'let' as a class name\",\r\n    [97]: \"'A lexical declaration can't define a 'let' binding\",\r\n    [96]: 'Can not use `let` as variable name in strict mode',\r\n    [94]: \"'%0' may not be used as an identifier in this context\",\r\n    [95]: 'Await is only valid in async functions',\r\n    [100]: 'The %0 keyword can only be used with the module goal',\r\n    [101]: 'Unicode codepoint must not be greater than 0x10FFFF',\r\n    [102]: '%0 source must be string',\r\n    [103]: 'Only a identifier can be used to indicate alias',\r\n    [104]: \"Only '*' or '{...}' can be imported after default\",\r\n    [105]: 'Trailing decorator may be followed by method',\r\n    [106]: \"Decorators can't be used with a constructor\",\r\n    [108]: 'HTML comments are only allowed with web compatibility (Annex B)',\r\n    [109]: \"The identifier 'let' must not be in expression position in strict mode\",\r\n    [110]: 'Cannot assign to `eval` and `arguments` in strict mode',\r\n    [111]: \"The left-hand side of a for-of loop may not start with 'let'\",\r\n    [112]: 'Block body arrows can not be immediately invoked without a group',\r\n    [113]: 'Block body arrows can not be immediately accessed without a group',\r\n    [114]: 'Unexpected strict mode reserved word',\r\n    [115]: 'Unexpected eval or arguments in strict mode',\r\n    [116]: 'Decorators must not be followed by a semicolon',\r\n    [117]: 'Calling delete on expression not allowed in strict mode',\r\n    [118]: 'Pattern can not have a tail',\r\n    [120]: 'Can not have a `yield` expression on the left side of a ternary',\r\n    [121]: 'An arrow function can not have a postfix update operator',\r\n    [122]: 'Invalid object literal key character after generator star',\r\n    [123]: 'Private fields can not be deleted',\r\n    [125]: 'Classes may not have a field called constructor',\r\n    [124]: 'Classes may not have a private element named constructor',\r\n    [126]: 'A class field initializer may not contain arguments',\r\n    [127]: 'Generators can only be declared at the top level or inside a block',\r\n    [128]: 'Async methods are a restricted production and cannot have a newline following it',\r\n    [129]: 'Unexpected character after object literal property name',\r\n    [131]: 'Invalid key token',\r\n    [132]: \"Label '%0' has already been declared\",\r\n    [133]: 'continue statement must be nested within an iteration statement',\r\n    [134]: \"Undefined label '%0'\",\r\n    [135]: 'Trailing comma is disallowed inside import(...) arguments',\r\n    [136]: 'import() requires exactly one argument',\r\n    [137]: 'Cannot use new with import(...)',\r\n    [138]: '... is not allowed in import()',\r\n    [139]: \"Expected '=>'\",\r\n    [140]: \"Duplicate binding '%0'\",\r\n    [141]: \"Cannot export a duplicate name '%0'\",\r\n    [144]: 'Duplicate %0 for-binding',\r\n    [142]: \"Exported binding '%0' needs to refer to a top-level declared variable\",\r\n    [143]: 'Unexpected private field',\r\n    [147]: 'Numeric separators are not allowed at the end of numeric literals',\r\n    [146]: 'Only one underscore is allowed as numeric separator',\r\n    [148]: 'JSX value should be either an expression or a quoted JSX text',\r\n    [149]: 'Expected corresponding JSX closing tag for %0',\r\n    [150]: 'Adjacent JSX elements must be wrapped in an enclosing tag',\r\n    [151]: \"JSX attributes must only be assigned a non-empty 'expression'\",\r\n    [152]: \"'%0' has already been declared\",\r\n    [153]: \"'%0' shadowed a catch clause binding\",\r\n    [154]: 'Dot property must be an identifier',\r\n    [155]: 'Encountered invalid input after spread/rest argument',\r\n    [156]: 'Catch without try',\r\n    [157]: 'Finally without try',\r\n    [158]: 'Expected corresponding closing tag for JSX fragment',\r\n    [159]: 'Coalescing and logical operators used together in the same expression must be disambiguated with parentheses',\r\n    [160]: 'Invalid tagged template on optional chain',\r\n    [161]: 'Invalid optional chain from super property',\r\n    [162]: 'Invalid optional chain from new expression',\r\n    [163]: 'Cannot use \"import.meta\" outside a module',\r\n    [164]: 'Leading decorators must be attached to a class declaration'\r\n};\r\nclass ParseError extends SyntaxError {\r\n    constructor(startindex, line, column, type, ...params) {\r\n        const message = '[' + line + ':' + column + ']: ' + errorMessages[type].replace(/%(\\d+)/g, (_, i) => params[i]);\r\n        super(`${message}`);\r\n        this.index = startindex;\r\n        this.line = line;\r\n        this.column = column;\r\n        this.description = message;\r\n        this.loc = {\r\n            line,\r\n            column\r\n        };\r\n    }\r\n}\r\nfunction report(parser, type, ...params) {\r\n    throw new ParseError(parser.index, parser.line, parser.column, type, ...params);\r\n}\r\nfunction reportScopeError(scope) {\r\n    throw new ParseError(scope.index, scope.line, scope.column, scope.type, scope.params);\r\n}\r\nfunction reportMessageAt(index, line, column, type, ...params) {\r\n    throw new ParseError(index, line, column, type, ...params);\r\n}\r\nfunction reportScannerError(index, line, column, type) {\r\n    throw new ParseError(index, line, column, type);\r\n}\n\nconst unicodeLookup = ((compressed, lookup) => {\r\n    const result = new Uint32Array(104448);\r\n    let index = 0;\r\n    let subIndex = 0;\r\n    while (index < 3540) {\r\n        const inst = compressed[index++];\r\n        if (inst < 0) {\r\n            subIndex -= inst;\r\n        }\r\n        else {\r\n            let code = compressed[index++];\r\n            if (inst & 2)\r\n                code = lookup[code];\r\n            if (inst & 1) {\r\n                result.fill(code, subIndex, subIndex += compressed[index++]);\r\n            }\r\n            else {\r\n                result[subIndex++] = code;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n})([-1, 2, 24, 2, 25, 2, 5, -1, 0, 77595648, 3, 44, 2, 3, 0, 14, 2, 57, 2, 58, 3, 0, 3, 0, 3168796671, 0, 4294956992, 2, 1, 2, 0, 2, 59, 3, 0, 4, 0, 4294966523, 3, 0, 4, 2, 16, 2, 60, 2, 0, 0, 4294836735, 0, 3221225471, 0, 4294901942, 2, 61, 0, 134152192, 3, 0, 2, 0, 4294951935, 3, 0, 2, 0, 2683305983, 0, 2684354047, 2, 17, 2, 0, 0, 4294961151, 3, 0, 2, 2, 19, 2, 0, 0, 608174079, 2, 0, 2, 131, 2, 6, 2, 56, -1, 2, 37, 0, 4294443263, 2, 1, 3, 0, 3, 0, 4294901711, 2, 39, 0, 4089839103, 0, 2961209759, 0, 1342439375, 0, 4294543342, 0, 3547201023, 0, 1577204103, 0, 4194240, 0, 4294688750, 2, 2, 0, 80831, 0, 4261478351, 0, 4294549486, 2, 2, 0, 2967484831, 0, 196559, 0, 3594373100, 0, 3288319768, 0, 8469959, 2, 194, 2, 3, 0, 3825204735, 0, 123747807, 0, 65487, 0, 4294828015, 0, 4092591615, 0, 1080049119, 0, 458703, 2, 3, 2, 0, 0, 2163244511, 0, 4227923919, 0, 4236247022, 2, 66, 0, 4284449919, 0, 851904, 2, 4, 2, 11, 0, 67076095, -1, 2, 67, 0, 1073741743, 0, 4093591391, -1, 0, 50331649, 0, 3265266687, 2, 32, 0, 4294844415, 0, 4278190047, 2, 18, 2, 129, -1, 3, 0, 2, 2, 21, 2, 0, 2, 9, 2, 0, 2, 14, 2, 15, 3, 0, 10, 2, 69, 2, 0, 2, 70, 2, 71, 2, 72, 2, 0, 2, 73, 2, 0, 2, 10, 0, 261632, 2, 23, 3, 0, 2, 2, 12, 2, 4, 3, 0, 18, 2, 74, 2, 5, 3, 0, 2, 2, 75, 0, 2088959, 2, 27, 2, 8, 0, 909311, 3, 0, 2, 0, 814743551, 2, 41, 0, 67057664, 3, 0, 2, 2, 40, 2, 0, 2, 28, 2, 0, 2, 29, 2, 7, 0, 268374015, 2, 26, 2, 49, 2, 0, 2, 76, 0, 134153215, -1, 2, 6, 2, 0, 2, 7, 0, 2684354559, 0, 67044351, 0, 3221160064, 0, 1, -1, 3, 0, 2, 2, 42, 0, 1046528, 3, 0, 3, 2, 8, 2, 0, 2, 51, 0, 4294960127, 2, 9, 2, 38, 2, 10, 0, 4294377472, 2, 11, 3, 0, 7, 0, 4227858431, 3, 0, 8, 2, 12, 2, 0, 2, 78, 2, 9, 2, 0, 2, 79, 2, 80, 2, 81, -1, 2, 124, 0, 1048577, 2, 82, 2, 13, -1, 2, 13, 0, 131042, 2, 83, 2, 84, 2, 85, 2, 0, 2, 33, -83, 2, 0, 2, 53, 2, 7, 3, 0, 4, 0, 1046559, 2, 0, 2, 14, 2, 0, 0, 2147516671, 2, 20, 3, 86, 2, 2, 0, -16, 2, 87, 0, 524222462, 2, 4, 2, 0, 0, 4269801471, 2, 4, 2, 0, 2, 15, 2, 77, 2, 16, 3, 0, 2, 2, 47, 2, 0, -1, 2, 17, -16, 3, 0, 206, -2, 3, 0, 655, 2, 18, 3, 0, 36, 2, 68, -1, 2, 17, 2, 9, 3, 0, 8, 2, 89, 2, 121, 2, 0, 0, 3220242431, 3, 0, 3, 2, 19, 2, 90, 2, 91, 3, 0, 2, 2, 92, 2, 0, 2, 93, 2, 94, 2, 0, 0, 4351, 2, 0, 2, 8, 3, 0, 2, 0, 67043391, 0, 3909091327, 2, 0, 2, 22, 2, 8, 2, 18, 3, 0, 2, 0, 67076097, 2, 7, 2, 0, 2, 20, 0, 67059711, 0, 4236247039, 3, 0, 2, 0, 939524103, 0, 8191999, 2, 97, 2, 98, 2, 15, 2, 21, 3, 0, 3, 0, 67057663, 3, 0, 349, 2, 99, 2, 100, 2, 6, -264, 3, 0, 11, 2, 22, 3, 0, 2, 2, 31, -1, 0, 3774349439, 2, 101, 2, 102, 3, 0, 2, 2, 19, 2, 103, 3, 0, 10, 2, 9, 2, 17, 2, 0, 2, 45, 2, 0, 2, 30, 2, 104, 2, 23, 0, 1638399, 2, 172, 2, 105, 3, 0, 3, 2, 18, 2, 24, 2, 25, 2, 5, 2, 26, 2, 0, 2, 7, 2, 106, -1, 2, 107, 2, 108, 2, 109, -1, 3, 0, 3, 2, 11, -2, 2, 0, 2, 27, -3, 2, 150, -4, 2, 18, 2, 0, 2, 35, 0, 1, 2, 0, 2, 62, 2, 28, 2, 11, 2, 9, 2, 0, 2, 110, -1, 3, 0, 4, 2, 9, 2, 21, 2, 111, 2, 6, 2, 0, 2, 112, 2, 0, 2, 48, -4, 3, 0, 9, 2, 20, 2, 29, 2, 30, -4, 2, 113, 2, 114, 2, 29, 2, 20, 2, 7, -2, 2, 115, 2, 29, 2, 31, -2, 2, 0, 2, 116, -2, 0, 4277137519, 0, 2269118463, -1, 3, 18, 2, -1, 2, 32, 2, 36, 2, 0, 3, 29, 2, 2, 34, 2, 19, -3, 3, 0, 2, 2, 33, -1, 2, 0, 2, 34, 2, 0, 2, 34, 2, 0, 2, 46, -10, 2, 0, 0, 203775, -2, 2, 18, 2, 43, 2, 35, -2, 2, 17, 2, 117, 2, 20, 3, 0, 2, 2, 36, 0, 2147549120, 2, 0, 2, 11, 2, 17, 2, 135, 2, 0, 2, 37, 2, 52, 0, 5242879, 3, 0, 2, 0, 402644511, -1, 2, 120, 0, 1090519039, -2, 2, 122, 2, 38, 2, 0, 0, 67045375, 2, 39, 0, 4226678271, 0, 3766565279, 0, 2039759, -4, 3, 0, 2, 0, 3288270847, 0, 3, 3, 0, 2, 0, 67043519, -5, 2, 0, 0, 4282384383, 0, 1056964609, -1, 3, 0, 2, 0, 67043345, -1, 2, 0, 2, 40, 2, 41, -1, 2, 10, 2, 42, -6, 2, 0, 2, 11, -3, 3, 0, 2, 0, 2147484671, 2, 125, 0, 4190109695, 2, 50, -2, 2, 126, 0, 4244635647, 0, 27, 2, 0, 2, 7, 2, 43, 2, 0, 2, 63, -1, 2, 0, 2, 40, -8, 2, 54, 2, 44, 0, 67043329, 2, 127, 2, 45, 0, 8388351, -2, 2, 128, 0, 3028287487, 2, 46, 2, 130, 0, 33259519, 2, 41, -9, 2, 20, -5, 2, 64, -2, 3, 0, 28, 2, 31, -3, 3, 0, 3, 2, 47, 3, 0, 6, 2, 48, -85, 3, 0, 33, 2, 47, -126, 3, 0, 18, 2, 36, -269, 3, 0, 17, 2, 40, 2, 7, 2, 41, -2, 2, 17, 2, 49, 2, 0, 2, 20, 2, 50, 2, 132, 2, 23, -21, 3, 0, 2, -4, 3, 0, 2, 0, 4294936575, 2, 0, 0, 4294934783, -2, 0, 196635, 3, 0, 191, 2, 51, 3, 0, 38, 2, 29, -1, 2, 33, -279, 3, 0, 8, 2, 7, -1, 2, 133, 2, 52, 3, 0, 11, 2, 6, -72, 3, 0, 3, 2, 134, 0, 1677656575, -166, 0, 4161266656, 0, 4071, 0, 15360, -4, 0, 28, -13, 3, 0, 2, 2, 37, 2, 0, 2, 136, 2, 137, 2, 55, 2, 0, 2, 138, 2, 139, 2, 140, 3, 0, 10, 2, 141, 2, 142, 2, 15, 3, 37, 2, 3, 53, 2, 3, 54, 2, 0, 4294954999, 2, 0, -16, 2, 0, 2, 88, 2, 0, 0, 2105343, 0, 4160749584, 0, 65534, -42, 0, 4194303871, 0, 2011, -6, 2, 0, 0, 1073684479, 0, 17407, -11, 2, 0, 2, 31, -40, 3, 0, 6, 0, 8323103, -1, 3, 0, 2, 2, 42, -37, 2, 55, 2, 144, 2, 145, 2, 146, 2, 147, 2, 148, -105, 2, 24, -32, 3, 0, 1334, 2, 9, -1, 3, 0, 129, 2, 27, 3, 0, 6, 2, 9, 3, 0, 180, 2, 149, 3, 0, 233, 0, 1, -96, 3, 0, 16, 2, 9, -47, 3, 0, 154, 2, 56, -22381, 3, 0, 7, 2, 23, -6130, 3, 5, 2, -1, 0, 69207040, 3, 44, 2, 3, 0, 14, 2, 57, 2, 58, -3, 0, 3168731136, 0, 4294956864, 2, 1, 2, 0, 2, 59, 3, 0, 4, 0, 4294966275, 3, 0, 4, 2, 16, 2, 60, 2, 0, 2, 33, -1, 2, 17, 2, 61, -1, 2, 0, 2, 56, 0, 4294885376, 3, 0, 2, 0, 3145727, 0, 2617294944, 0, 4294770688, 2, 23, 2, 62, 3, 0, 2, 0, 131135, 2, 95, 0, 70256639, 0, 71303167, 0, 272, 2, 40, 2, 56, -1, 2, 37, 2, 30, -1, 2, 96, 2, 63, 0, 4278255616, 0, 4294836227, 0, 4294549473, 0, 600178175, 0, 2952806400, 0, 268632067, 0, 4294543328, 0, 57540095, 0, 1577058304, 0, 1835008, 0, 4294688736, 2, 65, 2, 64, 0, 33554435, 2, 123, 2, 65, 2, 151, 0, 131075, 0, 3594373096, 0, 67094296, 2, 64, -1, 0, 4294828000, 0, 603979263, 2, 160, 0, 3, 0, 4294828001, 0, 602930687, 2, 183, 0, 393219, 0, 4294828016, 0, 671088639, 0, 2154840064, 0, 4227858435, 0, 4236247008, 2, 66, 2, 36, -1, 2, 4, 0, 917503, 2, 36, -1, 2, 67, 0, 537788335, 0, 4026531935, -1, 0, 1, -1, 2, 32, 2, 68, 0, 7936, -3, 2, 0, 0, 2147485695, 0, 1010761728, 0, 4292984930, 0, 16387, 2, 0, 2, 14, 2, 15, 3, 0, 10, 2, 69, 2, 0, 2, 70, 2, 71, 2, 72, 2, 0, 2, 73, 2, 0, 2, 11, -1, 2, 23, 3, 0, 2, 2, 12, 2, 4, 3, 0, 18, 2, 74, 2, 5, 3, 0, 2, 2, 75, 0, 253951, 3, 19, 2, 0, 122879, 2, 0, 2, 8, 0, 276824064, -2, 3, 0, 2, 2, 40, 2, 0, 0, 4294903295, 2, 0, 2, 29, 2, 7, -1, 2, 17, 2, 49, 2, 0, 2, 76, 2, 41, -1, 2, 20, 2, 0, 2, 27, -2, 0, 128, -2, 2, 77, 2, 8, 0, 4064, -1, 2, 119, 0, 4227907585, 2, 0, 2, 118, 2, 0, 2, 48, 2, 173, 2, 9, 2, 38, 2, 10, -1, 0, 74440192, 3, 0, 6, -2, 3, 0, 8, 2, 12, 2, 0, 2, 78, 2, 9, 2, 0, 2, 79, 2, 80, 2, 81, -3, 2, 82, 2, 13, -3, 2, 83, 2, 84, 2, 85, 2, 0, 2, 33, -83, 2, 0, 2, 53, 2, 7, 3, 0, 4, 0, 817183, 2, 0, 2, 14, 2, 0, 0, 33023, 2, 20, 3, 86, 2, -17, 2, 87, 0, 524157950, 2, 4, 2, 0, 2, 88, 2, 4, 2, 0, 2, 15, 2, 77, 2, 16, 3, 0, 2, 2, 47, 2, 0, -1, 2, 17, -16, 3, 0, 206, -2, 3, 0, 655, 2, 18, 3, 0, 36, 2, 68, -1, 2, 17, 2, 9, 3, 0, 8, 2, 89, 0, 3072, 2, 0, 0, 2147516415, 2, 9, 3, 0, 2, 2, 23, 2, 90, 2, 91, 3, 0, 2, 2, 92, 2, 0, 2, 93, 2, 94, 0, 4294965179, 0, 7, 2, 0, 2, 8, 2, 91, 2, 8, -1, 0, 1761345536, 2, 95, 0, 4294901823, 2, 36, 2, 18, 2, 96, 2, 34, 2, 166, 0, 2080440287, 2, 0, 2, 33, 2, 143, 0, 3296722943, 2, 0, 0, 1046675455, 0, 939524101, 0, 1837055, 2, 97, 2, 98, 2, 15, 2, 21, 3, 0, 3, 0, 7, 3, 0, 349, 2, 99, 2, 100, 2, 6, -264, 3, 0, 11, 2, 22, 3, 0, 2, 2, 31, -1, 0, 2700607615, 2, 101, 2, 102, 3, 0, 2, 2, 19, 2, 103, 3, 0, 10, 2, 9, 2, 17, 2, 0, 2, 45, 2, 0, 2, 30, 2, 104, -3, 2, 105, 3, 0, 3, 2, 18, -1, 3, 5, 2, 2, 26, 2, 0, 2, 7, 2, 106, -1, 2, 107, 2, 108, 2, 109, -1, 3, 0, 3, 2, 11, -2, 2, 0, 2, 27, -8, 2, 18, 2, 0, 2, 35, -1, 2, 0, 2, 62, 2, 28, 2, 29, 2, 9, 2, 0, 2, 110, -1, 3, 0, 4, 2, 9, 2, 17, 2, 111, 2, 6, 2, 0, 2, 112, 2, 0, 2, 48, -4, 3, 0, 9, 2, 20, 2, 29, 2, 30, -4, 2, 113, 2, 114, 2, 29, 2, 20, 2, 7, -2, 2, 115, 2, 29, 2, 31, -2, 2, 0, 2, 116, -2, 0, 4277075969, 2, 29, -1, 3, 18, 2, -1, 2, 32, 2, 117, 2, 0, 3, 29, 2, 2, 34, 2, 19, -3, 3, 0, 2, 2, 33, -1, 2, 0, 2, 34, 2, 0, 2, 34, 2, 0, 2, 48, -10, 2, 0, 0, 197631, -2, 2, 18, 2, 43, 2, 118, -2, 2, 17, 2, 117, 2, 20, 2, 119, 2, 51, -2, 2, 119, 2, 23, 2, 17, 2, 33, 2, 119, 2, 36, 0, 4294901904, 0, 4718591, 2, 119, 2, 34, 0, 335544350, -1, 2, 120, 2, 121, -2, 2, 122, 2, 38, 2, 7, -1, 2, 123, 2, 65, 0, 3758161920, 0, 3, -4, 2, 0, 2, 27, 0, 2147485568, 0, 3, 2, 0, 2, 23, 0, 176, -5, 2, 0, 2, 47, 2, 186, -1, 2, 0, 2, 23, 2, 197, -1, 2, 0, 0, 16779263, -2, 2, 11, -7, 2, 0, 2, 121, -3, 3, 0, 2, 2, 124, 2, 125, 0, 2147549183, 0, 2, -2, 2, 126, 2, 35, 0, 10, 0, 4294965249, 0, 67633151, 0, 4026597376, 2, 0, 0, 536871935, -1, 2, 0, 2, 40, -8, 2, 54, 2, 47, 0, 1, 2, 127, 2, 23, -3, 2, 128, 2, 35, 2, 129, 2, 130, 0, 16778239, -10, 2, 34, -5, 2, 64, -2, 3, 0, 28, 2, 31, -3, 3, 0, 3, 2, 47, 3, 0, 6, 2, 48, -85, 3, 0, 33, 2, 47, -126, 3, 0, 18, 2, 36, -269, 3, 0, 17, 2, 40, 2, 7, -3, 2, 17, 2, 131, 2, 0, 2, 23, 2, 48, 2, 132, 2, 23, -21, 3, 0, 2, -4, 3, 0, 2, 0, 67583, -1, 2, 103, -2, 0, 11, 3, 0, 191, 2, 51, 3, 0, 38, 2, 29, -1, 2, 33, -279, 3, 0, 8, 2, 7, -1, 2, 133, 2, 52, 3, 0, 11, 2, 6, -72, 3, 0, 3, 2, 134, 2, 135, -187, 3, 0, 2, 2, 37, 2, 0, 2, 136, 2, 137, 2, 55, 2, 0, 2, 138, 2, 139, 2, 140, 3, 0, 10, 2, 141, 2, 142, 2, 15, 3, 37, 2, 3, 53, 2, 3, 54, 2, 2, 143, -73, 2, 0, 0, 1065361407, 0, 16384, -11, 2, 0, 2, 121, -40, 3, 0, 6, 2, 117, -1, 3, 0, 2, 0, 2063, -37, 2, 55, 2, 144, 2, 145, 2, 146, 2, 147, 2, 148, -138, 3, 0, 1334, 2, 9, -1, 3, 0, 129, 2, 27, 3, 0, 6, 2, 9, 3, 0, 180, 2, 149, 3, 0, 233, 0, 1, -96, 3, 0, 16, 2, 9, -47, 3, 0, 154, 2, 56, -28517, 2, 0, 0, 1, -1, 2, 124, 2, 0, 0, 8193, -21, 2, 193, 0, 10255, 0, 4, -11, 2, 64, 2, 171, -1, 0, 71680, -1, 2, 161, 0, 4292900864, 0, 805306431, -5, 2, 150, -1, 2, 157, -1, 0, 6144, -2, 2, 127, -1, 2, 154, -1, 0, 2147532800, 2, 151, 2, 165, 2, 0, 2, 164, 0, 524032, 0, 4, -4, 2, 190, 0, 205128192, 0, 1333757536, 0, 2147483696, 0, 423953, 0, 747766272, 0, 2717763192, 0, 4286578751, 0, 278545, 2, 152, 0, 4294886464, 0, 33292336, 0, 417809, 2, 152, 0, 1327482464, 0, 4278190128, 0, 700594195, 0, 1006647527, 0, 4286497336, 0, 4160749631, 2, 153, 0, 469762560, 0, 4171219488, 0, 8323120, 2, 153, 0, 202375680, 0, 3214918176, 0, 4294508592, 2, 153, -1, 0, 983584, 0, 48, 0, 58720273, 0, 3489923072, 0, 10517376, 0, 4293066815, 0, 1, 0, 2013265920, 2, 177, 2, 0, 0, 2089, 0, 3221225552, 0, 201375904, 2, 0, -2, 0, 256, 0, 122880, 0, 16777216, 2, 150, 0, 4160757760, 2, 0, -6, 2, 167, -11, 0, 3263218176, -1, 0, 49664, 0, 2160197632, 0, 8388802, -1, 0, 12713984, -1, 2, 154, 2, 159, 2, 178, -2, 2, 162, -20, 0, 3758096385, -2, 2, 155, 0, 4292878336, 2, 90, 2, 169, 0, 4294057984, -2, 2, 163, 2, 156, 2, 175, -2, 2, 155, -1, 2, 182, -1, 2, 170, 2, 124, 0, 4026593280, 0, 14, 0, 4292919296, -1, 2, 158, 0, 939588608, -1, 0, 805306368, -1, 2, 124, 0, 1610612736, 2, 156, 2, 157, 2, 4, 2, 0, -2, 2, 158, 2, 159, -3, 0, 267386880, -1, 2, 160, 0, 7168, -1, 0, 65024, 2, 154, 2, 161, 2, 179, -7, 2, 168, -8, 2, 162, -1, 0, 1426112704, 2, 163, -1, 2, 164, 0, 271581216, 0, 2149777408, 2, 23, 2, 161, 2, 124, 0, 851967, 2, 180, -1, 2, 23, 2, 181, -4, 2, 158, -20, 2, 195, 2, 165, -56, 0, 3145728, 2, 185, -4, 2, 166, 2, 124, -4, 0, 32505856, -1, 2, 167, -1, 0, 2147385088, 2, 90, 1, 2155905152, 2, -3, 2, 103, 2, 0, 2, 168, -2, 2, 169, -6, 2, 170, 0, 4026597375, 0, 1, -1, 0, 1, -1, 2, 171, -3, 2, 117, 2, 64, -2, 2, 166, -2, 2, 176, 2, 124, -878, 2, 159, -36, 2, 172, -1, 2, 201, -10, 2, 188, -5, 2, 174, -6, 0, 4294965251, 2, 27, -1, 2, 173, -1, 2, 174, -2, 0, 4227874752, -3, 0, 2146435072, 2, 159, -2, 0, 1006649344, 2, 124, -1, 2, 90, 0, 201375744, -3, 0, 134217720, 2, 90, 0, 4286677377, 0, 32896, -1, 2, 158, -3, 2, 175, -349, 2, 176, 0, 1920, 2, 177, 3, 0, 264, -11, 2, 157, -2, 2, 178, 2, 0, 0, 520617856, 0, 2692743168, 0, 36, -3, 0, 524284, -11, 2, 23, -1, 2, 187, -1, 2, 184, 0, 3221291007, 2, 178, -1, 2, 202, 0, 2158720, -3, 2, 159, 0, 1, -4, 2, 124, 0, 3808625411, 0, 3489628288, 2, 200, 0, 1207959680, 0, 3221274624, 2, 0, -3, 2, 179, 0, 120, 0, 7340032, -2, 2, 180, 2, 4, 2, 23, 2, 163, 3, 0, 4, 2, 159, -1, 2, 181, 2, 177, -1, 0, 8176, 2, 182, 2, 179, 2, 183, -1, 0, 4290773232, 2, 0, -4, 2, 163, 2, 189, 0, 15728640, 2, 177, -1, 2, 161, -1, 0, 4294934512, 3, 0, 4, -9, 2, 90, 2, 170, 2, 184, 3, 0, 4, 0, 704, 0, 1849688064, 2, 185, -1, 2, 124, 0, 4294901887, 2, 0, 0, 130547712, 0, 1879048192, 2, 199, 3, 0, 2, -1, 2, 186, 2, 187, -1, 0, 17829776, 0, 2025848832, 0, 4261477888, -2, 2, 0, -1, 0, 4286580608, -1, 0, 29360128, 2, 192, 0, 16252928, 0, 3791388672, 2, 38, 3, 0, 2, -2, 2, 196, 2, 0, -1, 2, 103, -1, 0, 66584576, -1, 2, 191, 3, 0, 9, 2, 124, -1, 0, 4294755328, 3, 0, 2, -1, 2, 161, 2, 178, 3, 0, 2, 2, 23, 2, 188, 2, 90, -2, 0, 245760, 0, 2147418112, -1, 2, 150, 2, 203, 0, 4227923456, -1, 2, 164, 2, 161, 2, 90, -3, 0, 4292870145, 0, 262144, 2, 124, 3, 0, 2, 0, 1073758848, 2, 189, -1, 0, 4227921920, 2, 190, 0, 68289024, 0, 528402016, 0, 4292927536, 3, 0, 4, -2, 0, 268435456, 2, 91, -2, 2, 191, 3, 0, 5, -1, 2, 192, 2, 163, 2, 0, -2, 0, 4227923936, 2, 62, -1, 2, 155, 2, 95, 2, 0, 2, 154, 2, 158, 3, 0, 6, -1, 2, 177, 3, 0, 3, -2, 0, 2146959360, 0, 9440640, 0, 104857600, 0, 4227923840, 3, 0, 2, 0, 768, 2, 193, 2, 77, -2, 2, 161, -2, 2, 119, -1, 2, 155, 3, 0, 8, 0, 512, 0, 8388608, 2, 194, 2, 172, 2, 187, 0, 4286578944, 3, 0, 2, 0, 1152, 0, 1266679808, 2, 191, 0, 576, 0, 4261707776, 2, 95, 3, 0, 9, 2, 155, 3, 0, 5, 2, 16, -1, 0, 2147221504, -28, 2, 178, 3, 0, 3, -3, 0, 4292902912, -6, 2, 96, 3, 0, 85, -33, 0, 4294934528, 3, 0, 126, -18, 2, 195, 3, 0, 269, -17, 2, 155, 2, 124, 2, 198, 3, 0, 2, 2, 23, 0, 4290822144, -2, 0, 67174336, 0, 520093700, 2, 17, 3, 0, 21, -2, 2, 179, 3, 0, 3, -2, 0, 30720, -1, 0, 32512, 3, 0, 2, 0, 4294770656, -191, 2, 174, -38, 2, 170, 2, 0, 2, 196, 3, 0, 279, -8, 2, 124, 2, 0, 0, 4294508543, 0, 65295, -11, 2, 177, 3, 0, 72, -3, 0, 3758159872, 0, 201391616, 3, 0, 155, -7, 2, 170, -1, 0, 384, -1, 0, 133693440, -3, 2, 196, -2, 2, 26, 3, 0, 4, 2, 169, -2, 2, 90, 2, 155, 3, 0, 4, -2, 2, 164, -1, 2, 150, 0, 335552923, 2, 197, -1, 0, 538974272, 0, 2214592512, 0, 132000, -10, 0, 192, -8, 0, 12288, -21, 0, 134213632, 0, 4294901761, 3, 0, 42, 0, 100663424, 0, 4294965284, 3, 0, 6, -1, 0, 3221282816, 2, 198, 3, 0, 11, -1, 2, 199, 3, 0, 40, -6, 0, 4286578784, 2, 0, -2, 0, 1006694400, 3, 0, 24, 2, 35, -1, 2, 94, 3, 0, 2, 0, 1, 2, 163, 3, 0, 6, 2, 197, 0, 4110942569, 0, 1432950139, 0, 2701658217, 0, 4026532864, 0, 4026532881, 2, 0, 2, 45, 3, 0, 8, -1, 2, 158, -2, 2, 169, 0, 98304, 0, 65537, 2, 170, -5, 0, 4294950912, 2, 0, 2, 118, 0, 65528, 2, 177, 0, 4294770176, 2, 26, 3, 0, 4, -30, 2, 174, 0, 3758153728, -3, 2, 169, -2, 2, 155, 2, 188, 2, 158, -1, 2, 191, -1, 2, 161, 0, 4294754304, 3, 0, 2, -3, 0, 33554432, -2, 2, 200, -3, 2, 169, 0, 4175478784, 2, 201, 0, 4286643712, 0, 4286644216, 2, 0, -4, 2, 202, -1, 2, 165, 0, 4227923967, 3, 0, 32, -1334, 2, 163, 2, 0, -129, 2, 94, -6, 2, 163, -180, 2, 203, -233, 2, 4, 3, 0, 96, -16, 2, 163, 3, 0, 47, -154, 2, 165, 3, 0, 22381, -7, 2, 17, 3, 0, 6128], [4294967295, 4294967291, 4092460543, 4294828031, 4294967294, 134217726, 268435455, 2147483647, 1048575, 1073741823, 3892314111, 134217727, 1061158911, 536805376, 4294910143, 4160749567, 4294901759, 4294901760, 536870911, 262143, 8388607, 4294902783, 4294918143, 65535, 67043328, 2281701374, 4294967232, 2097151, 4294903807, 4194303, 255, 67108863, 4294967039, 511, 524287, 131071, 127, 4292870143, 4294902271, 4294549487, 33554431, 1023, 67047423, 4294901888, 4286578687, 4294770687, 67043583, 32767, 15, 2047999, 67043343, 16777215, 4294902000, 4294934527, 4294966783, 4294967279, 2047, 262083, 20511, 4290772991, 41943039, 493567, 4294959104, 603979775, 65536, 602799615, 805044223, 4294965206, 8191, 1031749119, 4294917631, 2134769663, 4286578493, 4282253311, 4294942719, 33540095, 4294905855, 4294967264, 2868854591, 1608515583, 265232348, 534519807, 2147614720, 1060109444, 4093640016, 17376, 2139062143, 224, 4169138175, 4294909951, 4286578688, 4294967292, 4294965759, 2044, 4292870144, 4294966272, 4294967280, 8289918, 4294934399, 4294901775, 4294965375, 1602223615, 4294967259, 4294443008, 268369920, 4292804608, 486341884, 4294963199, 3087007615, 1073692671, 4128527, 4279238655, 4294902015, 4294966591, 2445279231, 3670015, 3238002687, 31, 63, 4294967288, 4294705151, 4095, 3221208447, 4294549472, 2147483648, 4285526655, 4294966527, 4294705152, 4294966143, 64, 4294966719, 16383, 3774873592, 458752, 536807423, 67043839, 3758096383, 3959414372, 3755993023, 2080374783, 4294835295, 4294967103, 4160749565, 4087, 184024726, 2862017156, 1593309078, 268434431, 268434414, 4294901763, 536870912, 2952790016, 202506752, 139264, 402653184, 4261412864, 4227922944, 49152, 61440, 3758096384, 117440512, 65280, 3233808384, 3221225472, 2097152, 4294965248, 32768, 57152, 67108864, 4293918720, 4290772992, 25165824, 57344, 4227915776, 4278190080, 4227907584, 65520, 4026531840, 4227858432, 4160749568, 3758129152, 4294836224, 63488, 1073741824, 4294967040, 4194304, 251658240, 196608, 4294963200, 64512, 417808, 4227923712, 12582912, 50331648, 65472, 4294967168, 4294966784, 16, 4294917120, 2080374784, 4096, 65408, 524288, 65532]);\n\nfunction advanceChar(parser) {\r\n    parser.column++;\r\n    return (parser.currentChar = parser.source.charCodeAt(++parser.index));\r\n}\r\nfunction consumeMultiUnitCodePoint(parser, hi) {\r\n    if ((hi & 0xfc00) !== 55296)\r\n        return 0;\r\n    const lo = parser.source.charCodeAt(parser.index + 1);\r\n    if ((lo & 0xfc00) !== 0xdc00)\r\n        return 0;\r\n    hi = parser.currentChar = 65536 + ((hi & 0x3ff) << 10) + (lo & 0x3ff);\r\n    if (((unicodeLookup[(hi >>> 5) + 0] >>> hi) & 31 & 1) === 0) {\r\n        report(parser, 18, fromCodePoint(hi));\r\n    }\r\n    parser.index++;\r\n    parser.column++;\r\n    return 1;\r\n}\r\nfunction consumeLineFeed(parser, state) {\r\n    parser.currentChar = parser.source.charCodeAt(++parser.index);\r\n    parser.flags |= 1;\r\n    if ((state & 4) === 0) {\r\n        parser.column = 0;\r\n        parser.line++;\r\n    }\r\n}\r\nfunction scanNewLine(parser) {\r\n    parser.flags |= 1;\r\n    parser.currentChar = parser.source.charCodeAt(++parser.index);\r\n    parser.column = 0;\r\n    parser.line++;\r\n}\r\nfunction isExoticECMAScriptWhitespace(ch) {\r\n    return (ch === 160 ||\r\n        ch === 65279 ||\r\n        ch === 133 ||\r\n        ch === 5760 ||\r\n        (ch >= 8192 && ch <= 8203) ||\r\n        ch === 8239 ||\r\n        ch === 8287 ||\r\n        ch === 12288 ||\r\n        ch === 8201 ||\r\n        ch === 65519);\r\n}\r\nfunction fromCodePoint(codePoint) {\r\n    return codePoint <= 65535\r\n        ? String.fromCharCode(codePoint)\r\n        : String.fromCharCode(codePoint >>> 10) + String.fromCharCode(codePoint & 0x3ff);\r\n}\r\nfunction toHex(code) {\r\n    return code < 65 ? code - 48 : (code - 65 + 10) & 0xf;\r\n}\r\nfunction convertTokenType(t) {\r\n    switch (t) {\r\n        case 134283266:\r\n            return 'NumericLiteral';\r\n        case 134283267:\r\n            return 'StringLiteral';\r\n        case 86021:\r\n        case 86022:\r\n            return 'BooleanLiteral';\r\n        case 86023:\r\n            return 'NullLiteral';\r\n        case 65540:\r\n            return 'RegularExpression';\r\n        case 67174408:\r\n        case 67174409:\r\n        case 132:\r\n            return 'TemplateLiteral';\r\n        default:\r\n            if ((t & 143360) === 143360)\r\n                return 'Identifier';\r\n            if ((t & 4096) === 4096)\r\n                return 'Keyword';\r\n            return 'Punctuator';\r\n    }\r\n}\n\nconst CharTypes = [\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    8 | 1024,\r\n    0,\r\n    0,\r\n    8 | 2048,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    8192,\r\n    0,\r\n    1 | 2,\r\n    0,\r\n    0,\r\n    8192,\r\n    0,\r\n    0,\r\n    0,\r\n    256,\r\n    0,\r\n    256 | 32768,\r\n    0,\r\n    0,\r\n    2 | 16 | 128 | 32 | 64,\r\n    2 | 16 | 128 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 512 | 64,\r\n    2 | 16 | 512 | 64,\r\n    0,\r\n    0,\r\n    16384,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    1 | 2 | 4096,\r\n    0,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    16384,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n];\r\nconst isIdStart = [\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n];\r\nconst isIdPart = [\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n];\r\nfunction isIdentifierStart(code) {\r\n    return code <= 0x7F\r\n        ? isIdStart[code]\r\n        : (unicodeLookup[(code >>> 5) + 34816] >>> code) & 31 & 1;\r\n}\r\nfunction isIdentifierPart(code) {\r\n    return code <= 0x7F\r\n        ? isIdPart[code]\r\n        : (unicodeLookup[(code >>> 5) + 0] >>> code) & 31 & 1 || (code === 8204 || code === 8205);\r\n}\n\nconst CommentTypes = ['SingleLine', 'MultiLine', 'HTMLOpen', 'HTMLClose', 'HashbangComment'];\r\nfunction skipHashBang(parser) {\r\n    const source = parser.source;\r\n    if (parser.currentChar === 35 && source.charCodeAt(parser.index + 1) === 33) {\r\n        advanceChar(parser);\r\n        advanceChar(parser);\r\n        skipSingleLineComment(parser, source, 0, 4, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n}\r\nfunction skipSingleHTMLComment(parser, source, state, context, type, start, line, column) {\r\n    if (context & 2048)\r\n        report(parser, 0);\r\n    return skipSingleLineComment(parser, source, state, type, start, line, column);\r\n}\r\nfunction skipSingleLineComment(parser, source, state, type, start, line, column) {\r\n    const { index } = parser;\r\n    parser.tokenPos = parser.index;\r\n    parser.linePos = parser.line;\r\n    parser.colPos = parser.column;\r\n    while (parser.index < parser.end) {\r\n        if (CharTypes[parser.currentChar] & 8) {\r\n            const isCR = parser.currentChar === 13;\r\n            scanNewLine(parser);\r\n            if (isCR && parser.index < parser.end && parser.currentChar === 10)\r\n                parser.currentChar = source.charCodeAt(++parser.index);\r\n            break;\r\n        }\r\n        else if ((parser.currentChar ^ 8232) <= 1) {\r\n            scanNewLine(parser);\r\n            break;\r\n        }\r\n        advanceChar(parser);\r\n        parser.tokenPos = parser.index;\r\n        parser.linePos = parser.line;\r\n        parser.colPos = parser.column;\r\n    }\r\n    if (parser.onComment) {\r\n        const loc = {\r\n            start: {\r\n                line,\r\n                column\r\n            },\r\n            end: {\r\n                line: parser.linePos,\r\n                column: parser.colPos\r\n            }\r\n        };\r\n        parser.onComment(CommentTypes[type & 0xff], source.slice(index, parser.tokenPos), start, parser.tokenPos, loc);\r\n    }\r\n    return state | 1;\r\n}\r\nfunction skipMultiLineComment(parser, source, state) {\r\n    const { index } = parser;\r\n    while (parser.index < parser.end) {\r\n        if (parser.currentChar < 0x2b) {\r\n            let skippedOneAsterisk = false;\r\n            while (parser.currentChar === 42) {\r\n                if (!skippedOneAsterisk) {\r\n                    state &= ~4;\r\n                    skippedOneAsterisk = true;\r\n                }\r\n                if (advanceChar(parser) === 47) {\r\n                    advanceChar(parser);\r\n                    if (parser.onComment) {\r\n                        const loc = {\r\n                            start: {\r\n                                line: parser.linePos,\r\n                                column: parser.colPos\r\n                            },\r\n                            end: {\r\n                                line: parser.line,\r\n                                column: parser.column\r\n                            }\r\n                        };\r\n                        parser.onComment(CommentTypes[1 & 0xff], source.slice(index, parser.index - 2), index - 2, parser.index, loc);\r\n                    }\r\n                    parser.tokenPos = parser.index;\r\n                    parser.linePos = parser.line;\r\n                    parser.colPos = parser.column;\r\n                    return state;\r\n                }\r\n            }\r\n            if (skippedOneAsterisk) {\r\n                continue;\r\n            }\r\n            if (CharTypes[parser.currentChar] & 8) {\r\n                if (parser.currentChar === 13) {\r\n                    state |= 1 | 4;\r\n                    scanNewLine(parser);\r\n                }\r\n                else {\r\n                    consumeLineFeed(parser, state);\r\n                    state = (state & ~4) | 1;\r\n                }\r\n            }\r\n            else {\r\n                advanceChar(parser);\r\n            }\r\n        }\r\n        else if ((parser.currentChar ^ 8232) <= 1) {\r\n            state = (state & ~4) | 1;\r\n            scanNewLine(parser);\r\n        }\r\n        else {\r\n            state &= ~4;\r\n            advanceChar(parser);\r\n        }\r\n    }\r\n    report(parser, 16);\r\n}\n\nfunction scanRegularExpression(parser, context) {\r\n    const bodyStart = parser.index;\r\n    let preparseState = 0;\r\n    loop: while (true) {\r\n        const ch = parser.currentChar;\r\n        advanceChar(parser);\r\n        if (preparseState & 1) {\r\n            preparseState &= ~1;\r\n        }\r\n        else {\r\n            switch (ch) {\r\n                case 47:\r\n                    if (!preparseState)\r\n                        break loop;\r\n                    else\r\n                        break;\r\n                case 92:\r\n                    preparseState |= 1;\r\n                    break;\r\n                case 91:\r\n                    preparseState |= 2;\r\n                    break;\r\n                case 93:\r\n                    preparseState &= 1;\r\n                    break;\r\n                case 13:\r\n                case 10:\r\n                case 8232:\r\n                case 8233:\r\n                    report(parser, 32);\r\n            }\r\n        }\r\n        if (parser.index >= parser.source.length) {\r\n            return report(parser, 32);\r\n        }\r\n    }\r\n    const bodyEnd = parser.index - 1;\r\n    let mask = 0;\r\n    let char = parser.currentChar;\r\n    const { index: flagStart } = parser;\r\n    while (isIdentifierPart(char)) {\r\n        switch (char) {\r\n            case 103:\r\n                if (mask & 2)\r\n                    report(parser, 34, 'g');\r\n                mask |= 2;\r\n                break;\r\n            case 105:\r\n                if (mask & 1)\r\n                    report(parser, 34, 'i');\r\n                mask |= 1;\r\n                break;\r\n            case 109:\r\n                if (mask & 4)\r\n                    report(parser, 34, 'm');\r\n                mask |= 4;\r\n                break;\r\n            case 117:\r\n                if (mask & 16)\r\n                    report(parser, 34, 'g');\r\n                mask |= 16;\r\n                break;\r\n            case 121:\r\n                if (mask & 8)\r\n                    report(parser, 34, 'y');\r\n                mask |= 8;\r\n                break;\r\n            case 115:\r\n                if (mask & 12)\r\n                    report(parser, 34, 's');\r\n                mask |= 12;\r\n                break;\r\n            default:\r\n                report(parser, 33);\r\n        }\r\n        char = advanceChar(parser);\r\n    }\r\n    const flags = parser.source.slice(flagStart, parser.index);\r\n    const pattern = parser.source.slice(bodyStart, bodyEnd);\r\n    parser.tokenRegExp = { pattern, flags };\r\n    if (context & 512)\r\n        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n    parser.tokenValue = validate(parser, pattern, flags);\r\n    return 65540;\r\n}\r\nfunction validate(parser, pattern, flags) {\r\n    try {\r\n        return new RegExp(pattern, flags);\r\n    }\r\n    catch (e) {\r\n        report(parser, 32);\r\n    }\r\n}\n\nfunction scanString(parser, context, quote) {\r\n    const { index: start } = parser;\r\n    let ret = '';\r\n    let char = advanceChar(parser);\r\n    let marker = parser.index;\r\n    while ((CharTypes[char] & 8) === 0) {\r\n        if (char === quote) {\r\n            ret += parser.source.slice(marker, parser.index);\r\n            advanceChar(parser);\r\n            if (context & 512)\r\n                parser.tokenRaw = parser.source.slice(start, parser.index);\r\n            parser.tokenValue = ret;\r\n            return 134283267;\r\n        }\r\n        if ((char & 8) === 8 && char === 92) {\r\n            ret += parser.source.slice(marker, parser.index);\r\n            char = advanceChar(parser);\r\n            if (char < 0x7f || char === 8232 || char === 8233) {\r\n                const code = parseEscape(parser, context, char);\r\n                if (code >= 0)\r\n                    ret += fromCodePoint(code);\r\n                else\r\n                    handleStringError(parser, code, 0);\r\n            }\r\n            else {\r\n                ret += fromCodePoint(char);\r\n            }\r\n            marker = parser.index + 1;\r\n        }\r\n        if (parser.index >= parser.end)\r\n            report(parser, 14);\r\n        char = advanceChar(parser);\r\n    }\r\n    report(parser, 14);\r\n}\r\nfunction parseEscape(parser, context, first) {\r\n    switch (first) {\r\n        case 98:\r\n            return 8;\r\n        case 102:\r\n            return 12;\r\n        case 114:\r\n            return 13;\r\n        case 110:\r\n            return 10;\r\n        case 116:\r\n            return 9;\r\n        case 118:\r\n            return 11;\r\n        case 13: {\r\n            if (parser.index < parser.end) {\r\n                const nextChar = parser.source.charCodeAt(parser.index + 1);\r\n                if (nextChar === 10) {\r\n                    parser.index = parser.index + 1;\r\n                    parser.currentChar = nextChar;\r\n                }\r\n            }\r\n        }\r\n        case 10:\r\n        case 8232:\r\n        case 8233:\r\n            parser.column = -1;\r\n            parser.line++;\r\n            return -1;\r\n        case 48:\r\n        case 49:\r\n        case 50:\r\n        case 51: {\r\n            let code = first - 48;\r\n            let index = parser.index + 1;\r\n            let column = parser.column + 1;\r\n            if (index < parser.end) {\r\n                const next = parser.source.charCodeAt(index);\r\n                if ((CharTypes[next] & 32) === 0) {\r\n                    if ((code !== 0 || CharTypes[next] & 512) && context & 1024)\r\n                        return -2;\r\n                }\r\n                else if (context & 1024) {\r\n                    return -2;\r\n                }\r\n                else {\r\n                    parser.currentChar = next;\r\n                    code = (code << 3) | (next - 48);\r\n                    index++;\r\n                    column++;\r\n                    if (index < parser.end) {\r\n                        const next = parser.source.charCodeAt(index);\r\n                        if (CharTypes[next] & 32) {\r\n                            parser.currentChar = next;\r\n                            code = (code << 3) | (next - 48);\r\n                            index++;\r\n                            column++;\r\n                        }\r\n                    }\r\n                    parser.flags |= 64;\r\n                    parser.index = index - 1;\r\n                    parser.column = column - 1;\r\n                }\r\n            }\r\n            return code;\r\n        }\r\n        case 52:\r\n        case 53:\r\n        case 54:\r\n        case 55: {\r\n            if (context & 1024)\r\n                return -2;\r\n            let code = first - 48;\r\n            const index = parser.index + 1;\r\n            const column = parser.column + 1;\r\n            if (index < parser.end) {\r\n                const next = parser.source.charCodeAt(index);\r\n                if (CharTypes[next] & 32) {\r\n                    code = (code << 3) | (next - 48);\r\n                    parser.currentChar = next;\r\n                    parser.index = index;\r\n                    parser.column = column;\r\n                }\r\n            }\r\n            parser.flags |= 64;\r\n            return code;\r\n        }\r\n        case 120: {\r\n            const ch1 = advanceChar(parser);\r\n            if ((CharTypes[ch1] & 64) === 0)\r\n                return -4;\r\n            const hi = toHex(ch1);\r\n            const ch2 = advanceChar(parser);\r\n            if ((CharTypes[ch2] & 64) === 0)\r\n                return -4;\r\n            const lo = toHex(ch2);\r\n            return (hi << 4) | lo;\r\n        }\r\n        case 117: {\r\n            const ch = advanceChar(parser);\r\n            if (parser.currentChar === 123) {\r\n                let code = 0;\r\n                while ((CharTypes[advanceChar(parser)] & 64) !== 0) {\r\n                    code = (code << 4) | toHex(parser.currentChar);\r\n                    if (code > 1114111)\r\n                        return -5;\r\n                }\r\n                if (parser.currentChar < 1 || parser.currentChar !== 125) {\r\n                    return -4;\r\n                }\r\n                return code;\r\n            }\r\n            else {\r\n                if ((CharTypes[ch] & 64) === 0)\r\n                    return -4;\r\n                const ch2 = parser.source.charCodeAt(parser.index + 1);\r\n                if ((CharTypes[ch2] & 64) === 0)\r\n                    return -4;\r\n                const ch3 = parser.source.charCodeAt(parser.index + 2);\r\n                if ((CharTypes[ch3] & 64) === 0)\r\n                    return -4;\r\n                const ch4 = parser.source.charCodeAt(parser.index + 3);\r\n                if ((CharTypes[ch4] & 64) === 0)\r\n                    return -4;\r\n                parser.index += 3;\r\n                parser.column += 3;\r\n                parser.currentChar = parser.source.charCodeAt(parser.index);\r\n                return (toHex(ch) << 12) | (toHex(ch2) << 8) | (toHex(ch3) << 4) | toHex(ch4);\r\n            }\r\n        }\r\n        case 56:\r\n        case 57:\r\n            if ((context & 256) === 0)\r\n                return -3;\r\n        default:\r\n            return first;\r\n    }\r\n}\r\nfunction handleStringError(state, code, isTemplate) {\r\n    switch (code) {\r\n        case -1:\r\n            return;\r\n        case -2:\r\n            report(state, isTemplate ? 2 : 1);\r\n        case -3:\r\n            report(state, 13);\r\n        case -4:\r\n            report(state, 6);\r\n        case -5:\r\n            report(state, 101);\r\n    }\r\n}\n\nfunction scanTemplate(parser, context) {\r\n    const { index: start } = parser;\r\n    let token = 67174409;\r\n    let ret = '';\r\n    let char = advanceChar(parser);\r\n    while (char !== 96) {\r\n        if (char === 36 && parser.source.charCodeAt(parser.index + 1) === 123) {\r\n            advanceChar(parser);\r\n            token = 67174408;\r\n            break;\r\n        }\r\n        else if ((char & 8) === 8 && char === 92) {\r\n            char = advanceChar(parser);\r\n            if (char > 0x7e) {\r\n                ret += fromCodePoint(char);\r\n            }\r\n            else {\r\n                const code = parseEscape(parser, context | 1024, char);\r\n                if (code >= 0) {\r\n                    ret += fromCodePoint(code);\r\n                }\r\n                else if (code !== -1 && context & 65536) {\r\n                    ret = undefined;\r\n                    char = scanBadTemplate(parser, char);\r\n                    if (char < 0)\r\n                        token = 67174408;\r\n                    break;\r\n                }\r\n                else {\r\n                    handleStringError(parser, code, 1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (parser.index < parser.end &&\r\n                char === 13 &&\r\n                parser.source.charCodeAt(parser.index) === 10) {\r\n                ret += fromCodePoint(char);\r\n                parser.currentChar = parser.source.charCodeAt(++parser.index);\r\n            }\r\n            if (((char & 83) < 3 && char === 10) || (char ^ 8232) <= 1) {\r\n                parser.column = -1;\r\n                parser.line++;\r\n            }\r\n            ret += fromCodePoint(char);\r\n        }\r\n        if (parser.index >= parser.end)\r\n            report(parser, 15);\r\n        char = advanceChar(parser);\r\n    }\r\n    advanceChar(parser);\r\n    parser.tokenValue = ret;\r\n    parser.tokenRaw = parser.source.slice(start + 1, parser.index - (token === 67174409 ? 1 : 2));\r\n    return token;\r\n}\r\nfunction scanBadTemplate(parser, ch) {\r\n    while (ch !== 96) {\r\n        switch (ch) {\r\n            case 36: {\r\n                const index = parser.index + 1;\r\n                if (index < parser.end && parser.source.charCodeAt(index) === 123) {\r\n                    parser.index = index;\r\n                    parser.column++;\r\n                    return -ch;\r\n                }\r\n                break;\r\n            }\r\n            case 10:\r\n            case 8232:\r\n            case 8233:\r\n                parser.column = -1;\r\n                parser.line++;\r\n        }\r\n        if (parser.index >= parser.end)\r\n            report(parser, 15);\r\n        ch = advanceChar(parser);\r\n    }\r\n    return ch;\r\n}\r\nfunction scanTemplateTail(parser, context) {\r\n    if (parser.index >= parser.end)\r\n        report(parser, 0);\r\n    parser.index--;\r\n    parser.column--;\r\n    return scanTemplate(parser, context);\r\n}\n\nfunction scanNumber(parser, context, kind) {\r\n    let char = parser.currentChar;\r\n    let value = 0;\r\n    let digit = 9;\r\n    let atStart = kind & 64 ? 0 : 1;\r\n    let digits = 0;\r\n    let allowSeparator = 0;\r\n    if (kind & 64) {\r\n        value = '.' + scanDecimalDigitsOrSeparator(parser, char);\r\n        char = parser.currentChar;\r\n        if (char === 110)\r\n            report(parser, 11);\r\n    }\r\n    else {\r\n        if (char === 48) {\r\n            char = advanceChar(parser);\r\n            if ((char | 32) === 120) {\r\n                kind = 8 | 128;\r\n                char = advanceChar(parser);\r\n                while (CharTypes[char] & (64 | 4096)) {\r\n                    if (char === 95) {\r\n                        if (!allowSeparator)\r\n                            report(parser, 146);\r\n                        allowSeparator = 0;\r\n                        char = advanceChar(parser);\r\n                        continue;\r\n                    }\r\n                    allowSeparator = 1;\r\n                    value = value * 0x10 + toHex(char);\r\n                    digits++;\r\n                    char = advanceChar(parser);\r\n                }\r\n                if (digits < 1 || !allowSeparator) {\r\n                    report(parser, digits < 1 ? 19 : 147);\r\n                }\r\n            }\r\n            else if ((char | 32) === 111) {\r\n                kind = 4 | 128;\r\n                char = advanceChar(parser);\r\n                while (CharTypes[char] & (32 | 4096)) {\r\n                    if (char === 95) {\r\n                        if (!allowSeparator) {\r\n                            report(parser, 146);\r\n                        }\r\n                        allowSeparator = 0;\r\n                        char = advanceChar(parser);\r\n                        continue;\r\n                    }\r\n                    allowSeparator = 1;\r\n                    value = value * 8 + (char - 48);\r\n                    digits++;\r\n                    char = advanceChar(parser);\r\n                }\r\n                if (digits < 1 || !allowSeparator) {\r\n                    report(parser, digits < 1 ? 0 : 147);\r\n                }\r\n            }\r\n            else if ((char | 32) === 98) {\r\n                kind = 2 | 128;\r\n                char = advanceChar(parser);\r\n                while (CharTypes[char] & (128 | 4096)) {\r\n                    if (char === 95) {\r\n                        if (!allowSeparator) {\r\n                            report(parser, 146);\r\n                        }\r\n                        allowSeparator = 0;\r\n                        char = advanceChar(parser);\r\n                        continue;\r\n                    }\r\n                    allowSeparator = 1;\r\n                    value = value * 2 + (char - 48);\r\n                    digits++;\r\n                    char = advanceChar(parser);\r\n                }\r\n                if (digits < 1 || !allowSeparator) {\r\n                    report(parser, digits < 1 ? 0 : 147);\r\n                }\r\n            }\r\n            else if (CharTypes[char] & 32) {\r\n                if (context & 1024)\r\n                    report(parser, 1);\r\n                kind = 1;\r\n                while (CharTypes[char] & 16) {\r\n                    if (CharTypes[char] & 512) {\r\n                        kind = 32;\r\n                        atStart = 0;\r\n                        break;\r\n                    }\r\n                    value = value * 8 + (char - 48);\r\n                    char = advanceChar(parser);\r\n                }\r\n            }\r\n            else if (CharTypes[char] & 512) {\r\n                if (context & 1024)\r\n                    report(parser, 1);\r\n                parser.flags |= 64;\r\n                kind = 32;\r\n            }\r\n            else if (char === 95) {\r\n                report(parser, 0);\r\n            }\r\n        }\r\n        if (kind & 48) {\r\n            if (atStart) {\r\n                while (digit >= 0 && CharTypes[char] & (16 | 4096)) {\r\n                    if (char === 95) {\r\n                        char = advanceChar(parser);\r\n                        if (char === 95 || kind & 32) {\r\n                            reportScannerError(parser.index, parser.line, parser.index + 1, 146);\r\n                        }\r\n                        allowSeparator = 1;\r\n                        continue;\r\n                    }\r\n                    allowSeparator = 0;\r\n                    value = 10 * value + (char - 48);\r\n                    char = advanceChar(parser);\r\n                    --digit;\r\n                }\r\n                if (allowSeparator) {\r\n                    reportScannerError(parser.index, parser.line, parser.index + 1, 147);\r\n                }\r\n                if (digit >= 0 && !isIdentifierStart(char) && char !== 46) {\r\n                    parser.tokenValue = value;\r\n                    if (context & 512)\r\n                        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n                    return 134283266;\r\n                }\r\n            }\r\n            value += scanDecimalDigitsOrSeparator(parser, char);\r\n            char = parser.currentChar;\r\n            if (char === 46) {\r\n                if (advanceChar(parser) === 95)\r\n                    report(parser, 0);\r\n                kind = 64;\r\n                value += '.' + scanDecimalDigitsOrSeparator(parser, parser.currentChar);\r\n                char = parser.currentChar;\r\n            }\r\n        }\r\n    }\r\n    const end = parser.index;\r\n    let isBigInt = 0;\r\n    if (char === 110 && kind & 128) {\r\n        isBigInt = 1;\r\n        char = advanceChar(parser);\r\n    }\r\n    else {\r\n        if ((char | 32) === 101) {\r\n            char = advanceChar(parser);\r\n            if (CharTypes[char] & 256)\r\n                char = advanceChar(parser);\r\n            const { index } = parser;\r\n            if ((CharTypes[char] & 16) < 1)\r\n                report(parser, 10);\r\n            value += parser.source.substring(end, index) + scanDecimalDigitsOrSeparator(parser, char);\r\n            char = parser.currentChar;\r\n        }\r\n    }\r\n    if ((parser.index < parser.end && CharTypes[char] & 16) || isIdentifierStart(char)) {\r\n        report(parser, 12);\r\n    }\r\n    if (isBigInt) {\r\n        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n        parser.tokenValue = BigInt(value);\r\n        return 134283389;\r\n    }\r\n    parser.tokenValue =\r\n        kind & (1 | 2 | 8 | 4)\r\n            ? value\r\n            : kind & 32\r\n                ? parseFloat(parser.source.substring(parser.tokenPos, parser.index))\r\n                : +value;\r\n    if (context & 512)\r\n        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n    return 134283266;\r\n}\r\nfunction scanDecimalDigitsOrSeparator(parser, char) {\r\n    let allowSeparator = 0;\r\n    let start = parser.index;\r\n    let ret = '';\r\n    while (CharTypes[char] & (16 | 4096)) {\r\n        if (char === 95) {\r\n            const { index } = parser;\r\n            char = advanceChar(parser);\r\n            if (char === 95) {\r\n                reportScannerError(parser.index, parser.line, parser.index + 1, 146);\r\n            }\r\n            allowSeparator = 1;\r\n            ret += parser.source.substring(start, index);\r\n            start = parser.index;\r\n            continue;\r\n        }\r\n        allowSeparator = 0;\r\n        char = advanceChar(parser);\r\n    }\r\n    if (allowSeparator) {\r\n        reportScannerError(parser.index, parser.line, parser.index + 1, 147);\r\n    }\r\n    return ret + parser.source.substring(start, parser.index);\r\n}\n\nconst KeywordDescTable = [\r\n    'end of source',\r\n    'identifier', 'number', 'string', 'regular expression',\r\n    'false', 'true', 'null',\r\n    'template continuation', 'template tail',\r\n    '=>', '(', '{', '.', '...', '}', ')', ';', ',', '[', ']', ':', '?', '\\'', '\"', '</', '/>',\r\n    '++', '--',\r\n    '=', '<<=', '>>=', '>>>=', '**=', '+=', '-=', '*=', '/=', '%=', '^=', '|=',\r\n    '&=', '||=', '&&=', '??=',\r\n    'typeof', 'delete', 'void', '!', '~', '+', '-', 'in', 'instanceof', '*', '%', '/', '**', '&&',\r\n    '||', '===', '!==', '==', '!=', '<=', '>=', '<', '>', '<<', '>>', '>>>', '&', '|', '^',\r\n    'var', 'let', 'const',\r\n    'break', 'case', 'catch', 'class', 'continue', 'debugger', 'default', 'do', 'else', 'export',\r\n    'extends', 'finally', 'for', 'function', 'if', 'import', 'new', 'return', 'super', 'switch',\r\n    'this', 'throw', 'try', 'while', 'with',\r\n    'implements', 'interface', 'package', 'private', 'protected', 'public', 'static', 'yield',\r\n    'as', 'async', 'await', 'constructor', 'get', 'set', 'from', 'of',\r\n    'enum', 'eval', 'arguments', 'escaped keyword', 'escaped future reserved keyword', 'reserved if strict', '#',\r\n    'BigIntLiteral', '??', '?.', 'WhiteSpace', 'Illegal', 'LineTerminator', 'PrivateField',\r\n    'Template', '@', 'target', 'meta', 'LineFeed', 'Escaped', 'JSXText'\r\n];\r\nconst descKeywordTable = Object.create(null, {\r\n    this: { value: 86113 },\r\n    function: { value: 86106 },\r\n    if: { value: 20571 },\r\n    return: { value: 20574 },\r\n    var: { value: 86090 },\r\n    else: { value: 20565 },\r\n    for: { value: 20569 },\r\n    new: { value: 86109 },\r\n    in: { value: 8738868 },\r\n    typeof: { value: 16863277 },\r\n    while: { value: 20580 },\r\n    case: { value: 20558 },\r\n    break: { value: 20557 },\r\n    try: { value: 20579 },\r\n    catch: { value: 20559 },\r\n    delete: { value: 16863278 },\r\n    throw: { value: 86114 },\r\n    switch: { value: 86112 },\r\n    continue: { value: 20561 },\r\n    default: { value: 20563 },\r\n    instanceof: { value: 8476725 },\r\n    do: { value: 20564 },\r\n    void: { value: 16863279 },\r\n    finally: { value: 20568 },\r\n    async: { value: 209007 },\r\n    await: { value: 209008 },\r\n    class: { value: 86096 },\r\n    const: { value: 86092 },\r\n    constructor: { value: 12401 },\r\n    debugger: { value: 20562 },\r\n    export: { value: 20566 },\r\n    extends: { value: 20567 },\r\n    false: { value: 86021 },\r\n    from: { value: 12404 },\r\n    get: { value: 12402 },\r\n    implements: { value: 36966 },\r\n    import: { value: 86108 },\r\n    interface: { value: 36967 },\r\n    let: { value: 241739 },\r\n    null: { value: 86023 },\r\n    of: { value: 274549 },\r\n    package: { value: 36968 },\r\n    private: { value: 36969 },\r\n    protected: { value: 36970 },\r\n    public: { value: 36971 },\r\n    set: { value: 12403 },\r\n    static: { value: 36972 },\r\n    super: { value: 86111 },\r\n    true: { value: 86022 },\r\n    with: { value: 20581 },\r\n    yield: { value: 241773 },\r\n    enum: { value: 86134 },\r\n    eval: { value: 537079927 },\r\n    as: { value: 77934 },\r\n    arguments: { value: 537079928 },\r\n    target: { value: 143494 },\r\n    meta: { value: 143495 },\r\n});\n\nfunction scanIdentifier(parser, context, isValidAsKeyword) {\r\n    while (isIdPart[advanceChar(parser)]) { }\r\n    parser.tokenValue = parser.source.slice(parser.tokenPos, parser.index);\r\n    return parser.currentChar !== 92 && parser.currentChar < 0x7e\r\n        ? descKeywordTable[parser.tokenValue] || 208897\r\n        : scanIdentifierSlowCase(parser, context, 0, isValidAsKeyword);\r\n}\r\nfunction scanUnicodeIdentifier(parser, context) {\r\n    const cookedChar = scanIdentifierUnicodeEscape(parser);\r\n    if (!isIdentifierPart(cookedChar))\r\n        report(parser, 4);\r\n    parser.tokenValue = fromCodePoint(cookedChar);\r\n    return scanIdentifierSlowCase(parser, context, 1, CharTypes[cookedChar] & 4);\r\n}\r\nfunction scanIdentifierSlowCase(parser, context, hasEscape, isValidAsKeyword) {\r\n    let start = parser.index;\r\n    while (parser.index < parser.end) {\r\n        if (parser.currentChar === 92) {\r\n            parser.tokenValue += parser.source.slice(start, parser.index);\r\n            hasEscape = 1;\r\n            const code = scanIdentifierUnicodeEscape(parser);\r\n            if (!isIdentifierPart(code))\r\n                report(parser, 4);\r\n            isValidAsKeyword = isValidAsKeyword && CharTypes[code] & 4;\r\n            parser.tokenValue += fromCodePoint(code);\r\n            start = parser.index;\r\n        }\r\n        else if (isIdentifierPart(parser.currentChar) || consumeMultiUnitCodePoint(parser, parser.currentChar)) {\r\n            advanceChar(parser);\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    if (parser.index <= parser.end) {\r\n        parser.tokenValue += parser.source.slice(start, parser.index);\r\n    }\r\n    const length = parser.tokenValue.length;\r\n    if (isValidAsKeyword && length >= 2 && length <= 11) {\r\n        const token = descKeywordTable[parser.tokenValue];\r\n        if (token === void 0)\r\n            return 208897;\r\n        if (!hasEscape)\r\n            return token;\r\n        if (context & 1024) {\r\n            return token === 209008 && (context & (2048 | 4194304)) === 0\r\n                ? token\r\n                : token === 36972\r\n                    ? 122\r\n                    : (token & 36864) === 36864\r\n                        ? 122\r\n                        : 121;\r\n        }\r\n        if (context & 1073741824 &&\r\n            (context & 8192) === 0 &&\r\n            (token & 20480) === 20480)\r\n            return token;\r\n        if (token === 241773) {\r\n            return context & 1073741824\r\n                ? 143483\r\n                : context & 2097152\r\n                    ? 121\r\n                    : token;\r\n        }\r\n        return token === 209007 && context & 1073741824\r\n            ? 143483\r\n            : (token & 36864) === 36864\r\n                ? token\r\n                : token === 209008 && (context & 4194304) === 0\r\n                    ? token\r\n                    : 121;\r\n    }\r\n    return 208897;\r\n}\r\nfunction scanPrivateIdentifier(parser) {\r\n    if (!isIdentifierStart(advanceChar(parser)))\r\n        report(parser, 93);\r\n    return 131;\r\n}\r\nfunction scanIdentifierUnicodeEscape(parser) {\r\n    if (parser.source.charCodeAt(parser.index + 1) !== 117) {\r\n        report(parser, 4);\r\n    }\r\n    parser.currentChar = parser.source.charCodeAt((parser.index += 2));\r\n    return scanUnicodeEscape(parser);\r\n}\r\nfunction scanUnicodeEscape(parser) {\r\n    let codePoint = 0;\r\n    const char = parser.currentChar;\r\n    if (char === 123) {\r\n        const begin = parser.index - 2;\r\n        while (CharTypes[advanceChar(parser)] & 64) {\r\n            codePoint = (codePoint << 4) | toHex(parser.currentChar);\r\n            if (codePoint > 1114111)\r\n                reportScannerError(begin, parser.line, parser.index + 1, 101);\r\n        }\r\n        if (parser.currentChar !== 125) {\r\n            reportScannerError(begin, parser.line, parser.index - 1, 6);\r\n        }\r\n        advanceChar(parser);\r\n        return codePoint;\r\n    }\r\n    if ((CharTypes[char] & 64) === 0)\r\n        report(parser, 6);\r\n    const char2 = parser.source.charCodeAt(parser.index + 1);\r\n    if ((CharTypes[char2] & 64) === 0)\r\n        report(parser, 6);\r\n    const char3 = parser.source.charCodeAt(parser.index + 2);\r\n    if ((CharTypes[char3] & 64) === 0)\r\n        report(parser, 6);\r\n    const char4 = parser.source.charCodeAt(parser.index + 3);\r\n    if ((CharTypes[char4] & 64) === 0)\r\n        report(parser, 6);\r\n    codePoint = (toHex(char) << 12) | (toHex(char2) << 8) | (toHex(char3) << 4) | toHex(char4);\r\n    parser.currentChar = parser.source.charCodeAt((parser.index += 4));\r\n    return codePoint;\r\n}\n\nconst TokenLookup = [\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    128,\r\n    136,\r\n    128,\r\n    128,\r\n    130,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    128,\r\n    16842800,\r\n    134283267,\r\n    131,\r\n    208897,\r\n    8457015,\r\n    8455751,\r\n    134283267,\r\n    67174411,\r\n    16,\r\n    8457014,\r\n    25233970,\r\n    18,\r\n    25233971,\r\n    67108877,\r\n    8457016,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    21,\r\n    1074790417,\r\n    8456258,\r\n    1077936157,\r\n    8456259,\r\n    22,\r\n    133,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    69271571,\r\n    137,\r\n    20,\r\n    8455497,\r\n    208897,\r\n    132,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    208897,\r\n    208897,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    4096,\r\n    2162700,\r\n    8455240,\r\n    1074790415,\r\n    16842801,\r\n    129\r\n];\r\nfunction nextToken(parser, context) {\r\n    parser.flags = (parser.flags | 1) ^ 1;\r\n    parser.startPos = parser.index;\r\n    parser.startColumn = parser.column;\r\n    parser.startLine = parser.line;\r\n    parser.token = scanSingleToken(parser, context, 0);\r\n    if (parser.onToken && parser.token !== 1048576) {\r\n        const loc = {\r\n            start: {\r\n                line: parser.linePos,\r\n                column: parser.colPos\r\n            },\r\n            end: {\r\n                line: parser.line,\r\n                column: parser.column\r\n            }\r\n        };\r\n        parser.onToken(convertTokenType(parser.token), parser.tokenPos, parser.index, loc);\r\n    }\r\n}\r\nfunction scanSingleToken(parser, context, state) {\r\n    const isStartOfLine = parser.index === 0;\r\n    const source = parser.source;\r\n    let startPos = parser.index;\r\n    let startLine = parser.line;\r\n    let startColumn = parser.column;\r\n    while (parser.index < parser.end) {\r\n        parser.tokenPos = parser.index;\r\n        parser.colPos = parser.column;\r\n        parser.linePos = parser.line;\r\n        let char = parser.currentChar;\r\n        if (char <= 0x7e) {\r\n            const token = TokenLookup[char];\r\n            switch (token) {\r\n                case 67174411:\r\n                case 16:\r\n                case 2162700:\r\n                case 1074790415:\r\n                case 69271571:\r\n                case 20:\r\n                case 21:\r\n                case 1074790417:\r\n                case 18:\r\n                case 16842801:\r\n                case 133:\r\n                case 129:\r\n                    advanceChar(parser);\r\n                    return token;\r\n                case 208897:\r\n                    return scanIdentifier(parser, context, 0);\r\n                case 4096:\r\n                    return scanIdentifier(parser, context, 1);\r\n                case 134283266:\r\n                    return scanNumber(parser, context, 16 | 128);\r\n                case 134283267:\r\n                    return scanString(parser, context, char);\r\n                case 132:\r\n                    return scanTemplate(parser, context);\r\n                case 137:\r\n                    return scanUnicodeIdentifier(parser, context);\r\n                case 131:\r\n                    return scanPrivateIdentifier(parser);\r\n                case 128:\r\n                    advanceChar(parser);\r\n                    break;\r\n                case 130:\r\n                    state |= 1 | 4;\r\n                    scanNewLine(parser);\r\n                    break;\r\n                case 136:\r\n                    consumeLineFeed(parser, state);\r\n                    state = (state & ~4) | 1;\r\n                    break;\r\n                case 8456258:\r\n                    let ch = advanceChar(parser);\r\n                    if (parser.index < parser.end) {\r\n                        if (ch === 60) {\r\n                            if (parser.index < parser.end && advanceChar(parser) === 61) {\r\n                                advanceChar(parser);\r\n                                return 4194334;\r\n                            }\r\n                            return 8456516;\r\n                        }\r\n                        else if (ch === 61) {\r\n                            advanceChar(parser);\r\n                            return 8456000;\r\n                        }\r\n                        if (ch === 33) {\r\n                            const index = parser.index + 1;\r\n                            if (index + 1 < parser.end &&\r\n                                source.charCodeAt(index) === 45 &&\r\n                                source.charCodeAt(index + 1) == 45) {\r\n                                parser.column += 3;\r\n                                parser.currentChar = source.charCodeAt((parser.index += 3));\r\n                                state = skipSingleHTMLComment(parser, source, state, context, 2, parser.tokenPos, parser.linePos, parser.colPos);\r\n                                startPos = parser.tokenPos;\r\n                                startLine = parser.linePos;\r\n                                startColumn = parser.colPos;\r\n                                continue;\r\n                            }\r\n                            return 8456258;\r\n                        }\r\n                        if (ch === 47) {\r\n                            if ((context & 16) < 1)\r\n                                return 8456258;\r\n                            const index = parser.index + 1;\r\n                            if (index < parser.end) {\r\n                                ch = source.charCodeAt(index);\r\n                                if (ch === 42 || ch === 47)\r\n                                    break;\r\n                            }\r\n                            advanceChar(parser);\r\n                            return 25;\r\n                        }\r\n                    }\r\n                    return 8456258;\r\n                case 1077936157: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 61) {\r\n                        if (advanceChar(parser) === 61) {\r\n                            advanceChar(parser);\r\n                            return 8455996;\r\n                        }\r\n                        return 8455998;\r\n                    }\r\n                    if (ch === 62) {\r\n                        advanceChar(parser);\r\n                        return 10;\r\n                    }\r\n                    return 1077936157;\r\n                }\r\n                case 16842800:\r\n                    if (advanceChar(parser) !== 61) {\r\n                        return 16842800;\r\n                    }\r\n                    if (advanceChar(parser) !== 61) {\r\n                        return 8455999;\r\n                    }\r\n                    advanceChar(parser);\r\n                    return 8455997;\r\n                case 8457015:\r\n                    if (advanceChar(parser) !== 61)\r\n                        return 8457015;\r\n                    advanceChar(parser);\r\n                    return 4194342;\r\n                case 8457014: {\r\n                    advanceChar(parser);\r\n                    if (parser.index >= parser.end)\r\n                        return 8457014;\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194340;\r\n                    }\r\n                    if (ch !== 42)\r\n                        return 8457014;\r\n                    if (advanceChar(parser) !== 61)\r\n                        return 8457273;\r\n                    advanceChar(parser);\r\n                    return 4194337;\r\n                }\r\n                case 8455497:\r\n                    if (advanceChar(parser) !== 61)\r\n                        return 8455497;\r\n                    advanceChar(parser);\r\n                    return 4194343;\r\n                case 25233970: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 43) {\r\n                        advanceChar(parser);\r\n                        return 33619995;\r\n                    }\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194338;\r\n                    }\r\n                    return 25233970;\r\n                }\r\n                case 25233971: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 45) {\r\n                        advanceChar(parser);\r\n                        if ((state & 1 || isStartOfLine) && parser.currentChar === 62) {\r\n                            if ((context & 256) === 0)\r\n                                report(parser, 108);\r\n                            advanceChar(parser);\r\n                            state = skipSingleHTMLComment(parser, source, state, context, 3, startPos, startLine, startColumn);\r\n                            startPos = parser.tokenPos;\r\n                            startLine = parser.linePos;\r\n                            startColumn = parser.colPos;\r\n                            continue;\r\n                        }\r\n                        return 33619996;\r\n                    }\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194339;\r\n                    }\r\n                    return 25233971;\r\n                }\r\n                case 8457016: {\r\n                    advanceChar(parser);\r\n                    if (parser.index < parser.end) {\r\n                        const ch = parser.currentChar;\r\n                        if (ch === 47) {\r\n                            advanceChar(parser);\r\n                            state = skipSingleLineComment(parser, source, state, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n                            startPos = parser.tokenPos;\r\n                            startLine = parser.linePos;\r\n                            startColumn = parser.colPos;\r\n                            continue;\r\n                        }\r\n                        if (ch === 42) {\r\n                            advanceChar(parser);\r\n                            state = skipMultiLineComment(parser, source, state);\r\n                            startPos = parser.tokenPos;\r\n                            startLine = parser.linePos;\r\n                            startColumn = parser.colPos;\r\n                            continue;\r\n                        }\r\n                        if (context & 32768) {\r\n                            return scanRegularExpression(parser, context);\r\n                        }\r\n                        if (ch === 61) {\r\n                            advanceChar(parser);\r\n                            return 4259877;\r\n                        }\r\n                    }\r\n                    return 8457016;\r\n                }\r\n                case 67108877:\r\n                    const next = advanceChar(parser);\r\n                    if (next >= 48 && next <= 57)\r\n                        return scanNumber(parser, context, 64 | 16);\r\n                    if (next === 46) {\r\n                        const index = parser.index + 1;\r\n                        if (index < parser.end && source.charCodeAt(index) === 46) {\r\n                            parser.column += 2;\r\n                            parser.currentChar = source.charCodeAt((parser.index += 2));\r\n                            return 14;\r\n                        }\r\n                    }\r\n                    return 67108877;\r\n                case 8455240: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 124) {\r\n                        advanceChar(parser);\r\n                        if (parser.currentChar === 61) {\r\n                            advanceChar(parser);\r\n                            return 4194346;\r\n                        }\r\n                        return 8979003;\r\n                    }\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194344;\r\n                    }\r\n                    return 8455240;\r\n                }\r\n                case 8456259: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 8456001;\r\n                    }\r\n                    if (ch !== 62)\r\n                        return 8456259;\r\n                    advanceChar(parser);\r\n                    if (parser.index < parser.end) {\r\n                        const ch = parser.currentChar;\r\n                        if (ch === 62) {\r\n                            if (advanceChar(parser) === 61) {\r\n                                advanceChar(parser);\r\n                                return 4194336;\r\n                            }\r\n                            return 8456518;\r\n                        }\r\n                        if (ch === 61) {\r\n                            advanceChar(parser);\r\n                            return 4194335;\r\n                        }\r\n                    }\r\n                    return 8456517;\r\n                }\r\n                case 8455751: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 38) {\r\n                        advanceChar(parser);\r\n                        if (parser.currentChar === 61) {\r\n                            advanceChar(parser);\r\n                            return 4194347;\r\n                        }\r\n                        return 8979258;\r\n                    }\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194345;\r\n                    }\r\n                    return 8455751;\r\n                }\r\n                case 22: {\r\n                    let ch = advanceChar(parser);\r\n                    if (ch === 63) {\r\n                        advanceChar(parser);\r\n                        if (parser.currentChar === 61) {\r\n                            advanceChar(parser);\r\n                            return 4194348;\r\n                        }\r\n                        return 276889982;\r\n                    }\r\n                    if (ch === 46) {\r\n                        const index = parser.index + 1;\r\n                        if (index < parser.end) {\r\n                            ch = source.charCodeAt(index);\r\n                            if (!(ch >= 48 && ch <= 57)) {\r\n                                advanceChar(parser);\r\n                                return 67108991;\r\n                            }\r\n                        }\r\n                    }\r\n                    return 22;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if ((char ^ 8232) <= 1) {\r\n                state = (state & ~4) | 1;\r\n                scanNewLine(parser);\r\n                continue;\r\n            }\r\n            if ((char & 0xfc00) === 0xd800 || ((unicodeLookup[(char >>> 5) + 34816] >>> char) & 31 & 1) !== 0) {\r\n                if ((char & 0xfc00) === 0xdc00) {\r\n                    char = ((char & 0x3ff) << 10) | (char & 0x3ff) | 0x10000;\r\n                    if (((unicodeLookup[(char >>> 5) + 0] >>> char) & 31 & 1) === 0) {\r\n                        report(parser, 18, fromCodePoint(char));\r\n                    }\r\n                    parser.index++;\r\n                    parser.currentChar = char;\r\n                }\r\n                parser.column++;\r\n                parser.tokenValue = '';\r\n                return scanIdentifierSlowCase(parser, context, 0, 0);\r\n            }\r\n            if (isExoticECMAScriptWhitespace(char)) {\r\n                advanceChar(parser);\r\n                continue;\r\n            }\r\n            report(parser, 18, fromCodePoint(char));\r\n        }\r\n    }\r\n    return 1048576;\r\n}\n\nconst entities = {\r\n    AElig: '\\u00C6',\r\n    AMP: '\\u0026',\r\n    Aacute: '\\u00C1',\r\n    Abreve: '\\u0102',\r\n    Acirc: '\\u00C2',\r\n    Acy: '\\u0410',\r\n    Afr: '\\uD835\\uDD04',\r\n    Agrave: '\\u00C0',\r\n    Alpha: '\\u0391',\r\n    Amacr: '\\u0100',\r\n    And: '\\u2A53',\r\n    Aogon: '\\u0104',\r\n    Aopf: '\\uD835\\uDD38',\r\n    ApplyFunction: '\\u2061',\r\n    Aring: '\\u00C5',\r\n    Ascr: '\\uD835\\uDC9C',\r\n    Assign: '\\u2254',\r\n    Atilde: '\\u00C3',\r\n    Auml: '\\u00C4',\r\n    Backslash: '\\u2216',\r\n    Barv: '\\u2AE7',\r\n    Barwed: '\\u2306',\r\n    Bcy: '\\u0411',\r\n    Because: '\\u2235',\r\n    Bernoullis: '\\u212C',\r\n    Beta: '\\u0392',\r\n    Bfr: '\\uD835\\uDD05',\r\n    Bopf: '\\uD835\\uDD39',\r\n    Breve: '\\u02D8',\r\n    Bscr: '\\u212C',\r\n    Bumpeq: '\\u224E',\r\n    CHcy: '\\u0427',\r\n    COPY: '\\u00A9',\r\n    Cacute: '\\u0106',\r\n    Cap: '\\u22D2',\r\n    CapitalDifferentialD: '\\u2145',\r\n    Cayleys: '\\u212D',\r\n    Ccaron: '\\u010C',\r\n    Ccedil: '\\u00C7',\r\n    Ccirc: '\\u0108',\r\n    Cconint: '\\u2230',\r\n    Cdot: '\\u010A',\r\n    Cedilla: '\\u00B8',\r\n    CenterDot: '\\u00B7',\r\n    Cfr: '\\u212D',\r\n    Chi: '\\u03A7',\r\n    CircleDot: '\\u2299',\r\n    CircleMinus: '\\u2296',\r\n    CirclePlus: '\\u2295',\r\n    CircleTimes: '\\u2297',\r\n    ClockwiseContourIntegral: '\\u2232',\r\n    CloseCurlyDoubleQuote: '\\u201D',\r\n    CloseCurlyQuote: '\\u2019',\r\n    Colon: '\\u2237',\r\n    Colone: '\\u2A74',\r\n    Congruent: '\\u2261',\r\n    Conint: '\\u222F',\r\n    ContourIntegral: '\\u222E',\r\n    Copf: '\\u2102',\r\n    Coproduct: '\\u2210',\r\n    CounterClockwiseContourIntegral: '\\u2233',\r\n    Cross: '\\u2A2F',\r\n    Cscr: '\\uD835\\uDC9E',\r\n    Cup: '\\u22D3',\r\n    CupCap: '\\u224D',\r\n    DD: '\\u2145',\r\n    DDotrahd: '\\u2911',\r\n    DJcy: '\\u0402',\r\n    DScy: '\\u0405',\r\n    DZcy: '\\u040F',\r\n    Dagger: '\\u2021',\r\n    Darr: '\\u21A1',\r\n    Dashv: '\\u2AE4',\r\n    Dcaron: '\\u010E',\r\n    Dcy: '\\u0414',\r\n    Del: '\\u2207',\r\n    Delta: '\\u0394',\r\n    Dfr: '\\uD835\\uDD07',\r\n    DiacriticalAcute: '\\u00B4',\r\n    DiacriticalDot: '\\u02D9',\r\n    DiacriticalDoubleAcute: '\\u02DD',\r\n    DiacriticalGrave: '\\u0060',\r\n    DiacriticalTilde: '\\u02DC',\r\n    Diamond: '\\u22C4',\r\n    DifferentialD: '\\u2146',\r\n    Dopf: '\\uD835\\uDD3B',\r\n    Dot: '\\u00A8',\r\n    DotDot: '\\u20DC',\r\n    DotEqual: '\\u2250',\r\n    DoubleContourIntegral: '\\u222F',\r\n    DoubleDot: '\\u00A8',\r\n    DoubleDownArrow: '\\u21D3',\r\n    DoubleLeftArrow: '\\u21D0',\r\n    DoubleLeftRightArrow: '\\u21D4',\r\n    DoubleLeftTee: '\\u2AE4',\r\n    DoubleLongLeftArrow: '\\u27F8',\r\n    DoubleLongLeftRightArrow: '\\u27FA',\r\n    DoubleLongRightArrow: '\\u27F9',\r\n    DoubleRightArrow: '\\u21D2',\r\n    DoubleRightTee: '\\u22A8',\r\n    DoubleUpArrow: '\\u21D1',\r\n    DoubleUpDownArrow: '\\u21D5',\r\n    DoubleVerticalBar: '\\u2225',\r\n    DownArrow: '\\u2193',\r\n    DownArrowBar: '\\u2913',\r\n    DownArrowUpArrow: '\\u21F5',\r\n    DownBreve: '\\u0311',\r\n    DownLeftRightVector: '\\u2950',\r\n    DownLeftTeeVector: '\\u295E',\r\n    DownLeftVector: '\\u21BD',\r\n    DownLeftVectorBar: '\\u2956',\r\n    DownRightTeeVector: '\\u295F',\r\n    DownRightVector: '\\u21C1',\r\n    DownRightVectorBar: '\\u2957',\r\n    DownTee: '\\u22A4',\r\n    DownTeeArrow: '\\u21A7',\r\n    Downarrow: '\\u21D3',\r\n    Dscr: '\\uD835\\uDC9F',\r\n    Dstrok: '\\u0110',\r\n    ENG: '\\u014A',\r\n    ETH: '\\u00D0',\r\n    Eacute: '\\u00C9',\r\n    Ecaron: '\\u011A',\r\n    Ecirc: '\\u00CA',\r\n    Ecy: '\\u042D',\r\n    Edot: '\\u0116',\r\n    Efr: '\\uD835\\uDD08',\r\n    Egrave: '\\u00C8',\r\n    Element: '\\u2208',\r\n    Emacr: '\\u0112',\r\n    EmptySmallSquare: '\\u25FB',\r\n    EmptyVerySmallSquare: '\\u25AB',\r\n    Eogon: '\\u0118',\r\n    Eopf: '\\uD835\\uDD3C',\r\n    Epsilon: '\\u0395',\r\n    Equal: '\\u2A75',\r\n    EqualTilde: '\\u2242',\r\n    Equilibrium: '\\u21CC',\r\n    Escr: '\\u2130',\r\n    Esim: '\\u2A73',\r\n    Eta: '\\u0397',\r\n    Euml: '\\u00CB',\r\n    Exists: '\\u2203',\r\n    ExponentialE: '\\u2147',\r\n    Fcy: '\\u0424',\r\n    Ffr: '\\uD835\\uDD09',\r\n    FilledSmallSquare: '\\u25FC',\r\n    FilledVerySmallSquare: '\\u25AA',\r\n    Fopf: '\\uD835\\uDD3D',\r\n    ForAll: '\\u2200',\r\n    Fouriertrf: '\\u2131',\r\n    Fscr: '\\u2131',\r\n    GJcy: '\\u0403',\r\n    GT: '\\u003E',\r\n    Gamma: '\\u0393',\r\n    Gammad: '\\u03DC',\r\n    Gbreve: '\\u011E',\r\n    Gcedil: '\\u0122',\r\n    Gcirc: '\\u011C',\r\n    Gcy: '\\u0413',\r\n    Gdot: '\\u0120',\r\n    Gfr: '\\uD835\\uDD0A',\r\n    Gg: '\\u22D9',\r\n    Gopf: '\\uD835\\uDD3E',\r\n    GreaterEqual: '\\u2265',\r\n    GreaterEqualLess: '\\u22DB',\r\n    GreaterFullEqual: '\\u2267',\r\n    GreaterGreater: '\\u2AA2',\r\n    GreaterLess: '\\u2277',\r\n    GreaterSlantEqual: '\\u2A7E',\r\n    GreaterTilde: '\\u2273',\r\n    Gscr: '\\uD835\\uDCA2',\r\n    Gt: '\\u226B',\r\n    HARDcy: '\\u042A',\r\n    Hacek: '\\u02C7',\r\n    Hat: '\\u005E',\r\n    Hcirc: '\\u0124',\r\n    Hfr: '\\u210C',\r\n    HilbertSpace: '\\u210B',\r\n    Hopf: '\\u210D',\r\n    HorizontalLine: '\\u2500',\r\n    Hscr: '\\u210B',\r\n    Hstrok: '\\u0126',\r\n    HumpDownHump: '\\u224E',\r\n    HumpEqual: '\\u224F',\r\n    IEcy: '\\u0415',\r\n    IJlig: '\\u0132',\r\n    IOcy: '\\u0401',\r\n    Iacute: '\\u00CD',\r\n    Icirc: '\\u00CE',\r\n    Icy: '\\u0418',\r\n    Idot: '\\u0130',\r\n    Ifr: '\\u2111',\r\n    Igrave: '\\u00CC',\r\n    Im: '\\u2111',\r\n    Imacr: '\\u012A',\r\n    ImaginaryI: '\\u2148',\r\n    Implies: '\\u21D2',\r\n    Int: '\\u222C',\r\n    Integral: '\\u222B',\r\n    Intersection: '\\u22C2',\r\n    InvisibleComma: '\\u2063',\r\n    InvisibleTimes: '\\u2062',\r\n    Iogon: '\\u012E',\r\n    Iopf: '\\uD835\\uDD40',\r\n    Iota: '\\u0399',\r\n    Iscr: '\\u2110',\r\n    Itilde: '\\u0128',\r\n    Iukcy: '\\u0406',\r\n    Iuml: '\\u00CF',\r\n    Jcirc: '\\u0134',\r\n    Jcy: '\\u0419',\r\n    Jfr: '\\uD835\\uDD0D',\r\n    Jopf: '\\uD835\\uDD41',\r\n    Jscr: '\\uD835\\uDCA5',\r\n    Jsercy: '\\u0408',\r\n    Jukcy: '\\u0404',\r\n    KHcy: '\\u0425',\r\n    KJcy: '\\u040C',\r\n    Kappa: '\\u039A',\r\n    Kcedil: '\\u0136',\r\n    Kcy: '\\u041A',\r\n    Kfr: '\\uD835\\uDD0E',\r\n    Kopf: '\\uD835\\uDD42',\r\n    Kscr: '\\uD835\\uDCA6',\r\n    LJcy: '\\u0409',\r\n    LT: '\\u003C',\r\n    Lacute: '\\u0139',\r\n    Lambda: '\\u039B',\r\n    Lang: '\\u27EA',\r\n    Laplacetrf: '\\u2112',\r\n    Larr: '\\u219E',\r\n    Lcaron: '\\u013D',\r\n    Lcedil: '\\u013B',\r\n    Lcy: '\\u041B',\r\n    LeftAngleBracket: '\\u27E8',\r\n    LeftArrow: '\\u2190',\r\n    LeftArrowBar: '\\u21E4',\r\n    LeftArrowRightArrow: '\\u21C6',\r\n    LeftCeiling: '\\u2308',\r\n    LeftDoubleBracket: '\\u27E6',\r\n    LeftDownTeeVector: '\\u2961',\r\n    LeftDownVector: '\\u21C3',\r\n    LeftDownVectorBar: '\\u2959',\r\n    LeftFloor: '\\u230A',\r\n    LeftRightArrow: '\\u2194',\r\n    LeftRightVector: '\\u294E',\r\n    LeftTee: '\\u22A3',\r\n    LeftTeeArrow: '\\u21A4',\r\n    LeftTeeVector: '\\u295A',\r\n    LeftTriangle: '\\u22B2',\r\n    LeftTriangleBar: '\\u29CF',\r\n    LeftTriangleEqual: '\\u22B4',\r\n    LeftUpDownVector: '\\u2951',\r\n    LeftUpTeeVector: '\\u2960',\r\n    LeftUpVector: '\\u21BF',\r\n    LeftUpVectorBar: '\\u2958',\r\n    LeftVector: '\\u21BC',\r\n    LeftVectorBar: '\\u2952',\r\n    Leftarrow: '\\u21D0',\r\n    Leftrightarrow: '\\u21D4',\r\n    LessEqualGreater: '\\u22DA',\r\n    LessFullEqual: '\\u2266',\r\n    LessGreater: '\\u2276',\r\n    LessLess: '\\u2AA1',\r\n    LessSlantEqual: '\\u2A7D',\r\n    LessTilde: '\\u2272',\r\n    Lfr: '\\uD835\\uDD0F',\r\n    Ll: '\\u22D8',\r\n    Lleftarrow: '\\u21DA',\r\n    Lmidot: '\\u013F',\r\n    LongLeftArrow: '\\u27F5',\r\n    LongLeftRightArrow: '\\u27F7',\r\n    LongRightArrow: '\\u27F6',\r\n    Longleftarrow: '\\u27F8',\r\n    Longleftrightarrow: '\\u27FA',\r\n    Longrightarrow: '\\u27F9',\r\n    Lopf: '\\uD835\\uDD43',\r\n    LowerLeftArrow: '\\u2199',\r\n    LowerRightArrow: '\\u2198',\r\n    Lscr: '\\u2112',\r\n    Lsh: '\\u21B0',\r\n    Lstrok: '\\u0141',\r\n    Lt: '\\u226A',\r\n    Map: '\\u2905',\r\n    Mcy: '\\u041C',\r\n    MediumSpace: '\\u205F',\r\n    Mellintrf: '\\u2133',\r\n    Mfr: '\\uD835\\uDD10',\r\n    MinusPlus: '\\u2213',\r\n    Mopf: '\\uD835\\uDD44',\r\n    Mscr: '\\u2133',\r\n    Mu: '\\u039C',\r\n    NJcy: '\\u040A',\r\n    Nacute: '\\u0143',\r\n    Ncaron: '\\u0147',\r\n    Ncedil: '\\u0145',\r\n    Ncy: '\\u041D',\r\n    NegativeMediumSpace: '\\u200B',\r\n    NegativeThickSpace: '\\u200B',\r\n    NegativeThinSpace: '\\u200B',\r\n    NegativeVeryThinSpace: '\\u200B',\r\n    NestedGreaterGreater: '\\u226B',\r\n    NestedLessLess: '\\u226A',\r\n    NewLine: '\\u000A',\r\n    Nfr: '\\uD835\\uDD11',\r\n    NoBreak: '\\u2060',\r\n    NonBreakingSpace: '\\u00A0',\r\n    Nopf: '\\u2115',\r\n    Not: '\\u2AEC',\r\n    NotCongruent: '\\u2262',\r\n    NotCupCap: '\\u226D',\r\n    NotDoubleVerticalBar: '\\u2226',\r\n    NotElement: '\\u2209',\r\n    NotEqual: '\\u2260',\r\n    NotEqualTilde: '\\u2242\\u0338',\r\n    NotExists: '\\u2204',\r\n    NotGreater: '\\u226F',\r\n    NotGreaterEqual: '\\u2271',\r\n    NotGreaterFullEqual: '\\u2267\\u0338',\r\n    NotGreaterGreater: '\\u226B\\u0338',\r\n    NotGreaterLess: '\\u2279',\r\n    NotGreaterSlantEqual: '\\u2A7E\\u0338',\r\n    NotGreaterTilde: '\\u2275',\r\n    NotHumpDownHump: '\\u224E\\u0338',\r\n    NotHumpEqual: '\\u224F\\u0338',\r\n    NotLeftTriangle: '\\u22EA',\r\n    NotLeftTriangleBar: '\\u29CF\\u0338',\r\n    NotLeftTriangleEqual: '\\u22EC',\r\n    NotLess: '\\u226E',\r\n    NotLessEqual: '\\u2270',\r\n    NotLessGreater: '\\u2278',\r\n    NotLessLess: '\\u226A\\u0338',\r\n    NotLessSlantEqual: '\\u2A7D\\u0338',\r\n    NotLessTilde: '\\u2274',\r\n    NotNestedGreaterGreater: '\\u2AA2\\u0338',\r\n    NotNestedLessLess: '\\u2AA1\\u0338',\r\n    NotPrecedes: '\\u2280',\r\n    NotPrecedesEqual: '\\u2AAF\\u0338',\r\n    NotPrecedesSlantEqual: '\\u22E0',\r\n    NotReverseElement: '\\u220C',\r\n    NotRightTriangle: '\\u22EB',\r\n    NotRightTriangleBar: '\\u29D0\\u0338',\r\n    NotRightTriangleEqual: '\\u22ED',\r\n    NotSquareSubset: '\\u228F\\u0338',\r\n    NotSquareSubsetEqual: '\\u22E2',\r\n    NotSquareSuperset: '\\u2290\\u0338',\r\n    NotSquareSupersetEqual: '\\u22E3',\r\n    NotSubset: '\\u2282\\u20D2',\r\n    NotSubsetEqual: '\\u2288',\r\n    NotSucceeds: '\\u2281',\r\n    NotSucceedsEqual: '\\u2AB0\\u0338',\r\n    NotSucceedsSlantEqual: '\\u22E1',\r\n    NotSucceedsTilde: '\\u227F\\u0338',\r\n    NotSuperset: '\\u2283\\u20D2',\r\n    NotSupersetEqual: '\\u2289',\r\n    NotTilde: '\\u2241',\r\n    NotTildeEqual: '\\u2244',\r\n    NotTildeFullEqual: '\\u2247',\r\n    NotTildeTilde: '\\u2249',\r\n    NotVerticalBar: '\\u2224',\r\n    Nscr: '\\uD835\\uDCA9',\r\n    Ntilde: '\\u00D1',\r\n    Nu: '\\u039D',\r\n    OElig: '\\u0152',\r\n    Oacute: '\\u00D3',\r\n    Ocirc: '\\u00D4',\r\n    Ocy: '\\u041E',\r\n    Odblac: '\\u0150',\r\n    Ofr: '\\uD835\\uDD12',\r\n    Ograve: '\\u00D2',\r\n    Omacr: '\\u014C',\r\n    Omega: '\\u03A9',\r\n    Omicron: '\\u039F',\r\n    Oopf: '\\uD835\\uDD46',\r\n    OpenCurlyDoubleQuote: '\\u201C',\r\n    OpenCurlyQuote: '\\u2018',\r\n    Or: '\\u2A54',\r\n    Oscr: '\\uD835\\uDCAA',\r\n    Oslash: '\\u00D8',\r\n    Otilde: '\\u00D5',\r\n    Otimes: '\\u2A37',\r\n    Ouml: '\\u00D6',\r\n    OverBar: '\\u203E',\r\n    OverBrace: '\\u23DE',\r\n    OverBracket: '\\u23B4',\r\n    OverParenthesis: '\\u23DC',\r\n    PartialD: '\\u2202',\r\n    Pcy: '\\u041F',\r\n    Pfr: '\\uD835\\uDD13',\r\n    Phi: '\\u03A6',\r\n    Pi: '\\u03A0',\r\n    PlusMinus: '\\u00B1',\r\n    Poincareplane: '\\u210C',\r\n    Popf: '\\u2119',\r\n    Pr: '\\u2ABB',\r\n    Precedes: '\\u227A',\r\n    PrecedesEqual: '\\u2AAF',\r\n    PrecedesSlantEqual: '\\u227C',\r\n    PrecedesTilde: '\\u227E',\r\n    Prime: '\\u2033',\r\n    Product: '\\u220F',\r\n    Proportion: '\\u2237',\r\n    Proportional: '\\u221D',\r\n    Pscr: '\\uD835\\uDCAB',\r\n    Psi: '\\u03A8',\r\n    QUOT: '\\u0022',\r\n    Qfr: '\\uD835\\uDD14',\r\n    Qopf: '\\u211A',\r\n    Qscr: '\\uD835\\uDCAC',\r\n    RBarr: '\\u2910',\r\n    REG: '\\u00AE',\r\n    Racute: '\\u0154',\r\n    Rang: '\\u27EB',\r\n    Rarr: '\\u21A0',\r\n    Rarrtl: '\\u2916',\r\n    Rcaron: '\\u0158',\r\n    Rcedil: '\\u0156',\r\n    Rcy: '\\u0420',\r\n    Re: '\\u211C',\r\n    ReverseElement: '\\u220B',\r\n    ReverseEquilibrium: '\\u21CB',\r\n    ReverseUpEquilibrium: '\\u296F',\r\n    Rfr: '\\u211C',\r\n    Rho: '\\u03A1',\r\n    RightAngleBracket: '\\u27E9',\r\n    RightArrow: '\\u2192',\r\n    RightArrowBar: '\\u21E5',\r\n    RightArrowLeftArrow: '\\u21C4',\r\n    RightCeiling: '\\u2309',\r\n    RightDoubleBracket: '\\u27E7',\r\n    RightDownTeeVector: '\\u295D',\r\n    RightDownVector: '\\u21C2',\r\n    RightDownVectorBar: '\\u2955',\r\n    RightFloor: '\\u230B',\r\n    RightTee: '\\u22A2',\r\n    RightTeeArrow: '\\u21A6',\r\n    RightTeeVector: '\\u295B',\r\n    RightTriangle: '\\u22B3',\r\n    RightTriangleBar: '\\u29D0',\r\n    RightTriangleEqual: '\\u22B5',\r\n    RightUpDownVector: '\\u294F',\r\n    RightUpTeeVector: '\\u295C',\r\n    RightUpVector: '\\u21BE',\r\n    RightUpVectorBar: '\\u2954',\r\n    RightVector: '\\u21C0',\r\n    RightVectorBar: '\\u2953',\r\n    Rightarrow: '\\u21D2',\r\n    Ropf: '\\u211D',\r\n    RoundImplies: '\\u2970',\r\n    Rrightarrow: '\\u21DB',\r\n    Rscr: '\\u211B',\r\n    Rsh: '\\u21B1',\r\n    RuleDelayed: '\\u29F4',\r\n    SHCHcy: '\\u0429',\r\n    SHcy: '\\u0428',\r\n    SOFTcy: '\\u042C',\r\n    Sacute: '\\u015A',\r\n    Sc: '\\u2ABC',\r\n    Scaron: '\\u0160',\r\n    Scedil: '\\u015E',\r\n    Scirc: '\\u015C',\r\n    Scy: '\\u0421',\r\n    Sfr: '\\uD835\\uDD16',\r\n    ShortDownArrow: '\\u2193',\r\n    ShortLeftArrow: '\\u2190',\r\n    ShortRightArrow: '\\u2192',\r\n    ShortUpArrow: '\\u2191',\r\n    Sigma: '\\u03A3',\r\n    SmallCircle: '\\u2218',\r\n    Sopf: '\\uD835\\uDD4A',\r\n    Sqrt: '\\u221A',\r\n    Square: '\\u25A1',\r\n    SquareIntersection: '\\u2293',\r\n    SquareSubset: '\\u228F',\r\n    SquareSubsetEqual: '\\u2291',\r\n    SquareSuperset: '\\u2290',\r\n    SquareSupersetEqual: '\\u2292',\r\n    SquareUnion: '\\u2294',\r\n    Sscr: '\\uD835\\uDCAE',\r\n    Star: '\\u22C6',\r\n    Sub: '\\u22D0',\r\n    Subset: '\\u22D0',\r\n    SubsetEqual: '\\u2286',\r\n    Succeeds: '\\u227B',\r\n    SucceedsEqual: '\\u2AB0',\r\n    SucceedsSlantEqual: '\\u227D',\r\n    SucceedsTilde: '\\u227F',\r\n    SuchThat: '\\u220B',\r\n    Sum: '\\u2211',\r\n    Sup: '\\u22D1',\r\n    Superset: '\\u2283',\r\n    SupersetEqual: '\\u2287',\r\n    Supset: '\\u22D1',\r\n    THORN: '\\u00DE',\r\n    TRADE: '\\u2122',\r\n    TSHcy: '\\u040B',\r\n    TScy: '\\u0426',\r\n    Tab: '\\u0009',\r\n    Tau: '\\u03A4',\r\n    Tcaron: '\\u0164',\r\n    Tcedil: '\\u0162',\r\n    Tcy: '\\u0422',\r\n    Tfr: '\\uD835\\uDD17',\r\n    Therefore: '\\u2234',\r\n    Theta: '\\u0398',\r\n    ThickSpace: '\\u205F\\u200A',\r\n    ThinSpace: '\\u2009',\r\n    Tilde: '\\u223C',\r\n    TildeEqual: '\\u2243',\r\n    TildeFullEqual: '\\u2245',\r\n    TildeTilde: '\\u2248',\r\n    Topf: '\\uD835\\uDD4B',\r\n    TripleDot: '\\u20DB',\r\n    Tscr: '\\uD835\\uDCAF',\r\n    Tstrok: '\\u0166',\r\n    Uacute: '\\u00DA',\r\n    Uarr: '\\u219F',\r\n    Uarrocir: '\\u2949',\r\n    Ubrcy: '\\u040E',\r\n    Ubreve: '\\u016C',\r\n    Ucirc: '\\u00DB',\r\n    Ucy: '\\u0423',\r\n    Udblac: '\\u0170',\r\n    Ufr: '\\uD835\\uDD18',\r\n    Ugrave: '\\u00D9',\r\n    Umacr: '\\u016A',\r\n    UnderBar: '\\u005F',\r\n    UnderBrace: '\\u23DF',\r\n    UnderBracket: '\\u23B5',\r\n    UnderParenthesis: '\\u23DD',\r\n    Union: '\\u22C3',\r\n    UnionPlus: '\\u228E',\r\n    Uogon: '\\u0172',\r\n    Uopf: '\\uD835\\uDD4C',\r\n    UpArrow: '\\u2191',\r\n    UpArrowBar: '\\u2912',\r\n    UpArrowDownArrow: '\\u21C5',\r\n    UpDownArrow: '\\u2195',\r\n    UpEquilibrium: '\\u296E',\r\n    UpTee: '\\u22A5',\r\n    UpTeeArrow: '\\u21A5',\r\n    Uparrow: '\\u21D1',\r\n    Updownarrow: '\\u21D5',\r\n    UpperLeftArrow: '\\u2196',\r\n    UpperRightArrow: '\\u2197',\r\n    Upsi: '\\u03D2',\r\n    Upsilon: '\\u03A5',\r\n    Uring: '\\u016E',\r\n    Uscr: '\\uD835\\uDCB0',\r\n    Utilde: '\\u0168',\r\n    Uuml: '\\u00DC',\r\n    VDash: '\\u22AB',\r\n    Vbar: '\\u2AEB',\r\n    Vcy: '\\u0412',\r\n    Vdash: '\\u22A9',\r\n    Vdashl: '\\u2AE6',\r\n    Vee: '\\u22C1',\r\n    Verbar: '\\u2016',\r\n    Vert: '\\u2016',\r\n    VerticalBar: '\\u2223',\r\n    VerticalLine: '\\u007C',\r\n    VerticalSeparator: '\\u2758',\r\n    VerticalTilde: '\\u2240',\r\n    VeryThinSpace: '\\u200A',\r\n    Vfr: '\\uD835\\uDD19',\r\n    Vopf: '\\uD835\\uDD4D',\r\n    Vscr: '\\uD835\\uDCB1',\r\n    Vvdash: '\\u22AA',\r\n    Wcirc: '\\u0174',\r\n    Wedge: '\\u22C0',\r\n    Wfr: '\\uD835\\uDD1A',\r\n    Wopf: '\\uD835\\uDD4E',\r\n    Wscr: '\\uD835\\uDCB2',\r\n    Xfr: '\\uD835\\uDD1B',\r\n    Xi: '\\u039E',\r\n    Xopf: '\\uD835\\uDD4F',\r\n    Xscr: '\\uD835\\uDCB3',\r\n    YAcy: '\\u042F',\r\n    YIcy: '\\u0407',\r\n    YUcy: '\\u042E',\r\n    Yacute: '\\u00DD',\r\n    Ycirc: '\\u0176',\r\n    Ycy: '\\u042B',\r\n    Yfr: '\\uD835\\uDD1C',\r\n    Yopf: '\\uD835\\uDD50',\r\n    Yscr: '\\uD835\\uDCB4',\r\n    Yuml: '\\u0178',\r\n    ZHcy: '\\u0416',\r\n    Zacute: '\\u0179',\r\n    Zcaron: '\\u017D',\r\n    Zcy: '\\u0417',\r\n    Zdot: '\\u017B',\r\n    ZeroWidthSpace: '\\u200B',\r\n    Zeta: '\\u0396',\r\n    Zfr: '\\u2128',\r\n    Zopf: '\\u2124',\r\n    Zscr: '\\uD835\\uDCB5',\r\n    aacute: '\\u00E1',\r\n    abreve: '\\u0103',\r\n    ac: '\\u223E',\r\n    acE: '\\u223E\\u0333',\r\n    acd: '\\u223F',\r\n    acirc: '\\u00E2',\r\n    acute: '\\u00B4',\r\n    acy: '\\u0430',\r\n    aelig: '\\u00E6',\r\n    af: '\\u2061',\r\n    afr: '\\uD835\\uDD1E',\r\n    agrave: '\\u00E0',\r\n    alefsym: '\\u2135',\r\n    aleph: '\\u2135',\r\n    alpha: '\\u03B1',\r\n    amacr: '\\u0101',\r\n    amalg: '\\u2A3F',\r\n    amp: '\\u0026',\r\n    and: '\\u2227',\r\n    andand: '\\u2A55',\r\n    andd: '\\u2A5C',\r\n    andslope: '\\u2A58',\r\n    andv: '\\u2A5A',\r\n    ang: '\\u2220',\r\n    ange: '\\u29A4',\r\n    angle: '\\u2220',\r\n    angmsd: '\\u2221',\r\n    angmsdaa: '\\u29A8',\r\n    angmsdab: '\\u29A9',\r\n    angmsdac: '\\u29AA',\r\n    angmsdad: '\\u29AB',\r\n    angmsdae: '\\u29AC',\r\n    angmsdaf: '\\u29AD',\r\n    angmsdag: '\\u29AE',\r\n    angmsdah: '\\u29AF',\r\n    angrt: '\\u221F',\r\n    angrtvb: '\\u22BE',\r\n    angrtvbd: '\\u299D',\r\n    angsph: '\\u2222',\r\n    angst: '\\u00C5',\r\n    angzarr: '\\u237C',\r\n    aogon: '\\u0105',\r\n    aopf: '\\uD835\\uDD52',\r\n    ap: '\\u2248',\r\n    apE: '\\u2A70',\r\n    apacir: '\\u2A6F',\r\n    ape: '\\u224A',\r\n    apid: '\\u224B',\r\n    apos: '\\u0027',\r\n    approx: '\\u2248',\r\n    approxeq: '\\u224A',\r\n    aring: '\\u00E5',\r\n    ascr: '\\uD835\\uDCB6',\r\n    ast: '\\u002A',\r\n    asymp: '\\u2248',\r\n    asympeq: '\\u224D',\r\n    atilde: '\\u00E3',\r\n    auml: '\\u00E4',\r\n    awconint: '\\u2233',\r\n    awint: '\\u2A11',\r\n    bNot: '\\u2AED',\r\n    backcong: '\\u224C',\r\n    backepsilon: '\\u03F6',\r\n    backprime: '\\u2035',\r\n    backsim: '\\u223D',\r\n    backsimeq: '\\u22CD',\r\n    barvee: '\\u22BD',\r\n    barwed: '\\u2305',\r\n    barwedge: '\\u2305',\r\n    bbrk: '\\u23B5',\r\n    bbrktbrk: '\\u23B6',\r\n    bcong: '\\u224C',\r\n    bcy: '\\u0431',\r\n    bdquo: '\\u201E',\r\n    becaus: '\\u2235',\r\n    because: '\\u2235',\r\n    bemptyv: '\\u29B0',\r\n    bepsi: '\\u03F6',\r\n    bernou: '\\u212C',\r\n    beta: '\\u03B2',\r\n    beth: '\\u2136',\r\n    between: '\\u226C',\r\n    bfr: '\\uD835\\uDD1F',\r\n    bigcap: '\\u22C2',\r\n    bigcirc: '\\u25EF',\r\n    bigcup: '\\u22C3',\r\n    bigodot: '\\u2A00',\r\n    bigoplus: '\\u2A01',\r\n    bigotimes: '\\u2A02',\r\n    bigsqcup: '\\u2A06',\r\n    bigstar: '\\u2605',\r\n    bigtriangledown: '\\u25BD',\r\n    bigtriangleup: '\\u25B3',\r\n    biguplus: '\\u2A04',\r\n    bigvee: '\\u22C1',\r\n    bigwedge: '\\u22C0',\r\n    bkarow: '\\u290D',\r\n    blacklozenge: '\\u29EB',\r\n    blacksquare: '\\u25AA',\r\n    blacktriangle: '\\u25B4',\r\n    blacktriangledown: '\\u25BE',\r\n    blacktriangleleft: '\\u25C2',\r\n    blacktriangleright: '\\u25B8',\r\n    blank: '\\u2423',\r\n    blk12: '\\u2592',\r\n    blk14: '\\u2591',\r\n    blk34: '\\u2593',\r\n    block: '\\u2588',\r\n    bne: '\\u003D\\u20E5',\r\n    bnequiv: '\\u2261\\u20E5',\r\n    bnot: '\\u2310',\r\n    bopf: '\\uD835\\uDD53',\r\n    bot: '\\u22A5',\r\n    bottom: '\\u22A5',\r\n    bowtie: '\\u22C8',\r\n    boxDL: '\\u2557',\r\n    boxDR: '\\u2554',\r\n    boxDl: '\\u2556',\r\n    boxDr: '\\u2553',\r\n    boxH: '\\u2550',\r\n    boxHD: '\\u2566',\r\n    boxHU: '\\u2569',\r\n    boxHd: '\\u2564',\r\n    boxHu: '\\u2567',\r\n    boxUL: '\\u255D',\r\n    boxUR: '\\u255A',\r\n    boxUl: '\\u255C',\r\n    boxUr: '\\u2559',\r\n    boxV: '\\u2551',\r\n    boxVH: '\\u256C',\r\n    boxVL: '\\u2563',\r\n    boxVR: '\\u2560',\r\n    boxVh: '\\u256B',\r\n    boxVl: '\\u2562',\r\n    boxVr: '\\u255F',\r\n    boxbox: '\\u29C9',\r\n    boxdL: '\\u2555',\r\n    boxdR: '\\u2552',\r\n    boxdl: '\\u2510',\r\n    boxdr: '\\u250C',\r\n    boxh: '\\u2500',\r\n    boxhD: '\\u2565',\r\n    boxhU: '\\u2568',\r\n    boxhd: '\\u252C',\r\n    boxhu: '\\u2534',\r\n    boxminus: '\\u229F',\r\n    boxplus: '\\u229E',\r\n    boxtimes: '\\u22A0',\r\n    boxuL: '\\u255B',\r\n    boxuR: '\\u2558',\r\n    boxul: '\\u2518',\r\n    boxur: '\\u2514',\r\n    boxv: '\\u2502',\r\n    boxvH: '\\u256A',\r\n    boxvL: '\\u2561',\r\n    boxvR: '\\u255E',\r\n    boxvh: '\\u253C',\r\n    boxvl: '\\u2524',\r\n    boxvr: '\\u251C',\r\n    bprime: '\\u2035',\r\n    breve: '\\u02D8',\r\n    brvbar: '\\u00A6',\r\n    bscr: '\\uD835\\uDCB7',\r\n    bsemi: '\\u204F',\r\n    bsim: '\\u223D',\r\n    bsime: '\\u22CD',\r\n    bsol: '\\u005C',\r\n    bsolb: '\\u29C5',\r\n    bsolhsub: '\\u27C8',\r\n    bull: '\\u2022',\r\n    bullet: '\\u2022',\r\n    bump: '\\u224E',\r\n    bumpE: '\\u2AAE',\r\n    bumpe: '\\u224F',\r\n    bumpeq: '\\u224F',\r\n    cacute: '\\u0107',\r\n    cap: '\\u2229',\r\n    capand: '\\u2A44',\r\n    capbrcup: '\\u2A49',\r\n    capcap: '\\u2A4B',\r\n    capcup: '\\u2A47',\r\n    capdot: '\\u2A40',\r\n    caps: '\\u2229\\uFE00',\r\n    caret: '\\u2041',\r\n    caron: '\\u02C7',\r\n    ccaps: '\\u2A4D',\r\n    ccaron: '\\u010D',\r\n    ccedil: '\\u00E7',\r\n    ccirc: '\\u0109',\r\n    ccups: '\\u2A4C',\r\n    ccupssm: '\\u2A50',\r\n    cdot: '\\u010B',\r\n    cedil: '\\u00B8',\r\n    cemptyv: '\\u29B2',\r\n    cent: '\\u00A2',\r\n    centerdot: '\\u00B7',\r\n    cfr: '\\uD835\\uDD20',\r\n    chcy: '\\u0447',\r\n    check: '\\u2713',\r\n    checkmark: '\\u2713',\r\n    chi: '\\u03C7',\r\n    cir: '\\u25CB',\r\n    cirE: '\\u29C3',\r\n    circ: '\\u02C6',\r\n    circeq: '\\u2257',\r\n    circlearrowleft: '\\u21BA',\r\n    circlearrowright: '\\u21BB',\r\n    circledR: '\\u00AE',\r\n    circledS: '\\u24C8',\r\n    circledast: '\\u229B',\r\n    circledcirc: '\\u229A',\r\n    circleddash: '\\u229D',\r\n    cire: '\\u2257',\r\n    cirfnint: '\\u2A10',\r\n    cirmid: '\\u2AEF',\r\n    cirscir: '\\u29C2',\r\n    clubs: '\\u2663',\r\n    clubsuit: '\\u2663',\r\n    colon: '\\u003A',\r\n    colone: '\\u2254',\r\n    coloneq: '\\u2254',\r\n    comma: '\\u002C',\r\n    commat: '\\u0040',\r\n    comp: '\\u2201',\r\n    compfn: '\\u2218',\r\n    complement: '\\u2201',\r\n    complexes: '\\u2102',\r\n    cong: '\\u2245',\r\n    congdot: '\\u2A6D',\r\n    conint: '\\u222E',\r\n    copf: '\\uD835\\uDD54',\r\n    coprod: '\\u2210',\r\n    copy: '\\u00A9',\r\n    copysr: '\\u2117',\r\n    crarr: '\\u21B5',\r\n    cross: '\\u2717',\r\n    cscr: '\\uD835\\uDCB8',\r\n    csub: '\\u2ACF',\r\n    csube: '\\u2AD1',\r\n    csup: '\\u2AD0',\r\n    csupe: '\\u2AD2',\r\n    ctdot: '\\u22EF',\r\n    cudarrl: '\\u2938',\r\n    cudarrr: '\\u2935',\r\n    cuepr: '\\u22DE',\r\n    cuesc: '\\u22DF',\r\n    cularr: '\\u21B6',\r\n    cularrp: '\\u293D',\r\n    cup: '\\u222A',\r\n    cupbrcap: '\\u2A48',\r\n    cupcap: '\\u2A46',\r\n    cupcup: '\\u2A4A',\r\n    cupdot: '\\u228D',\r\n    cupor: '\\u2A45',\r\n    cups: '\\u222A\\uFE00',\r\n    curarr: '\\u21B7',\r\n    curarrm: '\\u293C',\r\n    curlyeqprec: '\\u22DE',\r\n    curlyeqsucc: '\\u22DF',\r\n    curlyvee: '\\u22CE',\r\n    curlywedge: '\\u22CF',\r\n    curren: '\\u00A4',\r\n    curvearrowleft: '\\u21B6',\r\n    curvearrowright: '\\u21B7',\r\n    cuvee: '\\u22CE',\r\n    cuwed: '\\u22CF',\r\n    cwconint: '\\u2232',\r\n    cwint: '\\u2231',\r\n    cylcty: '\\u232D',\r\n    dArr: '\\u21D3',\r\n    dHar: '\\u2965',\r\n    dagger: '\\u2020',\r\n    daleth: '\\u2138',\r\n    darr: '\\u2193',\r\n    dash: '\\u2010',\r\n    dashv: '\\u22A3',\r\n    dbkarow: '\\u290F',\r\n    dblac: '\\u02DD',\r\n    dcaron: '\\u010F',\r\n    dcy: '\\u0434',\r\n    dd: '\\u2146',\r\n    ddagger: '\\u2021',\r\n    ddarr: '\\u21CA',\r\n    ddotseq: '\\u2A77',\r\n    deg: '\\u00B0',\r\n    delta: '\\u03B4',\r\n    demptyv: '\\u29B1',\r\n    dfisht: '\\u297F',\r\n    dfr: '\\uD835\\uDD21',\r\n    dharl: '\\u21C3',\r\n    dharr: '\\u21C2',\r\n    diam: '\\u22C4',\r\n    diamond: '\\u22C4',\r\n    diamondsuit: '\\u2666',\r\n    diams: '\\u2666',\r\n    die: '\\u00A8',\r\n    digamma: '\\u03DD',\r\n    disin: '\\u22F2',\r\n    div: '\\u00F7',\r\n    divide: '\\u00F7',\r\n    divideontimes: '\\u22C7',\r\n    divonx: '\\u22C7',\r\n    djcy: '\\u0452',\r\n    dlcorn: '\\u231E',\r\n    dlcrop: '\\u230D',\r\n    dollar: '\\u0024',\r\n    dopf: '\\uD835\\uDD55',\r\n    dot: '\\u02D9',\r\n    doteq: '\\u2250',\r\n    doteqdot: '\\u2251',\r\n    dotminus: '\\u2238',\r\n    dotplus: '\\u2214',\r\n    dotsquare: '\\u22A1',\r\n    doublebarwedge: '\\u2306',\r\n    downarrow: '\\u2193',\r\n    downdownarrows: '\\u21CA',\r\n    downharpoonleft: '\\u21C3',\r\n    downharpoonright: '\\u21C2',\r\n    drbkarow: '\\u2910',\r\n    drcorn: '\\u231F',\r\n    drcrop: '\\u230C',\r\n    dscr: '\\uD835\\uDCB9',\r\n    dscy: '\\u0455',\r\n    dsol: '\\u29F6',\r\n    dstrok: '\\u0111',\r\n    dtdot: '\\u22F1',\r\n    dtri: '\\u25BF',\r\n    dtrif: '\\u25BE',\r\n    duarr: '\\u21F5',\r\n    duhar: '\\u296F',\r\n    dwangle: '\\u29A6',\r\n    dzcy: '\\u045F',\r\n    dzigrarr: '\\u27FF',\r\n    eDDot: '\\u2A77',\r\n    eDot: '\\u2251',\r\n    eacute: '\\u00E9',\r\n    easter: '\\u2A6E',\r\n    ecaron: '\\u011B',\r\n    ecir: '\\u2256',\r\n    ecirc: '\\u00EA',\r\n    ecolon: '\\u2255',\r\n    ecy: '\\u044D',\r\n    edot: '\\u0117',\r\n    ee: '\\u2147',\r\n    efDot: '\\u2252',\r\n    efr: '\\uD835\\uDD22',\r\n    eg: '\\u2A9A',\r\n    egrave: '\\u00E8',\r\n    egs: '\\u2A96',\r\n    egsdot: '\\u2A98',\r\n    el: '\\u2A99',\r\n    elinters: '\\u23E7',\r\n    ell: '\\u2113',\r\n    els: '\\u2A95',\r\n    elsdot: '\\u2A97',\r\n    emacr: '\\u0113',\r\n    empty: '\\u2205',\r\n    emptyset: '\\u2205',\r\n    emptyv: '\\u2205',\r\n    emsp13: '\\u2004',\r\n    emsp14: '\\u2005',\r\n    emsp: '\\u2003',\r\n    eng: '\\u014B',\r\n    ensp: '\\u2002',\r\n    eogon: '\\u0119',\r\n    eopf: '\\uD835\\uDD56',\r\n    epar: '\\u22D5',\r\n    eparsl: '\\u29E3',\r\n    eplus: '\\u2A71',\r\n    epsi: '\\u03B5',\r\n    epsilon: '\\u03B5',\r\n    epsiv: '\\u03F5',\r\n    eqcirc: '\\u2256',\r\n    eqcolon: '\\u2255',\r\n    eqsim: '\\u2242',\r\n    eqslantgtr: '\\u2A96',\r\n    eqslantless: '\\u2A95',\r\n    equals: '\\u003D',\r\n    equest: '\\u225F',\r\n    equiv: '\\u2261',\r\n    equivDD: '\\u2A78',\r\n    eqvparsl: '\\u29E5',\r\n    erDot: '\\u2253',\r\n    erarr: '\\u2971',\r\n    escr: '\\u212F',\r\n    esdot: '\\u2250',\r\n    esim: '\\u2242',\r\n    eta: '\\u03B7',\r\n    eth: '\\u00F0',\r\n    euml: '\\u00EB',\r\n    euro: '\\u20AC',\r\n    excl: '\\u0021',\r\n    exist: '\\u2203',\r\n    expectation: '\\u2130',\r\n    exponentiale: '\\u2147',\r\n    fallingdotseq: '\\u2252',\r\n    fcy: '\\u0444',\r\n    female: '\\u2640',\r\n    ffilig: '\\uFB03',\r\n    fflig: '\\uFB00',\r\n    ffllig: '\\uFB04',\r\n    ffr: '\\uD835\\uDD23',\r\n    filig: '\\uFB01',\r\n    fjlig: '\\u0066\\u006A',\r\n    flat: '\\u266D',\r\n    fllig: '\\uFB02',\r\n    fltns: '\\u25B1',\r\n    fnof: '\\u0192',\r\n    fopf: '\\uD835\\uDD57',\r\n    forall: '\\u2200',\r\n    fork: '\\u22D4',\r\n    forkv: '\\u2AD9',\r\n    fpartint: '\\u2A0D',\r\n    frac12: '\\u00BD',\r\n    frac13: '\\u2153',\r\n    frac14: '\\u00BC',\r\n    frac15: '\\u2155',\r\n    frac16: '\\u2159',\r\n    frac18: '\\u215B',\r\n    frac23: '\\u2154',\r\n    frac25: '\\u2156',\r\n    frac34: '\\u00BE',\r\n    frac35: '\\u2157',\r\n    frac38: '\\u215C',\r\n    frac45: '\\u2158',\r\n    frac56: '\\u215A',\r\n    frac58: '\\u215D',\r\n    frac78: '\\u215E',\r\n    frasl: '\\u2044',\r\n    frown: '\\u2322',\r\n    fscr: '\\uD835\\uDCBB',\r\n    gE: '\\u2267',\r\n    gEl: '\\u2A8C',\r\n    gacute: '\\u01F5',\r\n    gamma: '\\u03B3',\r\n    gammad: '\\u03DD',\r\n    gap: '\\u2A86',\r\n    gbreve: '\\u011F',\r\n    gcirc: '\\u011D',\r\n    gcy: '\\u0433',\r\n    gdot: '\\u0121',\r\n    ge: '\\u2265',\r\n    gel: '\\u22DB',\r\n    geq: '\\u2265',\r\n    geqq: '\\u2267',\r\n    geqslant: '\\u2A7E',\r\n    ges: '\\u2A7E',\r\n    gescc: '\\u2AA9',\r\n    gesdot: '\\u2A80',\r\n    gesdoto: '\\u2A82',\r\n    gesdotol: '\\u2A84',\r\n    gesl: '\\u22DB\\uFE00',\r\n    gesles: '\\u2A94',\r\n    gfr: '\\uD835\\uDD24',\r\n    gg: '\\u226B',\r\n    ggg: '\\u22D9',\r\n    gimel: '\\u2137',\r\n    gjcy: '\\u0453',\r\n    gl: '\\u2277',\r\n    glE: '\\u2A92',\r\n    gla: '\\u2AA5',\r\n    glj: '\\u2AA4',\r\n    gnE: '\\u2269',\r\n    gnap: '\\u2A8A',\r\n    gnapprox: '\\u2A8A',\r\n    gne: '\\u2A88',\r\n    gneq: '\\u2A88',\r\n    gneqq: '\\u2269',\r\n    gnsim: '\\u22E7',\r\n    gopf: '\\uD835\\uDD58',\r\n    grave: '\\u0060',\r\n    gscr: '\\u210A',\r\n    gsim: '\\u2273',\r\n    gsime: '\\u2A8E',\r\n    gsiml: '\\u2A90',\r\n    gt: '\\u003E',\r\n    gtcc: '\\u2AA7',\r\n    gtcir: '\\u2A7A',\r\n    gtdot: '\\u22D7',\r\n    gtlPar: '\\u2995',\r\n    gtquest: '\\u2A7C',\r\n    gtrapprox: '\\u2A86',\r\n    gtrarr: '\\u2978',\r\n    gtrdot: '\\u22D7',\r\n    gtreqless: '\\u22DB',\r\n    gtreqqless: '\\u2A8C',\r\n    gtrless: '\\u2277',\r\n    gtrsim: '\\u2273',\r\n    gvertneqq: '\\u2269\\uFE00',\r\n    gvnE: '\\u2269\\uFE00',\r\n    hArr: '\\u21D4',\r\n    hairsp: '\\u200A',\r\n    half: '\\u00BD',\r\n    hamilt: '\\u210B',\r\n    hardcy: '\\u044A',\r\n    harr: '\\u2194',\r\n    harrcir: '\\u2948',\r\n    harrw: '\\u21AD',\r\n    hbar: '\\u210F',\r\n    hcirc: '\\u0125',\r\n    hearts: '\\u2665',\r\n    heartsuit: '\\u2665',\r\n    hellip: '\\u2026',\r\n    hercon: '\\u22B9',\r\n    hfr: '\\uD835\\uDD25',\r\n    hksearow: '\\u2925',\r\n    hkswarow: '\\u2926',\r\n    hoarr: '\\u21FF',\r\n    homtht: '\\u223B',\r\n    hookleftarrow: '\\u21A9',\r\n    hookrightarrow: '\\u21AA',\r\n    hopf: '\\uD835\\uDD59',\r\n    horbar: '\\u2015',\r\n    hscr: '\\uD835\\uDCBD',\r\n    hslash: '\\u210F',\r\n    hstrok: '\\u0127',\r\n    hybull: '\\u2043',\r\n    hyphen: '\\u2010',\r\n    iacute: '\\u00ED',\r\n    ic: '\\u2063',\r\n    icirc: '\\u00EE',\r\n    icy: '\\u0438',\r\n    iecy: '\\u0435',\r\n    iexcl: '\\u00A1',\r\n    iff: '\\u21D4',\r\n    ifr: '\\uD835\\uDD26',\r\n    igrave: '\\u00EC',\r\n    ii: '\\u2148',\r\n    iiiint: '\\u2A0C',\r\n    iiint: '\\u222D',\r\n    iinfin: '\\u29DC',\r\n    iiota: '\\u2129',\r\n    ijlig: '\\u0133',\r\n    imacr: '\\u012B',\r\n    image: '\\u2111',\r\n    imagline: '\\u2110',\r\n    imagpart: '\\u2111',\r\n    imath: '\\u0131',\r\n    imof: '\\u22B7',\r\n    imped: '\\u01B5',\r\n    in: '\\u2208',\r\n    incare: '\\u2105',\r\n    infin: '\\u221E',\r\n    infintie: '\\u29DD',\r\n    inodot: '\\u0131',\r\n    int: '\\u222B',\r\n    intcal: '\\u22BA',\r\n    integers: '\\u2124',\r\n    intercal: '\\u22BA',\r\n    intlarhk: '\\u2A17',\r\n    intprod: '\\u2A3C',\r\n    iocy: '\\u0451',\r\n    iogon: '\\u012F',\r\n    iopf: '\\uD835\\uDD5A',\r\n    iota: '\\u03B9',\r\n    iprod: '\\u2A3C',\r\n    iquest: '\\u00BF',\r\n    iscr: '\\uD835\\uDCBE',\r\n    isin: '\\u2208',\r\n    isinE: '\\u22F9',\r\n    isindot: '\\u22F5',\r\n    isins: '\\u22F4',\r\n    isinsv: '\\u22F3',\r\n    isinv: '\\u2208',\r\n    it: '\\u2062',\r\n    itilde: '\\u0129',\r\n    iukcy: '\\u0456',\r\n    iuml: '\\u00EF',\r\n    jcirc: '\\u0135',\r\n    jcy: '\\u0439',\r\n    jfr: '\\uD835\\uDD27',\r\n    jmath: '\\u0237',\r\n    jopf: '\\uD835\\uDD5B',\r\n    jscr: '\\uD835\\uDCBF',\r\n    jsercy: '\\u0458',\r\n    jukcy: '\\u0454',\r\n    kappa: '\\u03BA',\r\n    kappav: '\\u03F0',\r\n    kcedil: '\\u0137',\r\n    kcy: '\\u043A',\r\n    kfr: '\\uD835\\uDD28',\r\n    kgreen: '\\u0138',\r\n    khcy: '\\u0445',\r\n    kjcy: '\\u045C',\r\n    kopf: '\\uD835\\uDD5C',\r\n    kscr: '\\uD835\\uDCC0',\r\n    lAarr: '\\u21DA',\r\n    lArr: '\\u21D0',\r\n    lAtail: '\\u291B',\r\n    lBarr: '\\u290E',\r\n    lE: '\\u2266',\r\n    lEg: '\\u2A8B',\r\n    lHar: '\\u2962',\r\n    lacute: '\\u013A',\r\n    laemptyv: '\\u29B4',\r\n    lagran: '\\u2112',\r\n    lambda: '\\u03BB',\r\n    lang: '\\u27E8',\r\n    langd: '\\u2991',\r\n    langle: '\\u27E8',\r\n    lap: '\\u2A85',\r\n    laquo: '\\u00AB',\r\n    larr: '\\u2190',\r\n    larrb: '\\u21E4',\r\n    larrbfs: '\\u291F',\r\n    larrfs: '\\u291D',\r\n    larrhk: '\\u21A9',\r\n    larrlp: '\\u21AB',\r\n    larrpl: '\\u2939',\r\n    larrsim: '\\u2973',\r\n    larrtl: '\\u21A2',\r\n    lat: '\\u2AAB',\r\n    latail: '\\u2919',\r\n    late: '\\u2AAD',\r\n    lates: '\\u2AAD\\uFE00',\r\n    lbarr: '\\u290C',\r\n    lbbrk: '\\u2772',\r\n    lbrace: '\\u007B',\r\n    lbrack: '\\u005B',\r\n    lbrke: '\\u298B',\r\n    lbrksld: '\\u298F',\r\n    lbrkslu: '\\u298D',\r\n    lcaron: '\\u013E',\r\n    lcedil: '\\u013C',\r\n    lceil: '\\u2308',\r\n    lcub: '\\u007B',\r\n    lcy: '\\u043B',\r\n    ldca: '\\u2936',\r\n    ldquo: '\\u201C',\r\n    ldquor: '\\u201E',\r\n    ldrdhar: '\\u2967',\r\n    ldrushar: '\\u294B',\r\n    ldsh: '\\u21B2',\r\n    le: '\\u2264',\r\n    leftarrow: '\\u2190',\r\n    leftarrowtail: '\\u21A2',\r\n    leftharpoondown: '\\u21BD',\r\n    leftharpoonup: '\\u21BC',\r\n    leftleftarrows: '\\u21C7',\r\n    leftrightarrow: '\\u2194',\r\n    leftrightarrows: '\\u21C6',\r\n    leftrightharpoons: '\\u21CB',\r\n    leftrightsquigarrow: '\\u21AD',\r\n    leftthreetimes: '\\u22CB',\r\n    leg: '\\u22DA',\r\n    leq: '\\u2264',\r\n    leqq: '\\u2266',\r\n    leqslant: '\\u2A7D',\r\n    les: '\\u2A7D',\r\n    lescc: '\\u2AA8',\r\n    lesdot: '\\u2A7F',\r\n    lesdoto: '\\u2A81',\r\n    lesdotor: '\\u2A83',\r\n    lesg: '\\u22DA\\uFE00',\r\n    lesges: '\\u2A93',\r\n    lessapprox: '\\u2A85',\r\n    lessdot: '\\u22D6',\r\n    lesseqgtr: '\\u22DA',\r\n    lesseqqgtr: '\\u2A8B',\r\n    lessgtr: '\\u2276',\r\n    lesssim: '\\u2272',\r\n    lfisht: '\\u297C',\r\n    lfloor: '\\u230A',\r\n    lfr: '\\uD835\\uDD29',\r\n    lg: '\\u2276',\r\n    lgE: '\\u2A91',\r\n    lhard: '\\u21BD',\r\n    lharu: '\\u21BC',\r\n    lharul: '\\u296A',\r\n    lhblk: '\\u2584',\r\n    ljcy: '\\u0459',\r\n    ll: '\\u226A',\r\n    llarr: '\\u21C7',\r\n    llcorner: '\\u231E',\r\n    llhard: '\\u296B',\r\n    lltri: '\\u25FA',\r\n    lmidot: '\\u0140',\r\n    lmoust: '\\u23B0',\r\n    lmoustache: '\\u23B0',\r\n    lnE: '\\u2268',\r\n    lnap: '\\u2A89',\r\n    lnapprox: '\\u2A89',\r\n    lne: '\\u2A87',\r\n    lneq: '\\u2A87',\r\n    lneqq: '\\u2268',\r\n    lnsim: '\\u22E6',\r\n    loang: '\\u27EC',\r\n    loarr: '\\u21FD',\r\n    lobrk: '\\u27E6',\r\n    longleftarrow: '\\u27F5',\r\n    longleftrightarrow: '\\u27F7',\r\n    longmapsto: '\\u27FC',\r\n    longrightarrow: '\\u27F6',\r\n    looparrowleft: '\\u21AB',\r\n    looparrowright: '\\u21AC',\r\n    lopar: '\\u2985',\r\n    lopf: '\\uD835\\uDD5D',\r\n    loplus: '\\u2A2D',\r\n    lotimes: '\\u2A34',\r\n    lowast: '\\u2217',\r\n    lowbar: '\\u005F',\r\n    loz: '\\u25CA',\r\n    lozenge: '\\u25CA',\r\n    lozf: '\\u29EB',\r\n    lpar: '\\u0028',\r\n    lparlt: '\\u2993',\r\n    lrarr: '\\u21C6',\r\n    lrcorner: '\\u231F',\r\n    lrhar: '\\u21CB',\r\n    lrhard: '\\u296D',\r\n    lrm: '\\u200E',\r\n    lrtri: '\\u22BF',\r\n    lsaquo: '\\u2039',\r\n    lscr: '\\uD835\\uDCC1',\r\n    lsh: '\\u21B0',\r\n    lsim: '\\u2272',\r\n    lsime: '\\u2A8D',\r\n    lsimg: '\\u2A8F',\r\n    lsqb: '\\u005B',\r\n    lsquo: '\\u2018',\r\n    lsquor: '\\u201A',\r\n    lstrok: '\\u0142',\r\n    lt: '\\u003C',\r\n    ltcc: '\\u2AA6',\r\n    ltcir: '\\u2A79',\r\n    ltdot: '\\u22D6',\r\n    lthree: '\\u22CB',\r\n    ltimes: '\\u22C9',\r\n    ltlarr: '\\u2976',\r\n    ltquest: '\\u2A7B',\r\n    ltrPar: '\\u2996',\r\n    ltri: '\\u25C3',\r\n    ltrie: '\\u22B4',\r\n    ltrif: '\\u25C2',\r\n    lurdshar: '\\u294A',\r\n    luruhar: '\\u2966',\r\n    lvertneqq: '\\u2268\\uFE00',\r\n    lvnE: '\\u2268\\uFE00',\r\n    mDDot: '\\u223A',\r\n    macr: '\\u00AF',\r\n    male: '\\u2642',\r\n    malt: '\\u2720',\r\n    maltese: '\\u2720',\r\n    map: '\\u21A6',\r\n    mapsto: '\\u21A6',\r\n    mapstodown: '\\u21A7',\r\n    mapstoleft: '\\u21A4',\r\n    mapstoup: '\\u21A5',\r\n    marker: '\\u25AE',\r\n    mcomma: '\\u2A29',\r\n    mcy: '\\u043C',\r\n    mdash: '\\u2014',\r\n    measuredangle: '\\u2221',\r\n    mfr: '\\uD835\\uDD2A',\r\n    mho: '\\u2127',\r\n    micro: '\\u00B5',\r\n    mid: '\\u2223',\r\n    midast: '\\u002A',\r\n    midcir: '\\u2AF0',\r\n    middot: '\\u00B7',\r\n    minus: '\\u2212',\r\n    minusb: '\\u229F',\r\n    minusd: '\\u2238',\r\n    minusdu: '\\u2A2A',\r\n    mlcp: '\\u2ADB',\r\n    mldr: '\\u2026',\r\n    mnplus: '\\u2213',\r\n    models: '\\u22A7',\r\n    mopf: '\\uD835\\uDD5E',\r\n    mp: '\\u2213',\r\n    mscr: '\\uD835\\uDCC2',\r\n    mstpos: '\\u223E',\r\n    mu: '\\u03BC',\r\n    multimap: '\\u22B8',\r\n    mumap: '\\u22B8',\r\n    nGg: '\\u22D9\\u0338',\r\n    nGt: '\\u226B\\u20D2',\r\n    nGtv: '\\u226B\\u0338',\r\n    nLeftarrow: '\\u21CD',\r\n    nLeftrightarrow: '\\u21CE',\r\n    nLl: '\\u22D8\\u0338',\r\n    nLt: '\\u226A\\u20D2',\r\n    nLtv: '\\u226A\\u0338',\r\n    nRightarrow: '\\u21CF',\r\n    nVDash: '\\u22AF',\r\n    nVdash: '\\u22AE',\r\n    nabla: '\\u2207',\r\n    nacute: '\\u0144',\r\n    nang: '\\u2220\\u20D2',\r\n    nap: '\\u2249',\r\n    napE: '\\u2A70\\u0338',\r\n    napid: '\\u224B\\u0338',\r\n    napos: '\\u0149',\r\n    napprox: '\\u2249',\r\n    natur: '\\u266E',\r\n    natural: '\\u266E',\r\n    naturals: '\\u2115',\r\n    nbsp: '\\u00A0',\r\n    nbump: '\\u224E\\u0338',\r\n    nbumpe: '\\u224F\\u0338',\r\n    ncap: '\\u2A43',\r\n    ncaron: '\\u0148',\r\n    ncedil: '\\u0146',\r\n    ncong: '\\u2247',\r\n    ncongdot: '\\u2A6D\\u0338',\r\n    ncup: '\\u2A42',\r\n    ncy: '\\u043D',\r\n    ndash: '\\u2013',\r\n    ne: '\\u2260',\r\n    neArr: '\\u21D7',\r\n    nearhk: '\\u2924',\r\n    nearr: '\\u2197',\r\n    nearrow: '\\u2197',\r\n    nedot: '\\u2250\\u0338',\r\n    nequiv: '\\u2262',\r\n    nesear: '\\u2928',\r\n    nesim: '\\u2242\\u0338',\r\n    nexist: '\\u2204',\r\n    nexists: '\\u2204',\r\n    nfr: '\\uD835\\uDD2B',\r\n    ngE: '\\u2267\\u0338',\r\n    nge: '\\u2271',\r\n    ngeq: '\\u2271',\r\n    ngeqq: '\\u2267\\u0338',\r\n    ngeqslant: '\\u2A7E\\u0338',\r\n    nges: '\\u2A7E\\u0338',\r\n    ngsim: '\\u2275',\r\n    ngt: '\\u226F',\r\n    ngtr: '\\u226F',\r\n    nhArr: '\\u21CE',\r\n    nharr: '\\u21AE',\r\n    nhpar: '\\u2AF2',\r\n    ni: '\\u220B',\r\n    nis: '\\u22FC',\r\n    nisd: '\\u22FA',\r\n    niv: '\\u220B',\r\n    njcy: '\\u045A',\r\n    nlArr: '\\u21CD',\r\n    nlE: '\\u2266\\u0338',\r\n    nlarr: '\\u219A',\r\n    nldr: '\\u2025',\r\n    nle: '\\u2270',\r\n    nleftarrow: '\\u219A',\r\n    nleftrightarrow: '\\u21AE',\r\n    nleq: '\\u2270',\r\n    nleqq: '\\u2266\\u0338',\r\n    nleqslant: '\\u2A7D\\u0338',\r\n    nles: '\\u2A7D\\u0338',\r\n    nless: '\\u226E',\r\n    nlsim: '\\u2274',\r\n    nlt: '\\u226E',\r\n    nltri: '\\u22EA',\r\n    nltrie: '\\u22EC',\r\n    nmid: '\\u2224',\r\n    nopf: '\\uD835\\uDD5F',\r\n    not: '\\u00AC',\r\n    notin: '\\u2209',\r\n    notinE: '\\u22F9\\u0338',\r\n    notindot: '\\u22F5\\u0338',\r\n    notinva: '\\u2209',\r\n    notinvb: '\\u22F7',\r\n    notinvc: '\\u22F6',\r\n    notni: '\\u220C',\r\n    notniva: '\\u220C',\r\n    notnivb: '\\u22FE',\r\n    notnivc: '\\u22FD',\r\n    npar: '\\u2226',\r\n    nparallel: '\\u2226',\r\n    nparsl: '\\u2AFD\\u20E5',\r\n    npart: '\\u2202\\u0338',\r\n    npolint: '\\u2A14',\r\n    npr: '\\u2280',\r\n    nprcue: '\\u22E0',\r\n    npre: '\\u2AAF\\u0338',\r\n    nprec: '\\u2280',\r\n    npreceq: '\\u2AAF\\u0338',\r\n    nrArr: '\\u21CF',\r\n    nrarr: '\\u219B',\r\n    nrarrc: '\\u2933\\u0338',\r\n    nrarrw: '\\u219D\\u0338',\r\n    nrightarrow: '\\u219B',\r\n    nrtri: '\\u22EB',\r\n    nrtrie: '\\u22ED',\r\n    nsc: '\\u2281',\r\n    nsccue: '\\u22E1',\r\n    nsce: '\\u2AB0\\u0338',\r\n    nscr: '\\uD835\\uDCC3',\r\n    nshortmid: '\\u2224',\r\n    nshortparallel: '\\u2226',\r\n    nsim: '\\u2241',\r\n    nsime: '\\u2244',\r\n    nsimeq: '\\u2244',\r\n    nsmid: '\\u2224',\r\n    nspar: '\\u2226',\r\n    nsqsube: '\\u22E2',\r\n    nsqsupe: '\\u22E3',\r\n    nsub: '\\u2284',\r\n    nsubE: '\\u2AC5\\u0338',\r\n    nsube: '\\u2288',\r\n    nsubset: '\\u2282\\u20D2',\r\n    nsubseteq: '\\u2288',\r\n    nsubseteqq: '\\u2AC5\\u0338',\r\n    nsucc: '\\u2281',\r\n    nsucceq: '\\u2AB0\\u0338',\r\n    nsup: '\\u2285',\r\n    nsupE: '\\u2AC6\\u0338',\r\n    nsupe: '\\u2289',\r\n    nsupset: '\\u2283\\u20D2',\r\n    nsupseteq: '\\u2289',\r\n    nsupseteqq: '\\u2AC6\\u0338',\r\n    ntgl: '\\u2279',\r\n    ntilde: '\\u00F1',\r\n    ntlg: '\\u2278',\r\n    ntriangleleft: '\\u22EA',\r\n    ntrianglelefteq: '\\u22EC',\r\n    ntriangleright: '\\u22EB',\r\n    ntrianglerighteq: '\\u22ED',\r\n    nu: '\\u03BD',\r\n    num: '\\u0023',\r\n    numero: '\\u2116',\r\n    numsp: '\\u2007',\r\n    nvDash: '\\u22AD',\r\n    nvHarr: '\\u2904',\r\n    nvap: '\\u224D\\u20D2',\r\n    nvdash: '\\u22AC',\r\n    nvge: '\\u2265\\u20D2',\r\n    nvgt: '\\u003E\\u20D2',\r\n    nvinfin: '\\u29DE',\r\n    nvlArr: '\\u2902',\r\n    nvle: '\\u2264\\u20D2',\r\n    nvlt: '\\u003C\\u20D2',\r\n    nvltrie: '\\u22B4\\u20D2',\r\n    nvrArr: '\\u2903',\r\n    nvrtrie: '\\u22B5\\u20D2',\r\n    nvsim: '\\u223C\\u20D2',\r\n    nwArr: '\\u21D6',\r\n    nwarhk: '\\u2923',\r\n    nwarr: '\\u2196',\r\n    nwarrow: '\\u2196',\r\n    nwnear: '\\u2927',\r\n    oS: '\\u24C8',\r\n    oacute: '\\u00F3',\r\n    oast: '\\u229B',\r\n    ocir: '\\u229A',\r\n    ocirc: '\\u00F4',\r\n    ocy: '\\u043E',\r\n    odash: '\\u229D',\r\n    odblac: '\\u0151',\r\n    odiv: '\\u2A38',\r\n    odot: '\\u2299',\r\n    odsold: '\\u29BC',\r\n    oelig: '\\u0153',\r\n    ofcir: '\\u29BF',\r\n    ofr: '\\uD835\\uDD2C',\r\n    ogon: '\\u02DB',\r\n    ograve: '\\u00F2',\r\n    ogt: '\\u29C1',\r\n    ohbar: '\\u29B5',\r\n    ohm: '\\u03A9',\r\n    oint: '\\u222E',\r\n    olarr: '\\u21BA',\r\n    olcir: '\\u29BE',\r\n    olcross: '\\u29BB',\r\n    oline: '\\u203E',\r\n    olt: '\\u29C0',\r\n    omacr: '\\u014D',\r\n    omega: '\\u03C9',\r\n    omicron: '\\u03BF',\r\n    omid: '\\u29B6',\r\n    ominus: '\\u2296',\r\n    oopf: '\\uD835\\uDD60',\r\n    opar: '\\u29B7',\r\n    operp: '\\u29B9',\r\n    oplus: '\\u2295',\r\n    or: '\\u2228',\r\n    orarr: '\\u21BB',\r\n    ord: '\\u2A5D',\r\n    order: '\\u2134',\r\n    orderof: '\\u2134',\r\n    ordf: '\\u00AA',\r\n    ordm: '\\u00BA',\r\n    origof: '\\u22B6',\r\n    oror: '\\u2A56',\r\n    orslope: '\\u2A57',\r\n    orv: '\\u2A5B',\r\n    oscr: '\\u2134',\r\n    oslash: '\\u00F8',\r\n    osol: '\\u2298',\r\n    otilde: '\\u00F5',\r\n    otimes: '\\u2297',\r\n    otimesas: '\\u2A36',\r\n    ouml: '\\u00F6',\r\n    ovbar: '\\u233D',\r\n    par: '\\u2225',\r\n    para: '\\u00B6',\r\n    parallel: '\\u2225',\r\n    parsim: '\\u2AF3',\r\n    parsl: '\\u2AFD',\r\n    part: '\\u2202',\r\n    pcy: '\\u043F',\r\n    percnt: '\\u0025',\r\n    period: '\\u002E',\r\n    permil: '\\u2030',\r\n    perp: '\\u22A5',\r\n    pertenk: '\\u2031',\r\n    pfr: '\\uD835\\uDD2D',\r\n    phi: '\\u03C6',\r\n    phiv: '\\u03D5',\r\n    phmmat: '\\u2133',\r\n    phone: '\\u260E',\r\n    pi: '\\u03C0',\r\n    pitchfork: '\\u22D4',\r\n    piv: '\\u03D6',\r\n    planck: '\\u210F',\r\n    planckh: '\\u210E',\r\n    plankv: '\\u210F',\r\n    plus: '\\u002B',\r\n    plusacir: '\\u2A23',\r\n    plusb: '\\u229E',\r\n    pluscir: '\\u2A22',\r\n    plusdo: '\\u2214',\r\n    plusdu: '\\u2A25',\r\n    pluse: '\\u2A72',\r\n    plusmn: '\\u00B1',\r\n    plussim: '\\u2A26',\r\n    plustwo: '\\u2A27',\r\n    pm: '\\u00B1',\r\n    pointint: '\\u2A15',\r\n    popf: '\\uD835\\uDD61',\r\n    pound: '\\u00A3',\r\n    pr: '\\u227A',\r\n    prE: '\\u2AB3',\r\n    prap: '\\u2AB7',\r\n    prcue: '\\u227C',\r\n    pre: '\\u2AAF',\r\n    prec: '\\u227A',\r\n    precapprox: '\\u2AB7',\r\n    preccurlyeq: '\\u227C',\r\n    preceq: '\\u2AAF',\r\n    precnapprox: '\\u2AB9',\r\n    precneqq: '\\u2AB5',\r\n    precnsim: '\\u22E8',\r\n    precsim: '\\u227E',\r\n    prime: '\\u2032',\r\n    primes: '\\u2119',\r\n    prnE: '\\u2AB5',\r\n    prnap: '\\u2AB9',\r\n    prnsim: '\\u22E8',\r\n    prod: '\\u220F',\r\n    profalar: '\\u232E',\r\n    profline: '\\u2312',\r\n    profsurf: '\\u2313',\r\n    prop: '\\u221D',\r\n    propto: '\\u221D',\r\n    prsim: '\\u227E',\r\n    prurel: '\\u22B0',\r\n    pscr: '\\uD835\\uDCC5',\r\n    psi: '\\u03C8',\r\n    puncsp: '\\u2008',\r\n    qfr: '\\uD835\\uDD2E',\r\n    qint: '\\u2A0C',\r\n    qopf: '\\uD835\\uDD62',\r\n    qprime: '\\u2057',\r\n    qscr: '\\uD835\\uDCC6',\r\n    quaternions: '\\u210D',\r\n    quatint: '\\u2A16',\r\n    quest: '\\u003F',\r\n    questeq: '\\u225F',\r\n    quot: '\\u0022',\r\n    rAarr: '\\u21DB',\r\n    rArr: '\\u21D2',\r\n    rAtail: '\\u291C',\r\n    rBarr: '\\u290F',\r\n    rHar: '\\u2964',\r\n    race: '\\u223D\\u0331',\r\n    racute: '\\u0155',\r\n    radic: '\\u221A',\r\n    raemptyv: '\\u29B3',\r\n    rang: '\\u27E9',\r\n    rangd: '\\u2992',\r\n    range: '\\u29A5',\r\n    rangle: '\\u27E9',\r\n    raquo: '\\u00BB',\r\n    rarr: '\\u2192',\r\n    rarrap: '\\u2975',\r\n    rarrb: '\\u21E5',\r\n    rarrbfs: '\\u2920',\r\n    rarrc: '\\u2933',\r\n    rarrfs: '\\u291E',\r\n    rarrhk: '\\u21AA',\r\n    rarrlp: '\\u21AC',\r\n    rarrpl: '\\u2945',\r\n    rarrsim: '\\u2974',\r\n    rarrtl: '\\u21A3',\r\n    rarrw: '\\u219D',\r\n    ratail: '\\u291A',\r\n    ratio: '\\u2236',\r\n    rationals: '\\u211A',\r\n    rbarr: '\\u290D',\r\n    rbbrk: '\\u2773',\r\n    rbrace: '\\u007D',\r\n    rbrack: '\\u005D',\r\n    rbrke: '\\u298C',\r\n    rbrksld: '\\u298E',\r\n    rbrkslu: '\\u2990',\r\n    rcaron: '\\u0159',\r\n    rcedil: '\\u0157',\r\n    rceil: '\\u2309',\r\n    rcub: '\\u007D',\r\n    rcy: '\\u0440',\r\n    rdca: '\\u2937',\r\n    rdldhar: '\\u2969',\r\n    rdquo: '\\u201D',\r\n    rdquor: '\\u201D',\r\n    rdsh: '\\u21B3',\r\n    real: '\\u211C',\r\n    realine: '\\u211B',\r\n    realpart: '\\u211C',\r\n    reals: '\\u211D',\r\n    rect: '\\u25AD',\r\n    reg: '\\u00AE',\r\n    rfisht: '\\u297D',\r\n    rfloor: '\\u230B',\r\n    rfr: '\\uD835\\uDD2F',\r\n    rhard: '\\u21C1',\r\n    rharu: '\\u21C0',\r\n    rharul: '\\u296C',\r\n    rho: '\\u03C1',\r\n    rhov: '\\u03F1',\r\n    rightarrow: '\\u2192',\r\n    rightarrowtail: '\\u21A3',\r\n    rightharpoondown: '\\u21C1',\r\n    rightharpoonup: '\\u21C0',\r\n    rightleftarrows: '\\u21C4',\r\n    rightleftharpoons: '\\u21CC',\r\n    rightrightarrows: '\\u21C9',\r\n    rightsquigarrow: '\\u219D',\r\n    rightthreetimes: '\\u22CC',\r\n    ring: '\\u02DA',\r\n    risingdotseq: '\\u2253',\r\n    rlarr: '\\u21C4',\r\n    rlhar: '\\u21CC',\r\n    rlm: '\\u200F',\r\n    rmoust: '\\u23B1',\r\n    rmoustache: '\\u23B1',\r\n    rnmid: '\\u2AEE',\r\n    roang: '\\u27ED',\r\n    roarr: '\\u21FE',\r\n    robrk: '\\u27E7',\r\n    ropar: '\\u2986',\r\n    ropf: '\\uD835\\uDD63',\r\n    roplus: '\\u2A2E',\r\n    rotimes: '\\u2A35',\r\n    rpar: '\\u0029',\r\n    rpargt: '\\u2994',\r\n    rppolint: '\\u2A12',\r\n    rrarr: '\\u21C9',\r\n    rsaquo: '\\u203A',\r\n    rscr: '\\uD835\\uDCC7',\r\n    rsh: '\\u21B1',\r\n    rsqb: '\\u005D',\r\n    rsquo: '\\u2019',\r\n    rsquor: '\\u2019',\r\n    rthree: '\\u22CC',\r\n    rtimes: '\\u22CA',\r\n    rtri: '\\u25B9',\r\n    rtrie: '\\u22B5',\r\n    rtrif: '\\u25B8',\r\n    rtriltri: '\\u29CE',\r\n    ruluhar: '\\u2968',\r\n    rx: '\\u211E',\r\n    sacute: '\\u015B',\r\n    sbquo: '\\u201A',\r\n    sc: '\\u227B',\r\n    scE: '\\u2AB4',\r\n    scap: '\\u2AB8',\r\n    scaron: '\\u0161',\r\n    sccue: '\\u227D',\r\n    sce: '\\u2AB0',\r\n    scedil: '\\u015F',\r\n    scirc: '\\u015D',\r\n    scnE: '\\u2AB6',\r\n    scnap: '\\u2ABA',\r\n    scnsim: '\\u22E9',\r\n    scpolint: '\\u2A13',\r\n    scsim: '\\u227F',\r\n    scy: '\\u0441',\r\n    sdot: '\\u22C5',\r\n    sdotb: '\\u22A1',\r\n    sdote: '\\u2A66',\r\n    seArr: '\\u21D8',\r\n    searhk: '\\u2925',\r\n    searr: '\\u2198',\r\n    searrow: '\\u2198',\r\n    sect: '\\u00A7',\r\n    semi: '\\u003B',\r\n    seswar: '\\u2929',\r\n    setminus: '\\u2216',\r\n    setmn: '\\u2216',\r\n    sext: '\\u2736',\r\n    sfr: '\\uD835\\uDD30',\r\n    sfrown: '\\u2322',\r\n    sharp: '\\u266F',\r\n    shchcy: '\\u0449',\r\n    shcy: '\\u0448',\r\n    shortmid: '\\u2223',\r\n    shortparallel: '\\u2225',\r\n    shy: '\\u00AD',\r\n    sigma: '\\u03C3',\r\n    sigmaf: '\\u03C2',\r\n    sigmav: '\\u03C2',\r\n    sim: '\\u223C',\r\n    simdot: '\\u2A6A',\r\n    sime: '\\u2243',\r\n    simeq: '\\u2243',\r\n    simg: '\\u2A9E',\r\n    simgE: '\\u2AA0',\r\n    siml: '\\u2A9D',\r\n    simlE: '\\u2A9F',\r\n    simne: '\\u2246',\r\n    simplus: '\\u2A24',\r\n    simrarr: '\\u2972',\r\n    slarr: '\\u2190',\r\n    smallsetminus: '\\u2216',\r\n    smashp: '\\u2A33',\r\n    smeparsl: '\\u29E4',\r\n    smid: '\\u2223',\r\n    smile: '\\u2323',\r\n    smt: '\\u2AAA',\r\n    smte: '\\u2AAC',\r\n    smtes: '\\u2AAC\\uFE00',\r\n    softcy: '\\u044C',\r\n    sol: '\\u002F',\r\n    solb: '\\u29C4',\r\n    solbar: '\\u233F',\r\n    sopf: '\\uD835\\uDD64',\r\n    spades: '\\u2660',\r\n    spadesuit: '\\u2660',\r\n    spar: '\\u2225',\r\n    sqcap: '\\u2293',\r\n    sqcaps: '\\u2293\\uFE00',\r\n    sqcup: '\\u2294',\r\n    sqcups: '\\u2294\\uFE00',\r\n    sqsub: '\\u228F',\r\n    sqsube: '\\u2291',\r\n    sqsubset: '\\u228F',\r\n    sqsubseteq: '\\u2291',\r\n    sqsup: '\\u2290',\r\n    sqsupe: '\\u2292',\r\n    sqsupset: '\\u2290',\r\n    sqsupseteq: '\\u2292',\r\n    squ: '\\u25A1',\r\n    square: '\\u25A1',\r\n    squarf: '\\u25AA',\r\n    squf: '\\u25AA',\r\n    srarr: '\\u2192',\r\n    sscr: '\\uD835\\uDCC8',\r\n    ssetmn: '\\u2216',\r\n    ssmile: '\\u2323',\r\n    sstarf: '\\u22C6',\r\n    star: '\\u2606',\r\n    starf: '\\u2605',\r\n    straightepsilon: '\\u03F5',\r\n    straightphi: '\\u03D5',\r\n    strns: '\\u00AF',\r\n    sub: '\\u2282',\r\n    subE: '\\u2AC5',\r\n    subdot: '\\u2ABD',\r\n    sube: '\\u2286',\r\n    subedot: '\\u2AC3',\r\n    submult: '\\u2AC1',\r\n    subnE: '\\u2ACB',\r\n    subne: '\\u228A',\r\n    subplus: '\\u2ABF',\r\n    subrarr: '\\u2979',\r\n    subset: '\\u2282',\r\n    subseteq: '\\u2286',\r\n    subseteqq: '\\u2AC5',\r\n    subsetneq: '\\u228A',\r\n    subsetneqq: '\\u2ACB',\r\n    subsim: '\\u2AC7',\r\n    subsub: '\\u2AD5',\r\n    subsup: '\\u2AD3',\r\n    succ: '\\u227B',\r\n    succapprox: '\\u2AB8',\r\n    succcurlyeq: '\\u227D',\r\n    succeq: '\\u2AB0',\r\n    succnapprox: '\\u2ABA',\r\n    succneqq: '\\u2AB6',\r\n    succnsim: '\\u22E9',\r\n    succsim: '\\u227F',\r\n    sum: '\\u2211',\r\n    sung: '\\u266A',\r\n    sup1: '\\u00B9',\r\n    sup2: '\\u00B2',\r\n    sup3: '\\u00B3',\r\n    sup: '\\u2283',\r\n    supE: '\\u2AC6',\r\n    supdot: '\\u2ABE',\r\n    supdsub: '\\u2AD8',\r\n    supe: '\\u2287',\r\n    supedot: '\\u2AC4',\r\n    suphsol: '\\u27C9',\r\n    suphsub: '\\u2AD7',\r\n    suplarr: '\\u297B',\r\n    supmult: '\\u2AC2',\r\n    supnE: '\\u2ACC',\r\n    supne: '\\u228B',\r\n    supplus: '\\u2AC0',\r\n    supset: '\\u2283',\r\n    supseteq: '\\u2287',\r\n    supseteqq: '\\u2AC6',\r\n    supsetneq: '\\u228B',\r\n    supsetneqq: '\\u2ACC',\r\n    supsim: '\\u2AC8',\r\n    supsub: '\\u2AD4',\r\n    supsup: '\\u2AD6',\r\n    swArr: '\\u21D9',\r\n    swarhk: '\\u2926',\r\n    swarr: '\\u2199',\r\n    swarrow: '\\u2199',\r\n    swnwar: '\\u292A',\r\n    szlig: '\\u00DF',\r\n    target: '\\u2316',\r\n    tau: '\\u03C4',\r\n    tbrk: '\\u23B4',\r\n    tcaron: '\\u0165',\r\n    tcedil: '\\u0163',\r\n    tcy: '\\u0442',\r\n    tdot: '\\u20DB',\r\n    telrec: '\\u2315',\r\n    tfr: '\\uD835\\uDD31',\r\n    there4: '\\u2234',\r\n    therefore: '\\u2234',\r\n    theta: '\\u03B8',\r\n    thetasym: '\\u03D1',\r\n    thetav: '\\u03D1',\r\n    thickapprox: '\\u2248',\r\n    thicksim: '\\u223C',\r\n    thinsp: '\\u2009',\r\n    thkap: '\\u2248',\r\n    thksim: '\\u223C',\r\n    thorn: '\\u00FE',\r\n    tilde: '\\u02DC',\r\n    times: '\\u00D7',\r\n    timesb: '\\u22A0',\r\n    timesbar: '\\u2A31',\r\n    timesd: '\\u2A30',\r\n    tint: '\\u222D',\r\n    toea: '\\u2928',\r\n    top: '\\u22A4',\r\n    topbot: '\\u2336',\r\n    topcir: '\\u2AF1',\r\n    topf: '\\uD835\\uDD65',\r\n    topfork: '\\u2ADA',\r\n    tosa: '\\u2929',\r\n    tprime: '\\u2034',\r\n    trade: '\\u2122',\r\n    triangle: '\\u25B5',\r\n    triangledown: '\\u25BF',\r\n    triangleleft: '\\u25C3',\r\n    trianglelefteq: '\\u22B4',\r\n    triangleq: '\\u225C',\r\n    triangleright: '\\u25B9',\r\n    trianglerighteq: '\\u22B5',\r\n    tridot: '\\u25EC',\r\n    trie: '\\u225C',\r\n    triminus: '\\u2A3A',\r\n    triplus: '\\u2A39',\r\n    trisb: '\\u29CD',\r\n    tritime: '\\u2A3B',\r\n    trpezium: '\\u23E2',\r\n    tscr: '\\uD835\\uDCC9',\r\n    tscy: '\\u0446',\r\n    tshcy: '\\u045B',\r\n    tstrok: '\\u0167',\r\n    twixt: '\\u226C',\r\n    twoheadleftarrow: '\\u219E',\r\n    twoheadrightarrow: '\\u21A0',\r\n    uArr: '\\u21D1',\r\n    uHar: '\\u2963',\r\n    uacute: '\\u00FA',\r\n    uarr: '\\u2191',\r\n    ubrcy: '\\u045E',\r\n    ubreve: '\\u016D',\r\n    ucirc: '\\u00FB',\r\n    ucy: '\\u0443',\r\n    udarr: '\\u21C5',\r\n    udblac: '\\u0171',\r\n    udhar: '\\u296E',\r\n    ufisht: '\\u297E',\r\n    ufr: '\\uD835\\uDD32',\r\n    ugrave: '\\u00F9',\r\n    uharl: '\\u21BF',\r\n    uharr: '\\u21BE',\r\n    uhblk: '\\u2580',\r\n    ulcorn: '\\u231C',\r\n    ulcorner: '\\u231C',\r\n    ulcrop: '\\u230F',\r\n    ultri: '\\u25F8',\r\n    umacr: '\\u016B',\r\n    uml: '\\u00A8',\r\n    uogon: '\\u0173',\r\n    uopf: '\\uD835\\uDD66',\r\n    uparrow: '\\u2191',\r\n    updownarrow: '\\u2195',\r\n    upharpoonleft: '\\u21BF',\r\n    upharpoonright: '\\u21BE',\r\n    uplus: '\\u228E',\r\n    upsi: '\\u03C5',\r\n    upsih: '\\u03D2',\r\n    upsilon: '\\u03C5',\r\n    upuparrows: '\\u21C8',\r\n    urcorn: '\\u231D',\r\n    urcorner: '\\u231D',\r\n    urcrop: '\\u230E',\r\n    uring: '\\u016F',\r\n    urtri: '\\u25F9',\r\n    uscr: '\\uD835\\uDCCA',\r\n    utdot: '\\u22F0',\r\n    utilde: '\\u0169',\r\n    utri: '\\u25B5',\r\n    utrif: '\\u25B4',\r\n    uuarr: '\\u21C8',\r\n    uuml: '\\u00FC',\r\n    uwangle: '\\u29A7',\r\n    vArr: '\\u21D5',\r\n    vBar: '\\u2AE8',\r\n    vBarv: '\\u2AE9',\r\n    vDash: '\\u22A8',\r\n    vangrt: '\\u299C',\r\n    varepsilon: '\\u03F5',\r\n    varkappa: '\\u03F0',\r\n    varnothing: '\\u2205',\r\n    varphi: '\\u03D5',\r\n    varpi: '\\u03D6',\r\n    varpropto: '\\u221D',\r\n    varr: '\\u2195',\r\n    varrho: '\\u03F1',\r\n    varsigma: '\\u03C2',\r\n    varsubsetneq: '\\u228A\\uFE00',\r\n    varsubsetneqq: '\\u2ACB\\uFE00',\r\n    varsupsetneq: '\\u228B\\uFE00',\r\n    varsupsetneqq: '\\u2ACC\\uFE00',\r\n    vartheta: '\\u03D1',\r\n    vartriangleleft: '\\u22B2',\r\n    vartriangleright: '\\u22B3',\r\n    vcy: '\\u0432',\r\n    vdash: '\\u22A2',\r\n    vee: '\\u2228',\r\n    veebar: '\\u22BB',\r\n    veeeq: '\\u225A',\r\n    vellip: '\\u22EE',\r\n    verbar: '\\u007C',\r\n    vert: '\\u007C',\r\n    vfr: '\\uD835\\uDD33',\r\n    vltri: '\\u22B2',\r\n    vnsub: '\\u2282\\u20D2',\r\n    vnsup: '\\u2283\\u20D2',\r\n    vopf: '\\uD835\\uDD67',\r\n    vprop: '\\u221D',\r\n    vrtri: '\\u22B3',\r\n    vscr: '\\uD835\\uDCCB',\r\n    vsubnE: '\\u2ACB\\uFE00',\r\n    vsubne: '\\u228A\\uFE00',\r\n    vsupnE: '\\u2ACC\\uFE00',\r\n    vsupne: '\\u228B\\uFE00',\r\n    vzigzag: '\\u299A',\r\n    wcirc: '\\u0175',\r\n    wedbar: '\\u2A5F',\r\n    wedge: '\\u2227',\r\n    wedgeq: '\\u2259',\r\n    weierp: '\\u2118',\r\n    wfr: '\\uD835\\uDD34',\r\n    wopf: '\\uD835\\uDD68',\r\n    wp: '\\u2118',\r\n    wr: '\\u2240',\r\n    wreath: '\\u2240',\r\n    wscr: '\\uD835\\uDCCC',\r\n    xcap: '\\u22C2',\r\n    xcirc: '\\u25EF',\r\n    xcup: '\\u22C3',\r\n    xdtri: '\\u25BD',\r\n    xfr: '\\uD835\\uDD35',\r\n    xhArr: '\\u27FA',\r\n    xharr: '\\u27F7',\r\n    xi: '\\u03BE',\r\n    xlArr: '\\u27F8',\r\n    xlarr: '\\u27F5',\r\n    xmap: '\\u27FC',\r\n    xnis: '\\u22FB',\r\n    xodot: '\\u2A00',\r\n    xopf: '\\uD835\\uDD69',\r\n    xoplus: '\\u2A01',\r\n    xotime: '\\u2A02',\r\n    xrArr: '\\u27F9',\r\n    xrarr: '\\u27F6',\r\n    xscr: '\\uD835\\uDCCD',\r\n    xsqcup: '\\u2A06',\r\n    xuplus: '\\u2A04',\r\n    xutri: '\\u25B3',\r\n    xvee: '\\u22C1',\r\n    xwedge: '\\u22C0',\r\n    yacute: '\\u00FD',\r\n    yacy: '\\u044F',\r\n    ycirc: '\\u0177',\r\n    ycy: '\\u044B',\r\n    yen: '\\u00A5',\r\n    yfr: '\\uD835\\uDD36',\r\n    yicy: '\\u0457',\r\n    yopf: '\\uD835\\uDD6A',\r\n    yscr: '\\uD835\\uDCCE',\r\n    yucy: '\\u044E',\r\n    yuml: '\\u00FF',\r\n    zacute: '\\u017A',\r\n    zcaron: '\\u017E',\r\n    zcy: '\\u0437',\r\n    zdot: '\\u017C',\r\n    zeetrf: '\\u2128',\r\n    zeta: '\\u03B6',\r\n    zfr: '\\uD835\\uDD37',\r\n    zhcy: '\\u0436',\r\n    zigrarr: '\\u21DD',\r\n    zopf: '\\uD835\\uDD6B',\r\n    zscr: '\\uD835\\uDCCF',\r\n    zwj: '\\u200D',\r\n    zwnj: '\\u200C'\r\n};\r\nconst decodeMap = {\r\n    '0': 65533,\r\n    '128': 8364,\r\n    '130': 8218,\r\n    '131': 402,\r\n    '132': 8222,\r\n    '133': 8230,\r\n    '134': 8224,\r\n    '135': 8225,\r\n    '136': 710,\r\n    '137': 8240,\r\n    '138': 352,\r\n    '139': 8249,\r\n    '140': 338,\r\n    '142': 381,\r\n    '145': 8216,\r\n    '146': 8217,\r\n    '147': 8220,\r\n    '148': 8221,\r\n    '149': 8226,\r\n    '150': 8211,\r\n    '151': 8212,\r\n    '152': 732,\r\n    '153': 8482,\r\n    '154': 353,\r\n    '155': 8250,\r\n    '156': 339,\r\n    '158': 382,\r\n    '159': 376\r\n};\r\nfunction decodeHTMLStrict(text) {\r\n    return text.replace(/&(?:[a-zA-Z]+|#[xX][\\da-fA-F]+|#\\d+);/g, (key) => {\r\n        if (key.charAt(1) === '#') {\r\n            const secondChar = key.charAt(2);\r\n            const codePoint = secondChar === 'X' || secondChar === 'x'\r\n                ? parseInt(key.slice(3), 16)\r\n                : parseInt(key.slice(2), 10);\r\n            return decodeCodePoint(codePoint);\r\n        }\r\n        return entities[key.slice(1, -1)] || key;\r\n    });\r\n}\r\nfunction decodeCodePoint(codePoint) {\r\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\r\n        return '\\uFFFD';\r\n    }\r\n    if (codePoint in decodeMap) {\r\n        codePoint = decodeMap[codePoint];\r\n    }\r\n    return String.fromCodePoint(codePoint);\r\n}\n\nfunction scanJSXAttributeValue(parser, context) {\r\n    parser.startPos = parser.tokenPos = parser.index;\r\n    parser.startColumn = parser.colPos = parser.column;\r\n    parser.startLine = parser.linePos = parser.line;\r\n    parser.token =\r\n        CharTypes[parser.currentChar] & 8192\r\n            ? scanJSXString(parser, context)\r\n            : scanSingleToken(parser, context, 0);\r\n    return parser.token;\r\n}\r\nfunction scanJSXString(parser, context) {\r\n    const quote = parser.currentChar;\r\n    let char = advanceChar(parser);\r\n    const start = parser.index;\r\n    while (char !== quote) {\r\n        if (parser.index >= parser.end)\r\n            report(parser, 14);\r\n        char = advanceChar(parser);\r\n    }\r\n    if (char !== quote)\r\n        report(parser, 14);\r\n    parser.tokenValue = parser.source.slice(start, parser.index);\r\n    advanceChar(parser);\r\n    if (context & 512)\r\n        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n    return 134283267;\r\n}\r\nfunction scanJSXToken(parser, context) {\r\n    parser.startPos = parser.tokenPos = parser.index;\r\n    parser.startColumn = parser.colPos = parser.column;\r\n    parser.startLine = parser.linePos = parser.line;\r\n    if (parser.index >= parser.end)\r\n        return (parser.token = 1048576);\r\n    const token = TokenLookup[parser.source.charCodeAt(parser.index)];\r\n    switch (token) {\r\n        case 8456258: {\r\n            advanceChar(parser);\r\n            if (parser.currentChar === 47) {\r\n                advanceChar(parser);\r\n                parser.token = 25;\r\n            }\r\n            else {\r\n                parser.token = 8456258;\r\n            }\r\n            break;\r\n        }\r\n        case 2162700: {\r\n            advanceChar(parser);\r\n            parser.token = 2162700;\r\n            break;\r\n        }\r\n        default: {\r\n            let state = 0;\r\n            while (parser.index < parser.end) {\r\n                const type = CharTypes[parser.source.charCodeAt(parser.index)];\r\n                if (type & 1024) {\r\n                    state |= 1 | 4;\r\n                    scanNewLine(parser);\r\n                }\r\n                else if (type & 2048) {\r\n                    consumeLineFeed(parser, state);\r\n                    state = (state & ~4) | 1;\r\n                }\r\n                else {\r\n                    advanceChar(parser);\r\n                }\r\n                if (CharTypes[parser.currentChar] & 16384)\r\n                    break;\r\n            }\r\n            const raw = parser.source.slice(parser.tokenPos, parser.index);\r\n            if (context & 512)\r\n                parser.tokenRaw = raw;\r\n            parser.tokenValue = decodeHTMLStrict(raw);\r\n            parser.token = 138;\r\n        }\r\n    }\r\n    return parser.token;\r\n}\r\nfunction scanJSXIdentifier(parser) {\r\n    if ((parser.token & 143360) === 143360) {\r\n        const { index } = parser;\r\n        let char = parser.currentChar;\r\n        while (CharTypes[char] & (32768 | 2)) {\r\n            char = advanceChar(parser);\r\n        }\r\n        parser.tokenValue += parser.source.slice(index, parser.index);\r\n    }\r\n    parser.token = 208897;\r\n    return parser.token;\r\n}\n\nfunction matchOrInsertSemicolon(parser, context, specDeviation) {\r\n    if ((parser.flags & 1) === 0 &&\r\n        (parser.token & 1048576) !== 1048576 &&\r\n        !specDeviation) {\r\n        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    consumeOpt(parser, context, 1074790417);\r\n}\r\nfunction isValidStrictMode(parser, index, tokenPos, tokenValue) {\r\n    if (index - tokenPos < 13 && tokenValue === 'use strict') {\r\n        if ((parser.token & 1048576) === 1048576 || parser.flags & 1) {\r\n            return 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nfunction optionalBit(parser, context, t) {\r\n    if (parser.token !== t)\r\n        return 0;\r\n    nextToken(parser, context);\r\n    return 1;\r\n}\r\nfunction consumeOpt(parser, context, t) {\r\n    if (parser.token !== t)\r\n        return false;\r\n    nextToken(parser, context);\r\n    return true;\r\n}\r\nfunction consume(parser, context, t) {\r\n    if (parser.token !== t)\r\n        report(parser, 23, KeywordDescTable[t & 255]);\r\n    nextToken(parser, context);\r\n}\r\nfunction reinterpretToPattern(state, node) {\r\n    switch (node.type) {\r\n        case 'ArrayExpression':\r\n            node.type = 'ArrayPattern';\r\n            const elements = node.elements;\r\n            for (let i = 0, n = elements.length; i < n; ++i) {\r\n                const element = elements[i];\r\n                if (element)\r\n                    reinterpretToPattern(state, element);\r\n            }\r\n            return;\r\n        case 'ObjectExpression':\r\n            node.type = 'ObjectPattern';\r\n            const properties = node.properties;\r\n            for (let i = 0, n = properties.length; i < n; ++i) {\r\n                reinterpretToPattern(state, properties[i]);\r\n            }\r\n            return;\r\n        case 'AssignmentExpression':\r\n            node.type = 'AssignmentPattern';\r\n            if (node.operator !== '=')\r\n                report(state, 68);\r\n            delete node.operator;\r\n            reinterpretToPattern(state, node.left);\r\n            return;\r\n        case 'Property':\r\n            reinterpretToPattern(state, node.value);\r\n            return;\r\n        case 'SpreadElement':\r\n            node.type = 'RestElement';\r\n            reinterpretToPattern(state, node.argument);\r\n    }\r\n}\r\nfunction validateBindingIdentifier(parser, context, kind, t, skipEvalArgCheck) {\r\n    if (context & 1024) {\r\n        if ((t & 36864) === 36864) {\r\n            report(parser, 114);\r\n        }\r\n        if (!skipEvalArgCheck && (t & 537079808) === 537079808) {\r\n            report(parser, 115);\r\n        }\r\n    }\r\n    if ((t & 20480) === 20480) {\r\n        report(parser, 99);\r\n    }\r\n    if (kind & (8 | 16) && t === 241739) {\r\n        report(parser, 97);\r\n    }\r\n    if (context & (4194304 | 2048) && t === 209008) {\r\n        report(parser, 95);\r\n    }\r\n    if (context & (2097152 | 1024) && t === 241773) {\r\n        report(parser, 94, 'yield');\r\n    }\r\n}\r\nfunction validateFunctionName(parser, context, t) {\r\n    if (context & 1024) {\r\n        if ((t & 36864) === 36864) {\r\n            report(parser, 114);\r\n        }\r\n        if ((t & 537079808) === 537079808) {\r\n            report(parser, 115);\r\n        }\r\n        if (t === 122) {\r\n            report(parser, 92);\r\n        }\r\n        if (t === 121) {\r\n            report(parser, 92);\r\n        }\r\n    }\r\n    if ((t & 20480) === 20480) {\r\n        report(parser, 99);\r\n    }\r\n    if (context & (4194304 | 2048) && t === 209008) {\r\n        report(parser, 95);\r\n    }\r\n    if (context & (2097152 | 1024) && t === 241773) {\r\n        report(parser, 94, 'yield');\r\n    }\r\n}\r\nfunction isStrictReservedWord(parser, context, t) {\r\n    if (t === 209008) {\r\n        if (context & (4194304 | 2048))\r\n            report(parser, 95);\r\n        parser.destructible |= 128;\r\n    }\r\n    if (t === 241773 && context & 2097152)\r\n        report(parser, 94, 'yield');\r\n    return ((t & 20480) === 20480 ||\r\n        (t & 36864) === 36864 ||\r\n        t == 122);\r\n}\r\nfunction isPropertyWithPrivateFieldKey(expr) {\r\n    return !expr.property ? false : expr.property.type === 'PrivateIdentifier';\r\n}\r\nfunction isValidLabel(parser, labels, name, isIterationStatement) {\r\n    while (labels) {\r\n        if (labels['$' + name]) {\r\n            if (isIterationStatement)\r\n                report(parser, 133);\r\n            return 1;\r\n        }\r\n        if (isIterationStatement && labels.loop)\r\n            isIterationStatement = 0;\r\n        labels = labels['$'];\r\n    }\r\n    return 0;\r\n}\r\nfunction validateAndDeclareLabel(parser, labels, name) {\r\n    let set = labels;\r\n    while (set) {\r\n        if (set['$' + name])\r\n            report(parser, 132, name);\r\n        set = set['$'];\r\n    }\r\n    labels['$' + name] = 1;\r\n}\r\nfunction finishNode(parser, context, start, line, column, node) {\r\n    if (context & 2) {\r\n        node.start = start;\r\n        node.end = parser.startPos;\r\n        node.range = [start, parser.startPos];\r\n    }\r\n    if (context & 4) {\r\n        node.loc = {\r\n            start: {\r\n                line,\r\n                column\r\n            },\r\n            end: {\r\n                line: parser.startLine,\r\n                column: parser.startColumn\r\n            }\r\n        };\r\n        if (parser.sourceFile) {\r\n            node.loc.source = parser.sourceFile;\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction isEqualTagName(elementName) {\r\n    switch (elementName.type) {\r\n        case 'JSXIdentifier':\r\n            return elementName.name;\r\n        case 'JSXNamespacedName':\r\n            return elementName.namespace + ':' + elementName.name;\r\n        case 'JSXMemberExpression':\r\n            return isEqualTagName(elementName.object) + '.' + isEqualTagName(elementName.property);\r\n    }\r\n}\r\nfunction createArrowHeadParsingScope(parser, context, value) {\r\n    const scope = addChildScope(createScope(), 1024);\r\n    addBlockName(parser, context, scope, value, 1, 0);\r\n    return scope;\r\n}\r\nfunction recordScopeError(parser, type, ...params) {\r\n    const { index, line, column } = parser;\r\n    return {\r\n        type,\r\n        params,\r\n        index,\r\n        line,\r\n        column\r\n    };\r\n}\r\nfunction createScope() {\r\n    return {\r\n        parent: void 0,\r\n        type: 2\r\n    };\r\n}\r\nfunction addChildScope(parent, type) {\r\n    return {\r\n        parent,\r\n        type,\r\n        scopeError: void 0\r\n    };\r\n}\r\nfunction addVarOrBlock(parser, context, scope, name, kind, origin) {\r\n    if (kind & 4) {\r\n        addVarName(parser, context, scope, name, kind);\r\n    }\r\n    else {\r\n        addBlockName(parser, context, scope, name, kind, origin);\r\n    }\r\n    if (origin & 64) {\r\n        declareUnboundVariable(parser, name);\r\n    }\r\n}\r\nfunction addBlockName(parser, context, scope, name, kind, origin) {\r\n    const value = scope['#' + name];\r\n    if (value && (value & 2) === 0) {\r\n        if (kind & 1) {\r\n            scope.scopeError = recordScopeError(parser, 140, name);\r\n        }\r\n        else if (context & 256 &&\r\n            value & 64 &&\r\n            origin & 2) ;\r\n        else {\r\n            report(parser, 140, name);\r\n        }\r\n    }\r\n    if (scope.type & 128 &&\r\n        (scope.parent['#' + name] && (scope.parent['#' + name] & 2) === 0)) {\r\n        report(parser, 140, name);\r\n    }\r\n    if (scope.type & 1024 && value && (value & 2) === 0) {\r\n        if (kind & 1) {\r\n            scope.scopeError = recordScopeError(parser, 140, name);\r\n        }\r\n    }\r\n    if (scope.type & 64) {\r\n        if (scope.parent['#' + name] & 768)\r\n            report(parser, 153, name);\r\n    }\r\n    scope['#' + name] = kind;\r\n}\r\nfunction addVarName(parser, context, scope, name, kind) {\r\n    let currentScope = scope;\r\n    while (currentScope && (currentScope.type & 256) === 0) {\r\n        const value = currentScope['#' + name];\r\n        if (value & 248) {\r\n            if (context & 256 &&\r\n                (context & 1024) === 0 &&\r\n                ((kind & 128 && value & 68) ||\r\n                    (value & 128 && kind & 68))) ;\r\n            else {\r\n                report(parser, 140, name);\r\n            }\r\n        }\r\n        if (currentScope === scope) {\r\n            if (value & 1 && kind & 1) {\r\n                currentScope.scopeError = recordScopeError(parser, 140, name);\r\n            }\r\n        }\r\n        if (value & (512 | 256)) {\r\n            if ((value & 512) === 0 ||\r\n                (context & 256) === 0 ||\r\n                context & 1024) {\r\n                report(parser, 140, name);\r\n            }\r\n        }\r\n        currentScope['#' + name] = kind;\r\n        currentScope = currentScope.parent;\r\n    }\r\n}\r\nfunction declareUnboundVariable(parser, name) {\r\n    if (parser.exportedNames !== void 0 && name !== '') {\r\n        if (parser.exportedNames['#' + name]) {\r\n            report(parser, 141, name);\r\n        }\r\n        parser.exportedNames['#' + name] = 1;\r\n    }\r\n}\r\nfunction addBindingToExports(parser, name) {\r\n    if (parser.exportedBindings !== void 0 && name !== '') {\r\n        parser.exportedBindings['#' + name] = 1;\r\n    }\r\n}\r\nfunction pushComment(context, array) {\r\n    return function (type, value, start, end, loc) {\r\n        const comment = {\r\n            type,\r\n            value\r\n        };\r\n        if (context & 2) {\r\n            comment.start = start;\r\n            comment.end = end;\r\n            comment.range = [start, end];\r\n        }\r\n        if (context & 4) {\r\n            comment.loc = loc;\r\n        }\r\n        array.push(comment);\r\n    };\r\n}\r\nfunction pushToken(context, array) {\r\n    return function (token, start, end, loc) {\r\n        const tokens = {\r\n            token\r\n        };\r\n        if (context & 2) {\r\n            tokens.start = start;\r\n            tokens.end = end;\r\n            tokens.range = [start, end];\r\n        }\r\n        if (context & 4) {\r\n            tokens.loc = loc;\r\n        }\r\n        array.push(tokens);\r\n    };\r\n}\r\nfunction isValidIdentifier(context, t) {\r\n    if (context & (1024 | 2097152)) {\r\n        if (context & 2048 && t === 209008)\r\n            return false;\r\n        if (context & 2097152 && t === 241773)\r\n            return false;\r\n        return (t & 143360) === 143360 || (t & 12288) === 12288;\r\n    }\r\n    return ((t & 143360) === 143360 ||\r\n        (t & 12288) === 12288 ||\r\n        (t & 36864) === 36864);\r\n}\r\nfunction classifyIdentifier(parser, context, t, isArrow) {\r\n    if ((t & 537079808) === 537079808) {\r\n        if (context & 1024)\r\n            report(parser, 115);\r\n        if (isArrow)\r\n            parser.flags |= 512;\r\n    }\r\n    if (!isValidIdentifier(context, t))\r\n        report(parser, 0);\r\n}\n\nfunction create(source, sourceFile, onComment, onToken) {\r\n    return {\r\n        source,\r\n        flags: 0,\r\n        index: 0,\r\n        line: 1,\r\n        column: 0,\r\n        startPos: 0,\r\n        end: source.length,\r\n        tokenPos: 0,\r\n        startColumn: 0,\r\n        colPos: 0,\r\n        linePos: 1,\r\n        startLine: 1,\r\n        sourceFile,\r\n        tokenValue: '',\r\n        token: 1048576,\r\n        tokenRaw: '',\r\n        tokenRegExp: void 0,\r\n        currentChar: source.charCodeAt(0),\r\n        exportedNames: [],\r\n        exportedBindings: [],\r\n        assignable: 1,\r\n        destructible: 0,\r\n        onComment,\r\n        onToken,\r\n        leadingDecorators: []\r\n    };\r\n}\r\nfunction parseSource(source, options, context) {\r\n    let sourceFile = '';\r\n    let onComment;\r\n    let onToken;\r\n    if (options != null) {\r\n        if (options.module)\r\n            context |= 2048 | 1024;\r\n        if (options.next)\r\n            context |= 1;\r\n        if (options.loc)\r\n            context |= 4;\r\n        if (options.ranges)\r\n            context |= 2;\r\n        if (options.uniqueKeyInPattern)\r\n            context |= -2147483648;\r\n        if (options.lexical)\r\n            context |= 64;\r\n        if (options.webcompat)\r\n            context |= 256;\r\n        if (options.directives)\r\n            context |= 8 | 512;\r\n        if (options.globalReturn)\r\n            context |= 32;\r\n        if (options.raw)\r\n            context |= 512;\r\n        if (options.preserveParens)\r\n            context |= 128;\r\n        if (options.impliedStrict)\r\n            context |= 1024;\r\n        if (options.jsx)\r\n            context |= 16;\r\n        if (options.identifierPattern)\r\n            context |= 268435456;\r\n        if (options.specDeviation)\r\n            context |= 536870912;\r\n        if (options.source)\r\n            sourceFile = options.source;\r\n        if (options.onComment != null) {\r\n            onComment = Array.isArray(options.onComment) ? pushComment(context, options.onComment) : options.onComment;\r\n        }\r\n        if (options.onToken != null) {\r\n            onToken = Array.isArray(options.onToken) ? pushToken(context, options.onToken) : options.onToken;\r\n        }\r\n    }\r\n    const parser = create(source, sourceFile, onComment, onToken);\r\n    if (context & 1)\r\n        skipHashBang(parser);\r\n    const scope = context & 64 ? createScope() : void 0;\r\n    let body = [];\r\n    let sourceType = 'script';\r\n    if (context & 2048) {\r\n        sourceType = 'module';\r\n        body = parseModuleItemList(parser, context | 8192, scope);\r\n        if (scope) {\r\n            for (const key in parser.exportedBindings) {\r\n                if (key[0] === '#' && !scope[key])\r\n                    report(parser, 142, key.slice(1));\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        body = parseStatementList(parser, context | 8192, scope);\r\n    }\r\n    const node = {\r\n        type: 'Program',\r\n        sourceType,\r\n        body\r\n    };\r\n    if (context & 2) {\r\n        node.start = 0;\r\n        node.end = source.length;\r\n        node.range = [0, source.length];\r\n    }\r\n    if (context & 4) {\r\n        node.loc = {\r\n            start: { line: 1, column: 0 },\r\n            end: { line: parser.line, column: parser.column }\r\n        };\r\n        if (parser.sourceFile)\r\n            node.loc.source = sourceFile;\r\n    }\r\n    return node;\r\n}\r\nfunction parseStatementList(parser, context, scope) {\r\n    nextToken(parser, context | 32768 | 1073741824);\r\n    const statements = [];\r\n    while (parser.token === 134283267) {\r\n        const { index, tokenPos, tokenValue, linePos, colPos, token } = parser;\r\n        const expr = parseLiteral(parser, context);\r\n        if (isValidStrictMode(parser, index, tokenPos, tokenValue))\r\n            context |= 1024;\r\n        statements.push(parseDirective(parser, context, expr, token, tokenPos, linePos, colPos));\r\n    }\r\n    while (parser.token !== 1048576) {\r\n        statements.push(parseStatementListItem(parser, context, scope, 4, {}));\r\n    }\r\n    return statements;\r\n}\r\nfunction parseModuleItemList(parser, context, scope) {\r\n    nextToken(parser, context | 32768);\r\n    const statements = [];\r\n    if (context & 8) {\r\n        while (parser.token === 134283267) {\r\n            const { tokenPos, linePos, colPos, token } = parser;\r\n            statements.push(parseDirective(parser, context, parseLiteral(parser, context), token, tokenPos, linePos, colPos));\r\n        }\r\n    }\r\n    while (parser.token !== 1048576) {\r\n        statements.push(parseModuleItem(parser, context, scope));\r\n    }\r\n    return statements;\r\n}\r\nfunction parseModuleItem(parser, context, scope) {\r\n    parser.leadingDecorators = parseDecorators(parser, context);\r\n    let moduleItem;\r\n    switch (parser.token) {\r\n        case 20566:\r\n            moduleItem = parseExportDeclaration(parser, context, scope);\r\n            break;\r\n        case 86108:\r\n            moduleItem = parseImportDeclaration(parser, context, scope);\r\n            break;\r\n        default:\r\n            moduleItem = parseStatementListItem(parser, context, scope, 4, {});\r\n    }\r\n    if (parser.leadingDecorators.length) {\r\n        report(parser, 164);\r\n    }\r\n    return moduleItem;\r\n}\r\nfunction parseStatementListItem(parser, context, scope, origin, labels) {\r\n    const start = parser.tokenPos;\r\n    const line = parser.linePos;\r\n    const column = parser.colPos;\r\n    switch (parser.token) {\r\n        case 86106:\r\n            return parseFunctionDeclaration(parser, context, scope, origin, 1, 0, 0, start, line, column);\r\n        case 133:\r\n        case 86096:\r\n            return parseClassDeclaration(parser, context, scope, 0, start, line, column);\r\n        case 86092:\r\n            return parseLexicalDeclaration(parser, context, scope, 16, 0, start, line, column);\r\n        case 241739:\r\n            return parseLetIdentOrVarDeclarationStatement(parser, context, scope, origin, start, line, column);\r\n        case 20566:\r\n            report(parser, 100, 'export');\r\n        case 86108:\r\n            nextToken(parser, context);\r\n            switch (parser.token) {\r\n                case 67174411:\r\n                    return parseImportCallDeclaration(parser, context, start, line, column);\r\n                case 67108877:\r\n                    return parseImportMetaDeclaration(parser, context, start, line, column);\r\n                default:\r\n                    report(parser, 100, 'import');\r\n            }\r\n        case 209007:\r\n            return parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, origin, labels, 1, start, line, column);\r\n        default:\r\n            return parseStatement(parser, context, scope, origin, labels, 1, start, line, column);\r\n    }\r\n}\r\nfunction parseStatement(parser, context, scope, origin, labels, allowFuncDecl, start, line, column) {\r\n    switch (parser.token) {\r\n        case 86090:\r\n            return parseVariableStatement(parser, context, scope, 0, start, line, column);\r\n        case 20574:\r\n            return parseReturnStatement(parser, context, start, line, column);\r\n        case 20571:\r\n            return parseIfStatement(parser, context, scope, labels, start, line, column);\r\n        case 20569:\r\n            return parseForStatement(parser, context, scope, labels, start, line, column);\r\n        case 20564:\r\n            return parseDoWhileStatement(parser, context, scope, labels, start, line, column);\r\n        case 20580:\r\n            return parseWhileStatement(parser, context, scope, labels, start, line, column);\r\n        case 86112:\r\n            return parseSwitchStatement(parser, context, scope, labels, start, line, column);\r\n        case 1074790417:\r\n            return parseEmptyStatement(parser, context, start, line, column);\r\n        case 2162700:\r\n            return parseBlock(parser, context, scope ? addChildScope(scope, 2) : scope, labels, start, line, column);\r\n        case 86114:\r\n            return parseThrowStatement(parser, context, start, line, column);\r\n        case 20557:\r\n            return parseBreakStatement(parser, context, labels, start, line, column);\r\n        case 20561:\r\n            return parseContinueStatement(parser, context, labels, start, line, column);\r\n        case 20579:\r\n            return parseTryStatement(parser, context, scope, labels, start, line, column);\r\n        case 20581:\r\n            return parseWithStatement(parser, context, scope, labels, start, line, column);\r\n        case 20562:\r\n            return parseDebuggerStatement(parser, context, start, line, column);\r\n        case 209007:\r\n            return parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, origin, labels, 0, start, line, column);\r\n        case 20559:\r\n            report(parser, 156);\r\n        case 20568:\r\n            report(parser, 157);\r\n        case 86106:\r\n            report(parser, context & 1024\r\n                ? 73\r\n                : (context & 256) < 1\r\n                    ? 75\r\n                    : 74);\r\n        case 86096:\r\n            report(parser, 76);\r\n        default:\r\n            return parseExpressionOrLabelledStatement(parser, context, scope, origin, labels, allowFuncDecl, start, line, column);\r\n    }\r\n}\r\nfunction parseExpressionOrLabelledStatement(parser, context, scope, origin, labels, allowFuncDecl, start, line, column) {\r\n    const { tokenValue, token } = parser;\r\n    let expr;\r\n    switch (token) {\r\n        case 241739:\r\n            expr = parseIdentifier(parser, context, 0);\r\n            if (context & 1024)\r\n                report(parser, 82);\r\n            if (parser.token === 69271571)\r\n                report(parser, 81);\r\n            break;\r\n        default:\r\n            expr = parsePrimaryExpression(parser, context, 2, 0, 1, 0, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    if (token & 143360 && parser.token === 21) {\r\n        return parseLabelledStatement(parser, context, scope, origin, labels, tokenValue, expr, token, allowFuncDecl, start, line, column);\r\n    }\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n    expr = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expr);\r\n    if (parser.token === 18) {\r\n        expr = parseSequenceExpression(parser, context, 0, start, line, column, expr);\r\n    }\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseBlock(parser, context, scope, labels, start, line, column) {\r\n    const body = [];\r\n    consume(parser, context | 32768, 2162700);\r\n    while (parser.token !== 1074790415) {\r\n        body.push(parseStatementListItem(parser, context, scope, 2, { $: labels }));\r\n    }\r\n    consume(parser, context | 32768, 1074790415);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'BlockStatement',\r\n        body\r\n    });\r\n}\r\nfunction parseReturnStatement(parser, context, start, line, column) {\r\n    if ((context & 32) < 1 && context & 8192)\r\n        report(parser, 89);\r\n    nextToken(parser, context | 32768);\r\n    const argument = parser.flags & 1 || parser.token & 1048576\r\n        ? null\r\n        : parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.line, parser.column);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ReturnStatement',\r\n        argument\r\n    });\r\n}\r\nfunction parseExpressionStatement(parser, context, expression, start, line, column) {\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ExpressionStatement',\r\n        expression\r\n    });\r\n}\r\nfunction parseLabelledStatement(parser, context, scope, origin, labels, value, expr, token, allowFuncDecl, start, line, column) {\r\n    validateBindingIdentifier(parser, context, 0, token, 1);\r\n    validateAndDeclareLabel(parser, labels, value);\r\n    nextToken(parser, context | 32768);\r\n    const body = allowFuncDecl &&\r\n        (context & 1024) < 1 &&\r\n        context & 256 &&\r\n        parser.token === 86106\r\n        ? parseFunctionDeclaration(parser, context, addChildScope(scope, 2), origin, 0, 0, 0, parser.tokenPos, parser.linePos, parser.colPos)\r\n        : parseStatement(parser, context, scope, origin, labels, allowFuncDecl, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'LabeledStatement',\r\n        label: expr,\r\n        body\r\n    });\r\n}\r\nfunction parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, origin, labels, allowFuncDecl, start, line, column) {\r\n    const { token, tokenValue } = parser;\r\n    let expr = parseIdentifier(parser, context, 0);\r\n    if (parser.token === 21) {\r\n        return parseLabelledStatement(parser, context, scope, origin, labels, tokenValue, expr, token, 1, start, line, column);\r\n    }\r\n    const asyncNewLine = parser.flags & 1;\r\n    if (!asyncNewLine) {\r\n        if (parser.token === 86106) {\r\n            if (!allowFuncDecl)\r\n                report(parser, 119);\r\n            return parseFunctionDeclaration(parser, context, scope, origin, 1, 0, 1, start, line, column);\r\n        }\r\n        if ((parser.token & 143360) === 143360) {\r\n            expr = parseAsyncArrowAfterIdent(parser, context, 1, start, line, column);\r\n            if (parser.token === 18)\r\n                expr = parseSequenceExpression(parser, context, 0, start, line, column, expr);\r\n            return parseExpressionStatement(parser, context, expr, start, line, column);\r\n        }\r\n    }\r\n    if (parser.token === 67174411) {\r\n        expr = parseAsyncArrowOrCallExpression(parser, context, expr, 1, 1, 0, asyncNewLine, start, line, column);\r\n    }\r\n    else {\r\n        if (parser.token === 10) {\r\n            classifyIdentifier(parser, context, token, 1);\r\n            expr = parseArrowFromIdentifier(parser, context, parser.tokenValue, expr, 0, 1, 0, start, line, column);\r\n        }\r\n        parser.assignable = 1;\r\n    }\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n    if (parser.token === 18)\r\n        expr = parseSequenceExpression(parser, context, 0, start, line, column, expr);\r\n    expr = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expr);\r\n    parser.assignable = 1;\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseDirective(parser, context, expression, token, start, line, column) {\r\n    if (token !== 1074790417) {\r\n        parser.assignable = 2;\r\n        expression = parseMemberOrUpdateExpression(parser, context, expression, 0, 0, start, line, column);\r\n        if (parser.token !== 1074790417) {\r\n            expression = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expression);\r\n            if (parser.token === 18) {\r\n                expression = parseSequenceExpression(parser, context, 0, start, line, column, expression);\r\n            }\r\n        }\r\n        matchOrInsertSemicolon(parser, context | 32768);\r\n    }\r\n    return context & 8 && expression.type === 'Literal' && typeof expression.value === 'string'\r\n        ? finishNode(parser, context, start, line, column, {\r\n            type: 'ExpressionStatement',\r\n            expression,\r\n            directive: expression.raw.slice(1, -1)\r\n        })\r\n        : finishNode(parser, context, start, line, column, {\r\n            type: 'ExpressionStatement',\r\n            expression\r\n        });\r\n}\r\nfunction parseEmptyStatement(parser, context, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'EmptyStatement'\r\n    });\r\n}\r\nfunction parseThrowStatement(parser, context, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    if (parser.flags & 1)\r\n        report(parser, 87);\r\n    const argument = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ThrowStatement',\r\n        argument\r\n    });\r\n}\r\nfunction parseIfStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    consume(parser, context | 32768, 67174411);\r\n    parser.assignable = 1;\r\n    const test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.line, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    const consequent = parseConsequentOrAlternative(parser, context, scope, labels, parser.tokenPos, parser.linePos, parser.colPos);\r\n    let alternate = null;\r\n    if (parser.token === 20565) {\r\n        nextToken(parser, context | 32768);\r\n        alternate = parseConsequentOrAlternative(parser, context, scope, labels, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'IfStatement',\r\n        test,\r\n        consequent,\r\n        alternate\r\n    });\r\n}\r\nfunction parseConsequentOrAlternative(parser, context, scope, labels, start, line, column) {\r\n    return context & 1024 ||\r\n        (context & 256) < 1 ||\r\n        parser.token !== 86106\r\n        ? parseStatement(parser, context, scope, 0, { $: labels }, 0, parser.tokenPos, parser.linePos, parser.colPos)\r\n        : parseFunctionDeclaration(parser, context, addChildScope(scope, 2), 0, 0, 0, 0, start, line, column);\r\n}\r\nfunction parseSwitchStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    consume(parser, context | 32768, 67174411);\r\n    const discriminant = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 16);\r\n    consume(parser, context, 2162700);\r\n    const cases = [];\r\n    let seenDefault = 0;\r\n    if (scope)\r\n        scope = addChildScope(scope, 8);\r\n    while (parser.token !== 1074790415) {\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        let test = null;\r\n        const consequent = [];\r\n        if (consumeOpt(parser, context | 32768, 20558)) {\r\n            test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n        }\r\n        else {\r\n            consume(parser, context | 32768, 20563);\r\n            if (seenDefault)\r\n                report(parser, 86);\r\n            seenDefault = 1;\r\n        }\r\n        consume(parser, context | 32768, 21);\r\n        while (parser.token !== 20558 &&\r\n            parser.token !== 1074790415 &&\r\n            parser.token !== 20563) {\r\n            consequent.push(parseStatementListItem(parser, context | 4096, scope, 2, {\r\n                $: labels\r\n            }));\r\n        }\r\n        cases.push(finishNode(parser, context, tokenPos, linePos, colPos, {\r\n            type: 'SwitchCase',\r\n            test,\r\n            consequent\r\n        }));\r\n    }\r\n    consume(parser, context | 32768, 1074790415);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'SwitchStatement',\r\n        discriminant,\r\n        cases\r\n    });\r\n}\r\nfunction parseWhileStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    consume(parser, context | 32768, 67174411);\r\n    const test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    const body = parseIterationStatementBody(parser, context, scope, labels);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'WhileStatement',\r\n        test,\r\n        body\r\n    });\r\n}\r\nfunction parseIterationStatementBody(parser, context, scope, labels) {\r\n    return parseStatement(parser, ((context | 134217728) ^ 134217728) | 131072, scope, 0, { loop: 1, $: labels }, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n}\r\nfunction parseContinueStatement(parser, context, labels, start, line, column) {\r\n    if ((context & 131072) < 1)\r\n        report(parser, 65);\r\n    nextToken(parser, context);\r\n    let label = null;\r\n    if ((parser.flags & 1) < 1 && parser.token & 143360) {\r\n        const { tokenValue } = parser;\r\n        label = parseIdentifier(parser, context | 32768, 0);\r\n        if (!isValidLabel(parser, labels, tokenValue, 1))\r\n            report(parser, 134, tokenValue);\r\n    }\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ContinueStatement',\r\n        label\r\n    });\r\n}\r\nfunction parseBreakStatement(parser, context, labels, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    let label = null;\r\n    if ((parser.flags & 1) < 1 && parser.token & 143360) {\r\n        const { tokenValue } = parser;\r\n        label = parseIdentifier(parser, context | 32768, 0);\r\n        if (!isValidLabel(parser, labels, tokenValue, 0))\r\n            report(parser, 134, tokenValue);\r\n    }\r\n    else if ((context & (4096 | 131072)) < 1) {\r\n        report(parser, 66);\r\n    }\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'BreakStatement',\r\n        label\r\n    });\r\n}\r\nfunction parseWithStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    if (context & 1024)\r\n        report(parser, 88);\r\n    consume(parser, context | 32768, 67174411);\r\n    const object = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    const body = parseStatement(parser, context, scope, 2, labels, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'WithStatement',\r\n        object,\r\n        body\r\n    });\r\n}\r\nfunction parseDebuggerStatement(parser, context, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'DebuggerStatement'\r\n    });\r\n}\r\nfunction parseTryStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const firstScope = scope ? addChildScope(scope, 32) : void 0;\r\n    const block = parseBlock(parser, context, firstScope, { $: labels }, parser.tokenPos, parser.linePos, parser.colPos);\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    const handler = consumeOpt(parser, context | 32768, 20559)\r\n        ? parseCatchBlock(parser, context, scope, labels, tokenPos, linePos, colPos)\r\n        : null;\r\n    let finalizer = null;\r\n    if (parser.token === 20568) {\r\n        nextToken(parser, context | 32768);\r\n        const finalizerScope = firstScope ? addChildScope(scope, 4) : void 0;\r\n        finalizer = parseBlock(parser, context, finalizerScope, { $: labels }, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    if (!handler && !finalizer) {\r\n        report(parser, 85);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'TryStatement',\r\n        block,\r\n        handler,\r\n        finalizer\r\n    });\r\n}\r\nfunction parseCatchBlock(parser, context, scope, labels, start, line, column) {\r\n    let param = null;\r\n    let additionalScope = scope;\r\n    if (consumeOpt(parser, context, 67174411)) {\r\n        if (scope)\r\n            scope = addChildScope(scope, 4);\r\n        param = parseBindingPattern(parser, context, scope, (parser.token & 2097152) === 2097152\r\n            ? 256\r\n            : 512, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n        if (parser.token === 18) {\r\n            report(parser, 83);\r\n        }\r\n        else if (parser.token === 1077936157) {\r\n            report(parser, 84);\r\n        }\r\n        consume(parser, context | 32768, 16);\r\n        if (scope)\r\n            additionalScope = addChildScope(scope, 64);\r\n    }\r\n    const body = parseBlock(parser, context, additionalScope, { $: labels }, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'CatchClause',\r\n        param,\r\n        body\r\n    });\r\n}\r\nfunction parseDoWhileStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const body = parseIterationStatementBody(parser, context, scope, labels);\r\n    consume(parser, context, 20580);\r\n    consume(parser, context | 32768, 67174411);\r\n    const test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    consumeOpt(parser, context, 1074790417);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'DoWhileStatement',\r\n        body,\r\n        test\r\n    });\r\n}\r\nfunction parseLetIdentOrVarDeclarationStatement(parser, context, scope, origin, start, line, column) {\r\n    const { token, tokenValue } = parser;\r\n    let expr = parseIdentifier(parser, context, 0);\r\n    if (parser.token & (143360 | 2097152)) {\r\n        const declarations = parseVariableDeclarationList(parser, context, scope, 8, 0);\r\n        matchOrInsertSemicolon(parser, context | 32768);\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'VariableDeclaration',\r\n            kind: 'let',\r\n            declarations\r\n        });\r\n    }\r\n    parser.assignable = 1;\r\n    if (context & 1024)\r\n        report(parser, 82);\r\n    if (parser.token === 21) {\r\n        return parseLabelledStatement(parser, context, scope, origin, {}, tokenValue, expr, token, 0, start, line, column);\r\n    }\r\n    if (parser.token === 10) {\r\n        let scope = void 0;\r\n        if (context & 64)\r\n            scope = createArrowHeadParsingScope(parser, context, tokenValue);\r\n        parser.flags = (parser.flags | 128) ^ 128;\r\n        expr = parseArrowFunctionExpression(parser, context, scope, [expr], 0, start, line, column);\r\n    }\r\n    else {\r\n        expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n        expr = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expr);\r\n    }\r\n    if (parser.token === 18) {\r\n        expr = parseSequenceExpression(parser, context, 0, start, line, column, expr);\r\n    }\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseLexicalDeclaration(parser, context, scope, kind, origin, start, line, column) {\r\n    nextToken(parser, context);\r\n    const declarations = parseVariableDeclarationList(parser, context, scope, kind, origin);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'VariableDeclaration',\r\n        kind: kind & 8 ? 'let' : 'const',\r\n        declarations\r\n    });\r\n}\r\nfunction parseVariableStatement(parser, context, scope, origin, start, line, column) {\r\n    nextToken(parser, context);\r\n    const declarations = parseVariableDeclarationList(parser, context, scope, 4, origin);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'VariableDeclaration',\r\n        kind: 'var',\r\n        declarations\r\n    });\r\n}\r\nfunction parseVariableDeclarationList(parser, context, scope, kind, origin) {\r\n    let bindingCount = 1;\r\n    const list = [parseVariableDeclaration(parser, context, scope, kind, origin)];\r\n    while (consumeOpt(parser, context, 18)) {\r\n        bindingCount++;\r\n        list.push(parseVariableDeclaration(parser, context, scope, kind, origin));\r\n    }\r\n    if (bindingCount > 1 && origin & 32 && parser.token & 262144) {\r\n        report(parser, 58, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    return list;\r\n}\r\nfunction parseVariableDeclaration(parser, context, scope, kind, origin) {\r\n    const { token, tokenPos, linePos, colPos } = parser;\r\n    let init = null;\r\n    const id = parseBindingPattern(parser, context, scope, kind, origin, tokenPos, linePos, colPos);\r\n    if (parser.token === 1077936157) {\r\n        nextToken(parser, context | 32768);\r\n        init = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n        if (origin & 32 || (token & 2097152) < 1) {\r\n            if (parser.token === 274549 ||\r\n                (parser.token === 8738868 &&\r\n                    (token & 2097152 || (kind & 4) < 1 || context & 1024))) {\r\n                reportMessageAt(tokenPos, parser.line, parser.index - 3, 57, parser.token === 274549 ? 'of' : 'in');\r\n            }\r\n        }\r\n    }\r\n    else if ((kind & 16 || (token & 2097152) > 0) &&\r\n        (parser.token & 262144) !== 262144) {\r\n        report(parser, 56, kind & 16 ? 'const' : 'destructuring');\r\n    }\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'VariableDeclarator',\r\n        id,\r\n        init\r\n    });\r\n}\r\nfunction parseForStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    const forAwait = (context & 4194304) > 0 && consumeOpt(parser, context, 209008);\r\n    consume(parser, context | 32768, 67174411);\r\n    if (scope)\r\n        scope = addChildScope(scope, 1);\r\n    let test = null;\r\n    let update = null;\r\n    let destructible = 0;\r\n    let init = null;\r\n    let isVarDecl = parser.token === 86090 || parser.token === 241739 || parser.token === 86092;\r\n    let right;\r\n    const { token, tokenPos, linePos, colPos } = parser;\r\n    if (isVarDecl) {\r\n        if (token === 241739) {\r\n            init = parseIdentifier(parser, context, 0);\r\n            if (parser.token & (143360 | 2097152)) {\r\n                if (parser.token === 8738868) {\r\n                    if (context & 1024)\r\n                        report(parser, 64);\r\n                }\r\n                else {\r\n                    init = finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                        type: 'VariableDeclaration',\r\n                        kind: 'let',\r\n                        declarations: parseVariableDeclarationList(parser, context | 134217728, scope, 8, 32)\r\n                    });\r\n                }\r\n                parser.assignable = 1;\r\n            }\r\n            else if (context & 1024) {\r\n                report(parser, 64);\r\n            }\r\n            else {\r\n                isVarDecl = false;\r\n                parser.assignable = 1;\r\n                init = parseMemberOrUpdateExpression(parser, context, init, 0, 0, tokenPos, linePos, colPos);\r\n                if (parser.token === 274549)\r\n                    report(parser, 111);\r\n            }\r\n        }\r\n        else {\r\n            nextToken(parser, context);\r\n            init = finishNode(parser, context, tokenPos, linePos, colPos, token === 86090\r\n                ? {\r\n                    type: 'VariableDeclaration',\r\n                    kind: 'var',\r\n                    declarations: parseVariableDeclarationList(parser, context | 134217728, scope, 4, 32)\r\n                }\r\n                : {\r\n                    type: 'VariableDeclaration',\r\n                    kind: 'const',\r\n                    declarations: parseVariableDeclarationList(parser, context | 134217728, scope, 16, 32)\r\n                });\r\n            parser.assignable = 1;\r\n        }\r\n    }\r\n    else if (token === 1074790417) {\r\n        if (forAwait)\r\n            report(parser, 79);\r\n    }\r\n    else if ((token & 2097152) === 2097152) {\r\n        init =\r\n            token === 2162700\r\n                ? parseObjectLiteralOrPattern(parser, context, void 0, 1, 0, 0, 2, 32, tokenPos, linePos, colPos)\r\n                : parseArrayExpressionOrPattern(parser, context, void 0, 1, 0, 0, 2, 32, tokenPos, linePos, colPos);\r\n        destructible = parser.destructible;\r\n        if (context & 256 && destructible & 64) {\r\n            report(parser, 60);\r\n        }\r\n        parser.assignable =\r\n            destructible & 16 ? 2 : 1;\r\n        init = parseMemberOrUpdateExpression(parser, context | 134217728, init, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    else {\r\n        init = parseLeftHandSideExpression(parser, context | 134217728, 1, 0, 1, tokenPos, linePos, colPos);\r\n    }\r\n    if ((parser.token & 262144) === 262144) {\r\n        if (parser.token === 274549) {\r\n            if (parser.assignable & 2)\r\n                report(parser, 77, forAwait ? 'await' : 'of');\r\n            reinterpretToPattern(parser, init);\r\n            nextToken(parser, context | 32768);\r\n            right = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n            consume(parser, context | 32768, 16);\r\n            const body = parseIterationStatementBody(parser, context, scope, labels);\r\n            return finishNode(parser, context, start, line, column, {\r\n                type: 'ForOfStatement',\r\n                left: init,\r\n                right,\r\n                body,\r\n                await: forAwait\r\n            });\r\n        }\r\n        if (parser.assignable & 2)\r\n            report(parser, 77, 'in');\r\n        reinterpretToPattern(parser, init);\r\n        nextToken(parser, context | 32768);\r\n        if (forAwait)\r\n            report(parser, 79);\r\n        right = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n        consume(parser, context | 32768, 16);\r\n        const body = parseIterationStatementBody(parser, context, scope, labels);\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'ForInStatement',\r\n            body,\r\n            left: init,\r\n            right\r\n        });\r\n    }\r\n    if (forAwait)\r\n        report(parser, 79);\r\n    if (!isVarDecl) {\r\n        if (destructible & 8 && parser.token !== 1077936157) {\r\n            report(parser, 77, 'loop');\r\n        }\r\n        init = parseAssignmentExpression(parser, context | 134217728, 0, 0, tokenPos, linePos, colPos, init);\r\n    }\r\n    if (parser.token === 18)\r\n        init = parseSequenceExpression(parser, context, 0, parser.tokenPos, parser.linePos, parser.colPos, init);\r\n    consume(parser, context | 32768, 1074790417);\r\n    if (parser.token !== 1074790417)\r\n        test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 1074790417);\r\n    if (parser.token !== 16)\r\n        update = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    const body = parseIterationStatementBody(parser, context, scope, labels);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ForStatement',\r\n        init,\r\n        test,\r\n        update,\r\n        body\r\n    });\r\n}\r\nfunction parseRestrictedIdentifier(parser, context, scope) {\r\n    if (!isValidIdentifier(context, parser.token))\r\n        report(parser, 114);\r\n    if ((parser.token & 537079808) === 537079808)\r\n        report(parser, 115);\r\n    if (scope)\r\n        addBlockName(parser, context, scope, parser.tokenValue, 8, 0);\r\n    return parseIdentifier(parser, context, 0);\r\n}\r\nfunction parseImportDeclaration(parser, context, scope) {\r\n    const start = parser.tokenPos;\r\n    const line = parser.linePos;\r\n    const column = parser.colPos;\r\n    nextToken(parser, context);\r\n    let source = null;\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    let specifiers = [];\r\n    if (parser.token === 134283267) {\r\n        source = parseLiteral(parser, context);\r\n    }\r\n    else {\r\n        if (parser.token & 143360) {\r\n            const local = parseRestrictedIdentifier(parser, context, scope);\r\n            specifiers = [\r\n                finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                    type: 'ImportDefaultSpecifier',\r\n                    local\r\n                })\r\n            ];\r\n            if (consumeOpt(parser, context, 18)) {\r\n                switch (parser.token) {\r\n                    case 8457014:\r\n                        specifiers.push(parseImportNamespaceSpecifier(parser, context, scope));\r\n                        break;\r\n                    case 2162700:\r\n                        parseImportSpecifierOrNamedImports(parser, context, scope, specifiers);\r\n                        break;\r\n                    default:\r\n                        report(parser, 104);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            switch (parser.token) {\r\n                case 8457014:\r\n                    specifiers = [parseImportNamespaceSpecifier(parser, context, scope)];\r\n                    break;\r\n                case 2162700:\r\n                    parseImportSpecifierOrNamedImports(parser, context, scope, specifiers);\r\n                    break;\r\n                case 67174411:\r\n                    return parseImportCallDeclaration(parser, context, start, line, column);\r\n                case 67108877:\r\n                    return parseImportMetaDeclaration(parser, context, start, line, column);\r\n                default:\r\n                    report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n            }\r\n        }\r\n        source = parseModuleSpecifier(parser, context);\r\n    }\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ImportDeclaration',\r\n        specifiers,\r\n        source\r\n    });\r\n}\r\nfunction parseImportNamespaceSpecifier(parser, context, scope) {\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    nextToken(parser, context);\r\n    consume(parser, context, 77934);\r\n    if ((parser.token & 134217728) === 134217728) {\r\n        reportMessageAt(tokenPos, parser.line, parser.index, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'ImportNamespaceSpecifier',\r\n        local: parseRestrictedIdentifier(parser, context, scope)\r\n    });\r\n}\r\nfunction parseModuleSpecifier(parser, context) {\r\n    consumeOpt(parser, context, 12404);\r\n    if (parser.token !== 134283267)\r\n        report(parser, 102, 'Import');\r\n    return parseLiteral(parser, context);\r\n}\r\nfunction parseImportSpecifierOrNamedImports(parser, context, scope, specifiers) {\r\n    nextToken(parser, context);\r\n    while (parser.token & 143360) {\r\n        let { token, tokenValue, tokenPos, linePos, colPos } = parser;\r\n        const imported = parseIdentifier(parser, context, 0);\r\n        let local;\r\n        if (consumeOpt(parser, context, 77934)) {\r\n            if ((parser.token & 134217728) === 134217728 || parser.token === 18) {\r\n                report(parser, 103);\r\n            }\r\n            else {\r\n                validateBindingIdentifier(parser, context, 16, parser.token, 0);\r\n            }\r\n            tokenValue = parser.tokenValue;\r\n            local = parseIdentifier(parser, context, 0);\r\n        }\r\n        else {\r\n            validateBindingIdentifier(parser, context, 16, token, 0);\r\n            local = imported;\r\n        }\r\n        if (scope)\r\n            addBlockName(parser, context, scope, tokenValue, 8, 0);\r\n        specifiers.push(finishNode(parser, context, tokenPos, linePos, colPos, {\r\n            type: 'ImportSpecifier',\r\n            local,\r\n            imported\r\n        }));\r\n        if (parser.token !== 1074790415)\r\n            consume(parser, context, 18);\r\n    }\r\n    consume(parser, context, 1074790415);\r\n    return specifiers;\r\n}\r\nfunction parseImportMetaDeclaration(parser, context, start, line, column) {\r\n    let expr = parseImportMetaExpression(parser, context, finishNode(parser, context, start, line, column, {\r\n        type: 'Identifier',\r\n        name: 'import'\r\n    }), start, line, column);\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n    expr = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expr);\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseImportCallDeclaration(parser, context, start, line, column) {\r\n    let expr = parseImportExpression(parser, context, 0, start, line, column);\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseExportDeclaration(parser, context, scope) {\r\n    const start = parser.tokenPos;\r\n    const line = parser.linePos;\r\n    const column = parser.colPos;\r\n    nextToken(parser, context | 32768);\r\n    const specifiers = [];\r\n    let declaration = null;\r\n    let source = null;\r\n    let key;\r\n    if (consumeOpt(parser, context | 32768, 20563)) {\r\n        switch (parser.token) {\r\n            case 86106: {\r\n                declaration = parseFunctionDeclaration(parser, context, scope, 4, 1, 1, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n                break;\r\n            }\r\n            case 133:\r\n            case 86096:\r\n                declaration = parseClassDeclaration(parser, context, scope, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n                break;\r\n            case 209007:\r\n                const { tokenPos, linePos, colPos } = parser;\r\n                declaration = parseIdentifier(parser, context, 0);\r\n                const { flags } = parser;\r\n                if ((flags & 1) < 1) {\r\n                    if (parser.token === 86106) {\r\n                        declaration = parseFunctionDeclaration(parser, context, scope, 4, 1, 1, 1, tokenPos, linePos, colPos);\r\n                    }\r\n                    else {\r\n                        if (parser.token === 67174411) {\r\n                            declaration = parseAsyncArrowOrCallExpression(parser, context, declaration, 1, 1, 0, flags, tokenPos, linePos, colPos);\r\n                            declaration = parseMemberOrUpdateExpression(parser, context, declaration, 0, 0, tokenPos, linePos, colPos);\r\n                            declaration = parseAssignmentExpression(parser, context, 0, 0, tokenPos, linePos, colPos, declaration);\r\n                        }\r\n                        else if (parser.token & 143360) {\r\n                            if (scope)\r\n                                scope = createArrowHeadParsingScope(parser, context, parser.tokenValue);\r\n                            declaration = parseIdentifier(parser, context, 0);\r\n                            declaration = parseArrowFunctionExpression(parser, context, scope, [declaration], 1, tokenPos, linePos, colPos);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                declaration = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n                matchOrInsertSemicolon(parser, context | 32768);\r\n        }\r\n        if (scope)\r\n            declareUnboundVariable(parser, 'default');\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'ExportDefaultDeclaration',\r\n            declaration\r\n        });\r\n    }\r\n    switch (parser.token) {\r\n        case 8457014: {\r\n            nextToken(parser, context);\r\n            let exported = null;\r\n            const isNamedDeclaration = consumeOpt(parser, context, 77934);\r\n            if (isNamedDeclaration) {\r\n                if (scope)\r\n                    declareUnboundVariable(parser, parser.tokenValue);\r\n                exported = parseIdentifier(parser, context, 0);\r\n            }\r\n            consume(parser, context, 12404);\r\n            if (parser.token !== 134283267)\r\n                report(parser, 102, 'Export');\r\n            source = parseLiteral(parser, context);\r\n            matchOrInsertSemicolon(parser, context | 32768);\r\n            return finishNode(parser, context, start, line, column, {\r\n                type: 'ExportAllDeclaration',\r\n                source,\r\n                exported\r\n            });\r\n        }\r\n        case 2162700: {\r\n            nextToken(parser, context);\r\n            const tmpExportedNames = [];\r\n            const tmpExportedBindings = [];\r\n            while (parser.token & 143360) {\r\n                const { tokenPos, tokenValue, linePos, colPos } = parser;\r\n                const local = parseIdentifier(parser, context, 0);\r\n                let exported;\r\n                if (parser.token === 77934) {\r\n                    nextToken(parser, context);\r\n                    if ((parser.token & 134217728) === 134217728) {\r\n                        report(parser, 103);\r\n                    }\r\n                    if (scope) {\r\n                        tmpExportedNames.push(parser.tokenValue);\r\n                        tmpExportedBindings.push(tokenValue);\r\n                    }\r\n                    exported = parseIdentifier(parser, context, 0);\r\n                }\r\n                else {\r\n                    if (scope) {\r\n                        tmpExportedNames.push(parser.tokenValue);\r\n                        tmpExportedBindings.push(parser.tokenValue);\r\n                    }\r\n                    exported = local;\r\n                }\r\n                specifiers.push(finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                    type: 'ExportSpecifier',\r\n                    local,\r\n                    exported\r\n                }));\r\n                if (parser.token !== 1074790415)\r\n                    consume(parser, context, 18);\r\n            }\r\n            consume(parser, context, 1074790415);\r\n            if (consumeOpt(parser, context, 12404)) {\r\n                if (parser.token !== 134283267)\r\n                    report(parser, 102, 'Export');\r\n                source = parseLiteral(parser, context);\r\n            }\r\n            else if (scope) {\r\n                let i = 0;\r\n                let iMax = tmpExportedNames.length;\r\n                for (; i < iMax; i++) {\r\n                    declareUnboundVariable(parser, tmpExportedNames[i]);\r\n                }\r\n                i = 0;\r\n                iMax = tmpExportedBindings.length;\r\n                for (; i < iMax; i++) {\r\n                    addBindingToExports(parser, tmpExportedBindings[i]);\r\n                }\r\n            }\r\n            matchOrInsertSemicolon(parser, context | 32768);\r\n            break;\r\n        }\r\n        case 86096:\r\n            declaration = parseClassDeclaration(parser, context, scope, 2, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 86106:\r\n            declaration = parseFunctionDeclaration(parser, context, scope, 4, 1, 2, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 241739:\r\n            declaration = parseLexicalDeclaration(parser, context, scope, 8, 64, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 86092:\r\n            declaration = parseLexicalDeclaration(parser, context, scope, 16, 64, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 86090:\r\n            declaration = parseVariableStatement(parser, context, scope, 64, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 209007:\r\n            const { tokenPos, linePos, colPos } = parser;\r\n            nextToken(parser, context);\r\n            if ((parser.flags & 1) < 1 && parser.token === 86106) {\r\n                declaration = parseFunctionDeclaration(parser, context, scope, 4, 1, 2, 1, tokenPos, linePos, colPos);\r\n                if (scope) {\r\n                    key = declaration.id ? declaration.id.name : '';\r\n                    declareUnboundVariable(parser, key);\r\n                }\r\n                break;\r\n            }\r\n        default:\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ExportNamedDeclaration',\r\n        declaration,\r\n        specifiers,\r\n        source\r\n    });\r\n}\r\nfunction parseExpression(parser, context, canAssign, isPattern, inGroup, start, line, column) {\r\n    let expr = parsePrimaryExpression(parser, context, 2, 0, canAssign, isPattern, inGroup, 1, start, line, column);\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, inGroup, 0, start, line, column);\r\n    return parseAssignmentExpression(parser, context, inGroup, 0, start, line, column, expr);\r\n}\r\nfunction parseSequenceExpression(parser, context, inGroup, start, line, column, expr) {\r\n    const expressions = [expr];\r\n    while (consumeOpt(parser, context | 32768, 18)) {\r\n        expressions.push(parseExpression(parser, context, 1, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos));\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'SequenceExpression',\r\n        expressions\r\n    });\r\n}\r\nfunction parseExpressions(parser, context, inGroup, canAssign, start, line, column) {\r\n    const expr = parseExpression(parser, context, canAssign, 0, inGroup, start, line, column);\r\n    return parser.token === 18\r\n        ? parseSequenceExpression(parser, context, inGroup, start, line, column, expr)\r\n        : expr;\r\n}\r\nfunction parseAssignmentExpression(parser, context, inGroup, isPattern, start, line, column, left) {\r\n    const { token } = parser;\r\n    if ((token & 4194304) === 4194304) {\r\n        if (parser.assignable & 2)\r\n            report(parser, 24);\r\n        if ((!isPattern && token === 1077936157 && left.type === 'ArrayExpression') ||\r\n            left.type === 'ObjectExpression') {\r\n            reinterpretToPattern(parser, left);\r\n        }\r\n        nextToken(parser, context | 32768);\r\n        const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n        parser.assignable = 2;\r\n        return finishNode(parser, context, start, line, column, isPattern\r\n            ? {\r\n                type: 'AssignmentPattern',\r\n                left,\r\n                right\r\n            }\r\n            : {\r\n                type: 'AssignmentExpression',\r\n                left,\r\n                operator: KeywordDescTable[token & 255],\r\n                right\r\n            });\r\n    }\r\n    if ((token & 8454144) === 8454144) {\r\n        left = parseBinaryExpression(parser, context, inGroup, start, line, column, 4, token, left);\r\n    }\r\n    if (consumeOpt(parser, context | 32768, 22)) {\r\n        left = parseConditionalExpression(parser, context, left, start, line, column);\r\n    }\r\n    return left;\r\n}\r\nfunction parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, start, line, column, left) {\r\n    const { token } = parser;\r\n    nextToken(parser, context | 32768);\r\n    const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n    left = finishNode(parser, context, start, line, column, isPattern\r\n        ? {\r\n            type: 'AssignmentPattern',\r\n            left,\r\n            right\r\n        }\r\n        : {\r\n            type: 'AssignmentExpression',\r\n            left,\r\n            operator: KeywordDescTable[token & 255],\r\n            right\r\n        });\r\n    parser.assignable = 2;\r\n    return left;\r\n}\r\nfunction parseConditionalExpression(parser, context, test, start, line, column) {\r\n    const consequent = parseExpression(parser, (context | 134217728) ^ 134217728, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 21);\r\n    parser.assignable = 1;\r\n    const alternate = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ConditionalExpression',\r\n        test,\r\n        consequent,\r\n        alternate\r\n    });\r\n}\r\nfunction parseBinaryExpression(parser, context, inGroup, start, line, column, minPrec, operator, left) {\r\n    const bit = -((context & 134217728) > 0) & 8738868;\r\n    let t;\r\n    let prec;\r\n    parser.assignable = 2;\r\n    while (parser.token & 8454144) {\r\n        t = parser.token;\r\n        prec = t & 3840;\r\n        if ((t & 524288 && operator & 268435456) || (operator & 524288 && t & 268435456)) {\r\n            report(parser, 159);\r\n        }\r\n        if (prec + ((t === 8457273) << 8) - ((bit === t) << 12) <= minPrec)\r\n            break;\r\n        nextToken(parser, context | 32768);\r\n        left = finishNode(parser, context, start, line, column, {\r\n            type: t & 524288 || t & 268435456 ? 'LogicalExpression' : 'BinaryExpression',\r\n            left,\r\n            right: parseBinaryExpression(parser, context, inGroup, parser.tokenPos, parser.linePos, parser.colPos, prec, t, parseLeftHandSideExpression(parser, context, 0, inGroup, 1, parser.tokenPos, parser.linePos, parser.colPos)),\r\n            operator: KeywordDescTable[t & 255]\r\n        });\r\n    }\r\n    if (parser.token === 1077936157)\r\n        report(parser, 24);\r\n    return left;\r\n}\r\nfunction parseUnaryExpression(parser, context, isLHS, start, line, column, inGroup) {\r\n    if (!isLHS)\r\n        report(parser, 0);\r\n    const unaryOperator = parser.token;\r\n    nextToken(parser, context | 32768);\r\n    const arg = parseLeftHandSideExpression(parser, context, 0, inGroup, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    if (parser.token === 8457273)\r\n        report(parser, 31);\r\n    if (context & 1024 && unaryOperator === 16863278) {\r\n        if (arg.type === 'Identifier') {\r\n            report(parser, 117);\r\n        }\r\n        else if (isPropertyWithPrivateFieldKey(arg)) {\r\n            report(parser, 123);\r\n        }\r\n    }\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'UnaryExpression',\r\n        operator: KeywordDescTable[unaryOperator & 255],\r\n        argument: arg,\r\n        prefix: true\r\n    });\r\n}\r\nfunction parseAsyncExpression(parser, context, inGroup, isLHS, canAssign, isPattern, inNew, start, line, column) {\r\n    const { token } = parser;\r\n    const expr = parseIdentifier(parser, context, isPattern);\r\n    const { flags } = parser;\r\n    if ((flags & 1) < 1) {\r\n        if (parser.token === 86106) {\r\n            return parseFunctionExpression(parser, context, 1, inGroup, start, line, column);\r\n        }\r\n        if ((parser.token & 143360) === 143360) {\r\n            if (!isLHS)\r\n                report(parser, 0);\r\n            return parseAsyncArrowAfterIdent(parser, context, canAssign, start, line, column);\r\n        }\r\n    }\r\n    if (!inNew && parser.token === 67174411) {\r\n        return parseAsyncArrowOrCallExpression(parser, context, expr, canAssign, 1, 0, flags, start, line, column);\r\n    }\r\n    if (parser.token === 10) {\r\n        classifyIdentifier(parser, context, token, 1);\r\n        if (inNew)\r\n            report(parser, 48);\r\n        return parseArrowFromIdentifier(parser, context, parser.tokenValue, expr, inNew, canAssign, 0, start, line, column);\r\n    }\r\n    return expr;\r\n}\r\nfunction parseYieldExpression(parser, context, inGroup, canAssign, start, line, column) {\r\n    if (inGroup)\r\n        parser.destructible |= 256;\r\n    if (context & 2097152) {\r\n        nextToken(parser, context | 32768);\r\n        if (context & 8388608)\r\n            report(parser, 30);\r\n        if (!canAssign)\r\n            report(parser, 24);\r\n        if (parser.token === 22)\r\n            report(parser, 120);\r\n        let argument = null;\r\n        let delegate = false;\r\n        if ((parser.flags & 1) < 1) {\r\n            delegate = consumeOpt(parser, context | 32768, 8457014);\r\n            if (parser.token & (12288 | 65536) || delegate) {\r\n                argument = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n            }\r\n        }\r\n        parser.assignable = 2;\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'YieldExpression',\r\n            argument,\r\n            delegate\r\n        });\r\n    }\r\n    if (context & 1024)\r\n        report(parser, 94, 'yield');\r\n    return parseIdentifierOrArrow(parser, context, start, line, column);\r\n}\r\nfunction parseAwaitExpression(parser, context, inNew, inGroup, start, line, column) {\r\n    if (inGroup)\r\n        parser.destructible |= 128;\r\n    if (context & 4194304 || (context & 2048 && context & 8192)) {\r\n        if (inNew)\r\n            report(parser, 0);\r\n        if (context & 8388608) {\r\n            reportMessageAt(parser.index, parser.line, parser.index, 29);\r\n        }\r\n        nextToken(parser, context | 32768);\r\n        const argument = parseLeftHandSideExpression(parser, context, 0, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n        if (parser.token === 8457273)\r\n            report(parser, 31);\r\n        parser.assignable = 2;\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'AwaitExpression',\r\n            argument\r\n        });\r\n    }\r\n    if (context & 2048)\r\n        report(parser, 95);\r\n    return parseIdentifierOrArrow(parser, context, start, line, column);\r\n}\r\nfunction parseFunctionBody(parser, context, scope, origin, firstRestricted, scopeError) {\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    consume(parser, context | 32768, 2162700);\r\n    const body = [];\r\n    const prevContext = context;\r\n    if (parser.token !== 1074790415) {\r\n        while (parser.token === 134283267) {\r\n            const { index, tokenPos, tokenValue, token } = parser;\r\n            const expr = parseLiteral(parser, context);\r\n            if (isValidStrictMode(parser, index, tokenPos, tokenValue)) {\r\n                context |= 1024;\r\n                if (parser.flags & 128) {\r\n                    reportMessageAt(parser.index, parser.line, parser.tokenPos, 63);\r\n                }\r\n                if (parser.flags & 64) {\r\n                    reportMessageAt(parser.index, parser.line, parser.tokenPos, 8);\r\n                }\r\n            }\r\n            body.push(parseDirective(parser, context, expr, token, tokenPos, parser.linePos, parser.colPos));\r\n        }\r\n        if (context & 1024) {\r\n            if (firstRestricted) {\r\n                if ((firstRestricted & 537079808) === 537079808) {\r\n                    report(parser, 115);\r\n                }\r\n                if ((firstRestricted & 36864) === 36864) {\r\n                    report(parser, 38);\r\n                }\r\n            }\r\n            if (parser.flags & 512)\r\n                report(parser, 115);\r\n            if (parser.flags & 256)\r\n                report(parser, 114);\r\n        }\r\n        if (context & 64 &&\r\n            scope &&\r\n            scopeError !== void 0 &&\r\n            (prevContext & 1024) < 1 &&\r\n            (context & 8192) < 1) {\r\n            reportScopeError(scopeError);\r\n        }\r\n    }\r\n    parser.flags =\r\n        (parser.flags | 512 | 256 | 64) ^\r\n            (512 | 256 | 64);\r\n    parser.destructible = (parser.destructible | 256) ^ 256;\r\n    while (parser.token !== 1074790415) {\r\n        body.push(parseStatementListItem(parser, context, scope, 4, {}));\r\n    }\r\n    consume(parser, origin & (16 | 8) ? context | 32768 : context, 1074790415);\r\n    parser.flags &= ~(128 | 64);\r\n    if (parser.token === 1077936157)\r\n        report(parser, 24);\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'BlockStatement',\r\n        body\r\n    });\r\n}\r\nfunction parseSuperExpression(parser, context, start, line, column) {\r\n    nextToken(parser, context);\r\n    switch (parser.token) {\r\n        case 67108991:\r\n            report(parser, 161);\r\n        case 67174411: {\r\n            if ((context & 524288) < 1)\r\n                report(parser, 26);\r\n            if (context & 16384)\r\n                report(parser, 143);\r\n            parser.assignable = 2;\r\n            break;\r\n        }\r\n        case 69271571:\r\n        case 67108877: {\r\n            if ((context & 262144) < 1)\r\n                report(parser, 27);\r\n            if (context & 16384)\r\n                report(parser, 143);\r\n            parser.assignable = 1;\r\n            break;\r\n        }\r\n        default:\r\n            report(parser, 28, 'super');\r\n    }\r\n    return finishNode(parser, context, start, line, column, { type: 'Super' });\r\n}\r\nfunction parseLeftHandSideExpression(parser, context, canAssign, inGroup, isLHS, start, line, column) {\r\n    const expression = parsePrimaryExpression(parser, context, 2, 0, canAssign, 0, inGroup, isLHS, start, line, column);\r\n    return parseMemberOrUpdateExpression(parser, context, expression, inGroup, 0, start, line, column);\r\n}\r\nfunction parseUpdateExpression(parser, context, expr, start, line, column) {\r\n    if (parser.assignable & 2)\r\n        report(parser, 52);\r\n    const { token } = parser;\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'UpdateExpression',\r\n        argument: expr,\r\n        operator: KeywordDescTable[token & 255],\r\n        prefix: false\r\n    });\r\n}\r\nfunction parseMemberOrUpdateExpression(parser, context, expr, inGroup, inChain, start, line, column) {\r\n    if ((parser.token & 33619968) === 33619968 && (parser.flags & 1) < 1) {\r\n        expr = parseUpdateExpression(parser, context, expr, start, line, column);\r\n    }\r\n    else if ((parser.token & 67108864) === 67108864) {\r\n        context = (context | 134217728 | 8192) ^ (134217728 | 8192);\r\n        switch (parser.token) {\r\n            case 67108877: {\r\n                nextToken(parser, context | 1073741824);\r\n                parser.assignable = 1;\r\n                const property = parsePropertyOrPrivatePropertyName(parser, context);\r\n                expr = finishNode(parser, context, start, line, column, {\r\n                    type: 'MemberExpression',\r\n                    object: expr,\r\n                    computed: false,\r\n                    property\r\n                });\r\n                break;\r\n            }\r\n            case 69271571: {\r\n                let restoreHasOptionalChaining = false;\r\n                if ((parser.flags & 2048) === 2048) {\r\n                    restoreHasOptionalChaining = true;\r\n                    parser.flags = (parser.flags | 2048) ^ 2048;\r\n                }\r\n                nextToken(parser, context | 32768);\r\n                const { tokenPos, linePos, colPos } = parser;\r\n                const property = parseExpressions(parser, context, inGroup, 1, tokenPos, linePos, colPos);\r\n                consume(parser, context, 20);\r\n                parser.assignable = 1;\r\n                expr = finishNode(parser, context, start, line, column, {\r\n                    type: 'MemberExpression',\r\n                    object: expr,\r\n                    computed: true,\r\n                    property\r\n                });\r\n                if (restoreHasOptionalChaining) {\r\n                    parser.flags |= 2048;\r\n                }\r\n                break;\r\n            }\r\n            case 67174411: {\r\n                if ((parser.flags & 1024) === 1024) {\r\n                    parser.flags = (parser.flags | 1024) ^ 1024;\r\n                    return expr;\r\n                }\r\n                let restoreHasOptionalChaining = false;\r\n                if ((parser.flags & 2048) === 2048) {\r\n                    restoreHasOptionalChaining = true;\r\n                    parser.flags = (parser.flags | 2048) ^ 2048;\r\n                }\r\n                const args = parseArguments(parser, context, inGroup);\r\n                parser.assignable = 2;\r\n                expr = finishNode(parser, context, start, line, column, {\r\n                    type: 'CallExpression',\r\n                    callee: expr,\r\n                    arguments: args\r\n                });\r\n                if (restoreHasOptionalChaining) {\r\n                    parser.flags |= 2048;\r\n                }\r\n                break;\r\n            }\r\n            case 67108991: {\r\n                nextToken(parser, context);\r\n                parser.flags |= 2048;\r\n                parser.assignable = 2;\r\n                expr = parseOptionalChain(parser, context, expr, start, line, column);\r\n                break;\r\n            }\r\n            default:\r\n                if ((parser.flags & 2048) === 2048) {\r\n                    report(parser, 160);\r\n                }\r\n                parser.assignable = 2;\r\n                expr = finishNode(parser, context, start, line, column, {\r\n                    type: 'TaggedTemplateExpression',\r\n                    tag: expr,\r\n                    quasi: parser.token === 67174408\r\n                        ? parseTemplate(parser, context | 65536)\r\n                        : parseTemplateLiteral(parser, context, parser.tokenPos, parser.linePos, parser.colPos)\r\n                });\r\n        }\r\n        expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 1, start, line, column);\r\n    }\r\n    if (inChain === 0 && (parser.flags & 2048) === 2048) {\r\n        parser.flags = (parser.flags | 2048) ^ 2048;\r\n        expr = finishNode(parser, context, start, line, column, {\r\n            type: 'ChainExpression',\r\n            expression: expr\r\n        });\r\n    }\r\n    return expr;\r\n}\r\nfunction parseOptionalChain(parser, context, expr, start, line, column) {\r\n    let restoreHasOptionalChaining = false;\r\n    let node;\r\n    if (parser.token === 69271571 || parser.token === 67174411) {\r\n        if ((parser.flags & 2048) === 2048) {\r\n            restoreHasOptionalChaining = true;\r\n            parser.flags = (parser.flags | 2048) ^ 2048;\r\n        }\r\n    }\r\n    if (parser.token === 69271571) {\r\n        nextToken(parser, context | 32768);\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        const property = parseExpressions(parser, context, 0, 1, tokenPos, linePos, colPos);\r\n        consume(parser, context, 20);\r\n        parser.assignable = 2;\r\n        node = finishNode(parser, context, start, line, column, {\r\n            type: 'MemberExpression',\r\n            object: expr,\r\n            computed: true,\r\n            optional: true,\r\n            property\r\n        });\r\n    }\r\n    else if (parser.token === 67174411) {\r\n        const args = parseArguments(parser, context, 0);\r\n        parser.assignable = 2;\r\n        node = finishNode(parser, context, start, line, column, {\r\n            type: 'CallExpression',\r\n            callee: expr,\r\n            arguments: args,\r\n            optional: true\r\n        });\r\n    }\r\n    else {\r\n        if ((parser.token & (143360 | 4096)) < 1)\r\n            report(parser, 154);\r\n        const property = parseIdentifier(parser, context, 0);\r\n        parser.assignable = 2;\r\n        node = finishNode(parser, context, start, line, column, {\r\n            type: 'MemberExpression',\r\n            object: expr,\r\n            computed: false,\r\n            optional: true,\r\n            property\r\n        });\r\n    }\r\n    if (restoreHasOptionalChaining) {\r\n        parser.flags |= 2048;\r\n    }\r\n    return node;\r\n}\r\nfunction parsePropertyOrPrivatePropertyName(parser, context) {\r\n    if ((parser.token & (143360 | 4096)) < 1 && parser.token !== 131) {\r\n        report(parser, 154);\r\n    }\r\n    return context & 1 && parser.token === 131\r\n        ? parsePrivateIdentifier(parser, context, parser.tokenPos, parser.linePos, parser.colPos)\r\n        : parseIdentifier(parser, context, 0);\r\n}\r\nfunction parseUpdateExpressionPrefixed(parser, context, inNew, isLHS, start, line, column) {\r\n    if (inNew)\r\n        report(parser, 53);\r\n    if (!isLHS)\r\n        report(parser, 0);\r\n    const { token } = parser;\r\n    nextToken(parser, context | 32768);\r\n    const arg = parseLeftHandSideExpression(parser, context, 0, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    if (parser.assignable & 2) {\r\n        report(parser, 52);\r\n    }\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'UpdateExpression',\r\n        argument: arg,\r\n        operator: KeywordDescTable[token & 255],\r\n        prefix: true\r\n    });\r\n}\r\nfunction parsePrimaryExpression(parser, context, kind, inNew, canAssign, isPattern, inGroup, isLHS, start, line, column) {\r\n    if ((parser.token & 143360) === 143360) {\r\n        switch (parser.token) {\r\n            case 209008:\r\n                return parseAwaitExpression(parser, context, inNew, inGroup, start, line, column);\r\n            case 241773:\r\n                return parseYieldExpression(parser, context, inGroup, canAssign, start, line, column);\r\n            case 209007:\r\n                return parseAsyncExpression(parser, context, inGroup, isLHS, canAssign, isPattern, inNew, start, line, column);\r\n        }\r\n        const { token, tokenValue } = parser;\r\n        const expr = parseIdentifier(parser, context | 65536, isPattern);\r\n        if (parser.token === 10) {\r\n            if (!isLHS)\r\n                report(parser, 0);\r\n            classifyIdentifier(parser, context, token, 1);\r\n            return parseArrowFromIdentifier(parser, context, tokenValue, expr, inNew, canAssign, 0, start, line, column);\r\n        }\r\n        if (context & 16384 && token === 537079928)\r\n            report(parser, 126);\r\n        if (token === 241739) {\r\n            if (context & 1024)\r\n                report(parser, 109);\r\n            if (kind & (8 | 16))\r\n                report(parser, 97);\r\n        }\r\n        parser.assignable =\r\n            context & 1024 && (token & 537079808) === 537079808\r\n                ? 2\r\n                : 1;\r\n        return expr;\r\n    }\r\n    if ((parser.token & 134217728) === 134217728) {\r\n        return parseLiteral(parser, context);\r\n    }\r\n    switch (parser.token) {\r\n        case 33619995:\r\n        case 33619996:\r\n            return parseUpdateExpressionPrefixed(parser, context, inNew, isLHS, start, line, column);\r\n        case 16863278:\r\n        case 16842800:\r\n        case 16842801:\r\n        case 25233970:\r\n        case 25233971:\r\n        case 16863277:\r\n        case 16863279:\r\n            return parseUnaryExpression(parser, context, isLHS, start, line, column, inGroup);\r\n        case 86106:\r\n            return parseFunctionExpression(parser, context, 0, inGroup, start, line, column);\r\n        case 2162700:\r\n            return parseObjectLiteral(parser, context, canAssign ? 0 : 1, inGroup, start, line, column);\r\n        case 69271571:\r\n            return parseArrayLiteral(parser, context, canAssign ? 0 : 1, inGroup, start, line, column);\r\n        case 67174411:\r\n            return parseParenthesizedExpression(parser, context, canAssign, 1, 0, start, line, column);\r\n        case 86021:\r\n        case 86022:\r\n        case 86023:\r\n            return parseNullOrTrueOrFalseLiteral(parser, context, start, line, column);\r\n        case 86113:\r\n            return parseThisExpression(parser, context);\r\n        case 65540:\r\n            return parseRegExpLiteral(parser, context, start, line, column);\r\n        case 133:\r\n        case 86096:\r\n            return parseClassExpression(parser, context, inGroup, start, line, column);\r\n        case 86111:\r\n            return parseSuperExpression(parser, context, start, line, column);\r\n        case 67174409:\r\n            return parseTemplateLiteral(parser, context, start, line, column);\r\n        case 67174408:\r\n            return parseTemplate(parser, context);\r\n        case 86109:\r\n            return parseNewExpression(parser, context, inGroup, start, line, column);\r\n        case 134283389:\r\n            return parseBigIntLiteral(parser, context, start, line, column);\r\n        case 131:\r\n            return parsePrivateIdentifier(parser, context, start, line, column);\r\n        case 86108:\r\n            return parseImportCallOrMetaExpression(parser, context, inNew, inGroup, start, line, column);\r\n        case 8456258:\r\n            if (context & 16)\r\n                return parseJSXRootElementOrFragment(parser, context, 1, start, line, column);\r\n        default:\r\n            if (isValidIdentifier(context, parser.token))\r\n                return parseIdentifierOrArrow(parser, context, start, line, column);\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n}\r\nfunction parseImportCallOrMetaExpression(parser, context, inNew, inGroup, start, line, column) {\r\n    let expr = parseIdentifier(parser, context, 0);\r\n    if (parser.token === 67108877) {\r\n        return parseImportMetaExpression(parser, context, expr, start, line, column);\r\n    }\r\n    if (inNew)\r\n        report(parser, 137);\r\n    expr = parseImportExpression(parser, context, inGroup, start, line, column);\r\n    parser.assignable = 2;\r\n    return parseMemberOrUpdateExpression(parser, context, expr, inGroup, 0, start, line, column);\r\n}\r\nfunction parseImportMetaExpression(parser, context, meta, start, line, column) {\r\n    if ((context & 2048) === 0)\r\n        report(parser, 163);\r\n    nextToken(parser, context);\r\n    if (parser.token !== 143495 && parser.tokenValue !== 'meta')\r\n        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'MetaProperty',\r\n        meta,\r\n        property: parseIdentifier(parser, context, 0)\r\n    });\r\n}\r\nfunction parseImportExpression(parser, context, inGroup, start, line, column) {\r\n    consume(parser, context | 32768, 67174411);\r\n    if (parser.token === 14)\r\n        report(parser, 138);\r\n    const source = parseExpression(parser, context, 1, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 16);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ImportExpression',\r\n        source\r\n    });\r\n}\r\nfunction parseBigIntLiteral(parser, context, start, line, column) {\r\n    const { tokenRaw, tokenValue } = parser;\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, context & 512\r\n        ? {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            bigint: tokenRaw.slice(0, -1),\r\n            raw: tokenRaw\r\n        }\r\n        : {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            bigint: tokenRaw.slice(0, -1)\r\n        });\r\n}\r\nfunction parseTemplateLiteral(parser, context, start, line, column) {\r\n    parser.assignable = 2;\r\n    const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n    consume(parser, context, 67174409);\r\n    const quasis = [parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenPos, linePos, colPos, true)];\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'TemplateLiteral',\r\n        expressions: [],\r\n        quasis\r\n    });\r\n}\r\nfunction parseTemplate(parser, context) {\r\n    context = (context | 134217728) ^ 134217728;\r\n    const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n    consume(parser, context | 32768, 67174408);\r\n    const quasis = [\r\n        parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenPos, linePos, colPos, false)\r\n    ];\r\n    const expressions = [parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos)];\r\n    if (parser.token !== 1074790415)\r\n        report(parser, 80);\r\n    while ((parser.token = scanTemplateTail(parser, context)) !== 67174409) {\r\n        const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n        consume(parser, context | 32768, 67174408);\r\n        quasis.push(parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenPos, linePos, colPos, false));\r\n        expressions.push(parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos));\r\n        if (parser.token !== 1074790415)\r\n            report(parser, 80);\r\n    }\r\n    {\r\n        const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n        consume(parser, context, 67174409);\r\n        quasis.push(parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenPos, linePos, colPos, true));\r\n    }\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'TemplateLiteral',\r\n        expressions,\r\n        quasis\r\n    });\r\n}\r\nfunction parseTemplateElement(parser, context, cooked, raw, start, line, col, tail) {\r\n    const node = finishNode(parser, context, start, line, col, {\r\n        type: 'TemplateElement',\r\n        value: {\r\n            cooked,\r\n            raw\r\n        },\r\n        tail\r\n    });\r\n    const tailSize = tail ? 1 : 2;\r\n    if (context & 2) {\r\n        node.start += 1;\r\n        node.range[0] += 1;\r\n        node.end -= tailSize;\r\n        node.range[1] -= tailSize;\r\n    }\r\n    if (context & 4) {\r\n        node.loc.start.column += 1;\r\n        node.loc.end.column -= tailSize;\r\n    }\r\n    return node;\r\n}\r\nfunction parseSpreadElement(parser, context, start, line, column) {\r\n    context = (context | 134217728) ^ 134217728;\r\n    consume(parser, context | 32768, 14);\r\n    const argument = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    parser.assignable = 1;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'SpreadElement',\r\n        argument\r\n    });\r\n}\r\nfunction parseArguments(parser, context, inGroup) {\r\n    nextToken(parser, context | 32768);\r\n    const args = [];\r\n    if (parser.token === 16) {\r\n        nextToken(parser, context);\r\n        return args;\r\n    }\r\n    while (parser.token !== 16) {\r\n        if (parser.token === 14) {\r\n            args.push(parseSpreadElement(parser, context, parser.tokenPos, parser.linePos, parser.colPos));\r\n        }\r\n        else {\r\n            args.push(parseExpression(parser, context, 1, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos));\r\n        }\r\n        if (parser.token !== 18)\r\n            break;\r\n        nextToken(parser, context | 32768);\r\n        if (parser.token === 16)\r\n            break;\r\n    }\r\n    consume(parser, context, 16);\r\n    return args;\r\n}\r\nfunction parseIdentifier(parser, context, isPattern) {\r\n    const { tokenValue, tokenPos, linePos, colPos } = parser;\r\n    nextToken(parser, context);\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, context & 268435456\r\n        ? {\r\n            type: 'Identifier',\r\n            name: tokenValue,\r\n            pattern: isPattern === 1\r\n        }\r\n        : {\r\n            type: 'Identifier',\r\n            name: tokenValue\r\n        });\r\n}\r\nfunction parseLiteral(parser, context) {\r\n    const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n    if (parser.token === 134283389) {\r\n        return parseBigIntLiteral(parser, context, tokenPos, linePos, colPos);\r\n    }\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, context & 512\r\n        ? {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            raw: tokenRaw\r\n        }\r\n        : {\r\n            type: 'Literal',\r\n            value: tokenValue\r\n        });\r\n}\r\nfunction parseNullOrTrueOrFalseLiteral(parser, context, start, line, column) {\r\n    const raw = KeywordDescTable[parser.token & 255];\r\n    const value = parser.token === 86023 ? null : raw === 'true';\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, context & 512\r\n        ? {\r\n            type: 'Literal',\r\n            value,\r\n            raw\r\n        }\r\n        : {\r\n            type: 'Literal',\r\n            value\r\n        });\r\n}\r\nfunction parseThisExpression(parser, context) {\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'ThisExpression'\r\n    });\r\n}\r\nfunction parseFunctionDeclaration(parser, context, scope, origin, allowGen, flags, isAsync, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const isGenerator = allowGen ? optionalBit(parser, context, 8457014) : 0;\r\n    let id = null;\r\n    let firstRestricted;\r\n    let functionScope = scope ? createScope() : void 0;\r\n    if (parser.token === 67174411) {\r\n        if ((flags & 1) < 1)\r\n            report(parser, 37, 'Function');\r\n    }\r\n    else {\r\n        const kind = origin & 4 && ((context & 8192) < 1 || (context & 2048) < 1)\r\n            ? 4\r\n            : 64;\r\n        validateFunctionName(parser, context | ((context & 3072) << 11), parser.token);\r\n        if (scope) {\r\n            if (kind & 4) {\r\n                addVarName(parser, context, scope, parser.tokenValue, kind);\r\n            }\r\n            else {\r\n                addBlockName(parser, context, scope, parser.tokenValue, kind, origin);\r\n            }\r\n            functionScope = addChildScope(functionScope, 256);\r\n            if (flags) {\r\n                if (flags & 2) {\r\n                    declareUnboundVariable(parser, parser.tokenValue);\r\n                }\r\n            }\r\n        }\r\n        firstRestricted = parser.token;\r\n        if (parser.token & 143360) {\r\n            id = parseIdentifier(parser, context, 0);\r\n        }\r\n        else {\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n        }\r\n    }\r\n    context =\r\n        ((context | 32243712) ^ 32243712) |\r\n            67108864 |\r\n            ((isAsync * 2 + isGenerator) << 21) |\r\n            (isGenerator ? 0 : 1073741824);\r\n    if (scope)\r\n        functionScope = addChildScope(functionScope, 512);\r\n    const params = parseFormalParametersOrFormalList(parser, context | 8388608, functionScope, 0, 1);\r\n    const body = parseFunctionBody(parser, (context | 8192 | 4096 | 131072) ^\r\n        (8192 | 4096 | 131072), scope ? addChildScope(functionScope, 128) : functionScope, 8, firstRestricted, scope ? functionScope.scopeError : void 0);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'FunctionDeclaration',\r\n        id,\r\n        params,\r\n        body,\r\n        async: isAsync === 1,\r\n        generator: isGenerator === 1\r\n    });\r\n}\r\nfunction parseFunctionExpression(parser, context, isAsync, inGroup, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const isGenerator = optionalBit(parser, context, 8457014);\r\n    const generatorAndAsyncFlags = (isAsync * 2 + isGenerator) << 21;\r\n    let id = null;\r\n    let firstRestricted;\r\n    let scope = context & 64 ? createScope() : void 0;\r\n    if ((parser.token & (143360 | 4096 | 36864)) > 0) {\r\n        validateFunctionName(parser, ((context | 0x1ec0000) ^ 0x1ec0000) | generatorAndAsyncFlags, parser.token);\r\n        if (scope)\r\n            scope = addChildScope(scope, 256);\r\n        firstRestricted = parser.token;\r\n        id = parseIdentifier(parser, context, 0);\r\n    }\r\n    context =\r\n        ((context | 32243712) ^ 32243712) |\r\n            67108864 |\r\n            generatorAndAsyncFlags |\r\n            (isGenerator ? 0 : 1073741824);\r\n    if (scope)\r\n        scope = addChildScope(scope, 512);\r\n    const params = parseFormalParametersOrFormalList(parser, context | 8388608, scope, inGroup, 1);\r\n    const body = parseFunctionBody(parser, context & ~(0x8001000 | 8192 | 4096 | 131072 | 16384), scope ? addChildScope(scope, 128) : scope, 0, firstRestricted, void 0);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'FunctionExpression',\r\n        id,\r\n        params,\r\n        body,\r\n        async: isAsync === 1,\r\n        generator: isGenerator === 1\r\n    });\r\n}\r\nfunction parseArrayLiteral(parser, context, skipInitializer, inGroup, start, line, column) {\r\n    const expr = parseArrayExpressionOrPattern(parser, context, void 0, skipInitializer, inGroup, 0, 2, 0, start, line, column);\r\n    if (context & 256 && parser.destructible & 64) {\r\n        report(parser, 60);\r\n    }\r\n    if (parser.destructible & 8) {\r\n        report(parser, 59);\r\n    }\r\n    return expr;\r\n}\r\nfunction parseArrayExpressionOrPattern(parser, context, scope, skipInitializer, inGroup, isPattern, kind, origin, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const elements = [];\r\n    let destructible = 0;\r\n    context = (context | 134217728) ^ 134217728;\r\n    while (parser.token !== 20) {\r\n        if (consumeOpt(parser, context | 32768, 18)) {\r\n            elements.push(null);\r\n        }\r\n        else {\r\n            let left;\r\n            const { token, tokenPos, linePos, colPos, tokenValue } = parser;\r\n            if (token & 143360) {\r\n                left = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n                if (parser.token === 1077936157) {\r\n                    if (parser.assignable & 2)\r\n                        report(parser, 24);\r\n                    nextToken(parser, context | 32768);\r\n                    if (scope)\r\n                        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n                    const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                    left = finishNode(parser, context, tokenPos, linePos, colPos, isPattern\r\n                        ? {\r\n                            type: 'AssignmentPattern',\r\n                            left,\r\n                            right\r\n                        }\r\n                        : {\r\n                            type: 'AssignmentExpression',\r\n                            operator: '=',\r\n                            left,\r\n                            right\r\n                        });\r\n                    destructible |=\r\n                        parser.destructible & 256\r\n                            ? 256\r\n                            : 0 | (parser.destructible & 128)\r\n                                ? 128\r\n                                : 0;\r\n                }\r\n                else if (parser.token === 18 || parser.token === 20) {\r\n                    if (parser.assignable & 2) {\r\n                        destructible |= 16;\r\n                    }\r\n                    else if (scope) {\r\n                        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n                    }\r\n                    destructible |=\r\n                        parser.destructible & 256\r\n                            ? 256\r\n                            : 0 | (parser.destructible & 128)\r\n                                ? 128\r\n                                : 0;\r\n                }\r\n                else {\r\n                    destructible |=\r\n                        kind & 1\r\n                            ? 32\r\n                            : (kind & 2) < 1\r\n                                ? 16\r\n                                : 0;\r\n                    left = parseMemberOrUpdateExpression(parser, context, left, inGroup, 0, tokenPos, linePos, colPos);\r\n                    if (parser.token !== 18 && parser.token !== 20) {\r\n                        if (parser.token !== 1077936157)\r\n                            destructible |= 16;\r\n                        left = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, left);\r\n                    }\r\n                    else if (parser.token !== 1077936157) {\r\n                        destructible |=\r\n                            parser.assignable & 2\r\n                                ? 16\r\n                                : 32;\r\n                    }\r\n                }\r\n            }\r\n            else if (token & 2097152) {\r\n                left =\r\n                    parser.token === 2162700\r\n                        ? parseObjectLiteralOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                        : parseArrayExpressionOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n                destructible |= parser.destructible;\r\n                parser.assignable =\r\n                    parser.destructible & 16\r\n                        ? 2\r\n                        : 1;\r\n                if (parser.token === 18 || parser.token === 20) {\r\n                    if (parser.assignable & 2) {\r\n                        destructible |= 16;\r\n                    }\r\n                }\r\n                else if (parser.destructible & 8) {\r\n                    report(parser, 68);\r\n                }\r\n                else {\r\n                    left = parseMemberOrUpdateExpression(parser, context, left, inGroup, 0, tokenPos, linePos, colPos);\r\n                    destructible = parser.assignable & 2 ? 16 : 0;\r\n                    if (parser.token !== 18 && parser.token !== 20) {\r\n                        left = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, left);\r\n                    }\r\n                    else if (parser.token !== 1077936157) {\r\n                        destructible |=\r\n                            parser.assignable & 2\r\n                                ? 16\r\n                                : 32;\r\n                    }\r\n                }\r\n            }\r\n            else if (token === 14) {\r\n                left = parseSpreadOrRestElement(parser, context, scope, 20, kind, origin, 0, inGroup, isPattern, tokenPos, linePos, colPos);\r\n                destructible |= parser.destructible;\r\n                if (parser.token !== 18 && parser.token !== 20)\r\n                    report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n            }\r\n            else {\r\n                left = parseLeftHandSideExpression(parser, context, 1, 0, 1, tokenPos, linePos, colPos);\r\n                if (parser.token !== 18 && parser.token !== 20) {\r\n                    left = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, left);\r\n                    if ((kind & (2 | 1)) < 1 && token === 67174411)\r\n                        destructible |= 16;\r\n                }\r\n                else if (parser.assignable & 2) {\r\n                    destructible |= 16;\r\n                }\r\n                else if (token === 67174411) {\r\n                    destructible |=\r\n                        parser.assignable & 1 && kind & (2 | 1)\r\n                            ? 32\r\n                            : 16;\r\n                }\r\n            }\r\n            elements.push(left);\r\n            if (consumeOpt(parser, context | 32768, 18)) {\r\n                if (parser.token === 20)\r\n                    break;\r\n            }\r\n            else\r\n                break;\r\n        }\r\n    }\r\n    consume(parser, context, 20);\r\n    const node = finishNode(parser, context, start, line, column, {\r\n        type: isPattern ? 'ArrayPattern' : 'ArrayExpression',\r\n        elements\r\n    });\r\n    if (!skipInitializer && parser.token & 4194304) {\r\n        return parseArrayOrObjectAssignmentPattern(parser, context, destructible, inGroup, isPattern, start, line, column, node);\r\n    }\r\n    parser.destructible = destructible;\r\n    return node;\r\n}\r\nfunction parseArrayOrObjectAssignmentPattern(parser, context, destructible, inGroup, isPattern, start, line, column, node) {\r\n    if (parser.token !== 1077936157)\r\n        report(parser, 24);\r\n    nextToken(parser, context | 32768);\r\n    if (destructible & 16)\r\n        report(parser, 24);\r\n    if (!isPattern)\r\n        reinterpretToPattern(parser, node);\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    const right = parseExpression(parser, context, 1, 1, inGroup, tokenPos, linePos, colPos);\r\n    parser.destructible =\r\n        ((destructible | 64 | 8) ^\r\n            (8 | 64)) |\r\n            (parser.destructible & 128 ? 128 : 0) |\r\n            (parser.destructible & 256 ? 256 : 0);\r\n    return finishNode(parser, context, start, line, column, isPattern\r\n        ? {\r\n            type: 'AssignmentPattern',\r\n            left: node,\r\n            right\r\n        }\r\n        : {\r\n            type: 'AssignmentExpression',\r\n            left: node,\r\n            operator: '=',\r\n            right\r\n        });\r\n}\r\nfunction parseSpreadOrRestElement(parser, context, scope, closingToken, kind, origin, isAsync, inGroup, isPattern, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    let argument = null;\r\n    let destructible = 0;\r\n    let { token, tokenValue, tokenPos, linePos, colPos } = parser;\r\n    if (token & (4096 | 143360)) {\r\n        parser.assignable = 1;\r\n        argument = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n        token = parser.token;\r\n        argument = parseMemberOrUpdateExpression(parser, context, argument, inGroup, 0, tokenPos, linePos, colPos);\r\n        if (parser.token !== 18 && parser.token !== closingToken) {\r\n            if (parser.assignable & 2 && parser.token === 1077936157)\r\n                report(parser, 68);\r\n            destructible |= 16;\r\n            argument = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, argument);\r\n        }\r\n        if (parser.assignable & 2) {\r\n            destructible |= 16;\r\n        }\r\n        else if (token === closingToken || token === 18) {\r\n            if (scope)\r\n                addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n        }\r\n        else {\r\n            destructible |= 32;\r\n        }\r\n        destructible |= parser.destructible & 128 ? 128 : 0;\r\n    }\r\n    else if (token === closingToken) {\r\n        report(parser, 39);\r\n    }\r\n    else if (token & 2097152) {\r\n        argument =\r\n            parser.token === 2162700\r\n                ? parseObjectLiteralOrPattern(parser, context, scope, 1, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                : parseArrayExpressionOrPattern(parser, context, scope, 1, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n        token = parser.token;\r\n        if (token !== 1077936157 && token !== closingToken && token !== 18) {\r\n            if (parser.destructible & 8)\r\n                report(parser, 68);\r\n            argument = parseMemberOrUpdateExpression(parser, context, argument, inGroup, 0, tokenPos, linePos, colPos);\r\n            destructible |= parser.assignable & 2 ? 16 : 0;\r\n            if ((parser.token & 4194304) === 4194304) {\r\n                if (parser.token !== 1077936157)\r\n                    destructible |= 16;\r\n                argument = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, argument);\r\n            }\r\n            else {\r\n                if ((parser.token & 8454144) === 8454144) {\r\n                    argument = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, argument);\r\n                }\r\n                if (consumeOpt(parser, context | 32768, 22)) {\r\n                    argument = parseConditionalExpression(parser, context, argument, tokenPos, linePos, colPos);\r\n                }\r\n                destructible |=\r\n                    parser.assignable & 2\r\n                        ? 16\r\n                        : 32;\r\n            }\r\n        }\r\n        else {\r\n            destructible |=\r\n                closingToken === 1074790415 && token !== 1077936157\r\n                    ? 16\r\n                    : parser.destructible;\r\n        }\r\n    }\r\n    else {\r\n        destructible |= 32;\r\n        argument = parseLeftHandSideExpression(parser, context, 1, inGroup, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n        const { token, tokenPos, linePos, colPos } = parser;\r\n        if (token === 1077936157 && token !== closingToken && token !== 18) {\r\n            if (parser.assignable & 2)\r\n                report(parser, 24);\r\n            argument = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, argument);\r\n            destructible |= 16;\r\n        }\r\n        else {\r\n            if (token === 18) {\r\n                destructible |= 16;\r\n            }\r\n            else if (token !== closingToken) {\r\n                argument = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, argument);\r\n            }\r\n            destructible |=\r\n                parser.assignable & 1 ? 32 : 16;\r\n        }\r\n        parser.destructible = destructible;\r\n        if (parser.token !== closingToken && parser.token !== 18)\r\n            report(parser, 155);\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: isPattern ? 'RestElement' : 'SpreadElement',\r\n            argument: argument\r\n        });\r\n    }\r\n    if (parser.token !== closingToken) {\r\n        if (kind & 1)\r\n            destructible |= isAsync ? 16 : 32;\r\n        if (consumeOpt(parser, context | 32768, 1077936157)) {\r\n            if (destructible & 16)\r\n                report(parser, 24);\r\n            reinterpretToPattern(parser, argument);\r\n            const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n            argument = finishNode(parser, context, tokenPos, linePos, colPos, isPattern\r\n                ? {\r\n                    type: 'AssignmentPattern',\r\n                    left: argument,\r\n                    right\r\n                }\r\n                : {\r\n                    type: 'AssignmentExpression',\r\n                    left: argument,\r\n                    operator: '=',\r\n                    right\r\n                });\r\n            destructible = 16;\r\n        }\r\n        else {\r\n            destructible |= 16;\r\n        }\r\n    }\r\n    parser.destructible = destructible;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: isPattern ? 'RestElement' : 'SpreadElement',\r\n        argument: argument\r\n    });\r\n}\r\nfunction parseMethodDefinition(parser, context, kind, inGroup, start, line, column) {\r\n    const modifierFlags = (kind & 64) < 1 ? 31981568 : 14680064;\r\n    context =\r\n        ((context | modifierFlags) ^ modifierFlags) |\r\n            ((kind & 88) << 18) |\r\n            100925440;\r\n    let scope = context & 64 ? addChildScope(createScope(), 512) : void 0;\r\n    const params = parseMethodFormals(parser, context | 8388608, scope, kind, 1, inGroup);\r\n    if (scope)\r\n        scope = addChildScope(scope, 128);\r\n    const body = parseFunctionBody(parser, context & ~(0x8001000 | 8192), scope, 0, void 0, void 0);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'FunctionExpression',\r\n        params,\r\n        body,\r\n        async: (kind & 16) > 0,\r\n        generator: (kind & 8) > 0,\r\n        id: null\r\n    });\r\n}\r\nfunction parseObjectLiteral(parser, context, skipInitializer, inGroup, start, line, column) {\r\n    const expr = parseObjectLiteralOrPattern(parser, context, void 0, skipInitializer, inGroup, 0, 2, 0, start, line, column);\r\n    if (context & 256 && parser.destructible & 64) {\r\n        report(parser, 60);\r\n    }\r\n    if (parser.destructible & 8) {\r\n        report(parser, 59);\r\n    }\r\n    return expr;\r\n}\r\nfunction parseObjectLiteralOrPattern(parser, context, scope, skipInitializer, inGroup, isPattern, kind, origin, start, line, column) {\r\n    nextToken(parser, context);\r\n    const properties = [];\r\n    let destructible = 0;\r\n    let prototypeCount = 0;\r\n    context = (context | 134217728) ^ 134217728;\r\n    while (parser.token !== 1074790415) {\r\n        const { token, tokenValue, linePos, colPos, tokenPos } = parser;\r\n        if (token === 14) {\r\n            properties.push(parseSpreadOrRestElement(parser, context, scope, 1074790415, kind, origin, 0, inGroup, isPattern, tokenPos, linePos, colPos));\r\n        }\r\n        else {\r\n            let state = 0;\r\n            let key = null;\r\n            let value;\r\n            const t = parser.token;\r\n            if (parser.token & (143360 | 4096) || parser.token === 121) {\r\n                key = parseIdentifier(parser, context, 0);\r\n                if (parser.token === 18 || parser.token === 1074790415 || parser.token === 1077936157) {\r\n                    state |= 4;\r\n                    if (context & 1024 && (token & 537079808) === 537079808) {\r\n                        destructible |= 16;\r\n                    }\r\n                    else {\r\n                        validateBindingIdentifier(parser, context, kind, token, 0);\r\n                    }\r\n                    if (scope)\r\n                        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n                    if (consumeOpt(parser, context | 32768, 1077936157)) {\r\n                        destructible |= 8;\r\n                        const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                        destructible |=\r\n                            parser.destructible & 256\r\n                                ? 256\r\n                                : 0 | (parser.destructible & 128)\r\n                                    ? 128\r\n                                    : 0;\r\n                        value = finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                            type: 'AssignmentPattern',\r\n                            left: context & -2147483648 ? Object.assign({}, key) : key,\r\n                            right\r\n                        });\r\n                    }\r\n                    else {\r\n                        destructible |=\r\n                            (token === 209008 ? 128 : 0) |\r\n                                (token === 121 ? 16 : 0);\r\n                        value = context & -2147483648 ? Object.assign({}, key) : key;\r\n                    }\r\n                }\r\n                else if (consumeOpt(parser, context | 32768, 21)) {\r\n                    const { tokenPos, linePos, colPos } = parser;\r\n                    if (tokenValue === '__proto__')\r\n                        prototypeCount++;\r\n                    if (parser.token & 143360) {\r\n                        const tokenAfterColon = parser.token;\r\n                        const valueAfterColon = parser.tokenValue;\r\n                        destructible |= t === 121 ? 16 : 0;\r\n                        value = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n                        const { token } = parser;\r\n                        value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (token === 1077936157 || token === 1074790415 || token === 18) {\r\n                                destructible |= parser.destructible & 128 ? 128 : 0;\r\n                                if (parser.assignable & 2) {\r\n                                    destructible |= 16;\r\n                                }\r\n                                else if (scope && (tokenAfterColon & 143360) === 143360) {\r\n                                    addVarOrBlock(parser, context, scope, valueAfterColon, kind, origin);\r\n                                }\r\n                            }\r\n                            else {\r\n                                destructible |=\r\n                                    parser.assignable & 1\r\n                                        ? 32\r\n                                        : 16;\r\n                            }\r\n                        }\r\n                        else if ((parser.token & 4194304) === 4194304) {\r\n                            if (parser.assignable & 2) {\r\n                                destructible |= 16;\r\n                            }\r\n                            else if (token !== 1077936157) {\r\n                                destructible |= 32;\r\n                            }\r\n                            else if (scope) {\r\n                                addVarOrBlock(parser, context, scope, valueAfterColon, kind, origin);\r\n                            }\r\n                            value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                        else {\r\n                            destructible |= 16;\r\n                            if ((parser.token & 8454144) === 8454144) {\r\n                                value = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, value);\r\n                            }\r\n                            if (consumeOpt(parser, context | 32768, 22)) {\r\n                                value = parseConditionalExpression(parser, context, value, tokenPos, linePos, colPos);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if ((parser.token & 2097152) === 2097152) {\r\n                        value =\r\n                            parser.token === 69271571\r\n                                ? parseArrayExpressionOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                                : parseObjectLiteralOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n                        destructible = parser.destructible;\r\n                        parser.assignable =\r\n                            destructible & 16 ? 2 : 1;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                        }\r\n                        else if (parser.destructible & 8) {\r\n                            report(parser, 68);\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 2 ? 16 : 0;\r\n                            if ((parser.token & 4194304) === 4194304) {\r\n                                value = parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                            else {\r\n                                if ((parser.token & 8454144) === 8454144) {\r\n                                    value = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, value);\r\n                                }\r\n                                if (consumeOpt(parser, context | 32768, 22)) {\r\n                                    value = parseConditionalExpression(parser, context, value, tokenPos, linePos, colPos);\r\n                                }\r\n                                destructible |=\r\n                                    parser.assignable & 2\r\n                                        ? 16\r\n                                        : 32;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        value = parseLeftHandSideExpression(parser, context, 1, inGroup, 1, tokenPos, linePos, colPos);\r\n                        destructible |=\r\n                            parser.assignable & 1\r\n                                ? 32\r\n                                : 16;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 2 ? 16 : 0;\r\n                            if (parser.token !== 18 && token !== 1074790415) {\r\n                                if (parser.token !== 1077936157)\r\n                                    destructible |= 16;\r\n                                value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (parser.token === 69271571) {\r\n                    destructible |= 16;\r\n                    if (token === 209007)\r\n                        state |= 16;\r\n                    state |=\r\n                        (token === 12402\r\n                            ? 256\r\n                            : token === 12403\r\n                                ? 512\r\n                                : 1) | 2;\r\n                    key = parseComputedPropertyName(parser, context, inGroup);\r\n                    destructible |= parser.assignable;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else if (parser.token & (143360 | 4096)) {\r\n                    destructible |= 16;\r\n                    if (token === 121)\r\n                        report(parser, 92);\r\n                    if (token === 209007) {\r\n                        if (parser.flags & 1)\r\n                            report(parser, 128);\r\n                        state |= 16;\r\n                    }\r\n                    key = parseIdentifier(parser, context, 0);\r\n                    state |=\r\n                        token === 12402\r\n                            ? 256\r\n                            : token === 12403\r\n                                ? 512\r\n                                : 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else if (parser.token === 67174411) {\r\n                    destructible |= 16;\r\n                    state |= 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else if (parser.token === 8457014) {\r\n                    destructible |= 16;\r\n                    if (token === 12402 || token === 12403) {\r\n                        report(parser, 40);\r\n                    }\r\n                    else if (token === 143483) {\r\n                        report(parser, 92);\r\n                    }\r\n                    nextToken(parser, context);\r\n                    state |=\r\n                        8 | 1 | (token === 209007 ? 16 : 0);\r\n                    if (parser.token & 143360) {\r\n                        key = parseIdentifier(parser, context, 0);\r\n                    }\r\n                    else if ((parser.token & 134217728) === 134217728) {\r\n                        key = parseLiteral(parser, context);\r\n                    }\r\n                    else if (parser.token === 69271571) {\r\n                        state |= 2;\r\n                        key = parseComputedPropertyName(parser, context, inGroup);\r\n                        destructible |= parser.assignable;\r\n                    }\r\n                    else {\r\n                        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n                    }\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else if ((parser.token & 134217728) === 134217728) {\r\n                    if (token === 209007)\r\n                        state |= 16;\r\n                    state |=\r\n                        token === 12402\r\n                            ? 256\r\n                            : token === 12403\r\n                                ? 512\r\n                                : 1;\r\n                    destructible |= 16;\r\n                    key = parseLiteral(parser, context);\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else {\r\n                    report(parser, 129);\r\n                }\r\n            }\r\n            else if ((parser.token & 134217728) === 134217728) {\r\n                key = parseLiteral(parser, context);\r\n                if (parser.token === 21) {\r\n                    consume(parser, context | 32768, 21);\r\n                    const { tokenPos, linePos, colPos } = parser;\r\n                    if (tokenValue === '__proto__')\r\n                        prototypeCount++;\r\n                    if (parser.token & 143360) {\r\n                        value = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n                        const { token, tokenValue: valueAfterColon } = parser;\r\n                        value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (token === 1077936157 || token === 1074790415 || token === 18) {\r\n                                if (parser.assignable & 2) {\r\n                                    destructible |= 16;\r\n                                }\r\n                                else if (scope) {\r\n                                    addVarOrBlock(parser, context, scope, valueAfterColon, kind, origin);\r\n                                }\r\n                            }\r\n                            else {\r\n                                destructible |=\r\n                                    parser.assignable & 1\r\n                                        ? 32\r\n                                        : 16;\r\n                            }\r\n                        }\r\n                        else if (parser.token === 1077936157) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                            value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                        else {\r\n                            destructible |= 16;\r\n                            value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                    }\r\n                    else if ((parser.token & 2097152) === 2097152) {\r\n                        value =\r\n                            parser.token === 69271571\r\n                                ? parseArrayExpressionOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                                : parseObjectLiteralOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n                        destructible = parser.destructible;\r\n                        parser.assignable =\r\n                            destructible & 16 ? 2 : 1;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2) {\r\n                                destructible |= 16;\r\n                            }\r\n                        }\r\n                        else if ((parser.destructible & 8) !== 8) {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 2 ? 16 : 0;\r\n                            if ((parser.token & 4194304) === 4194304) {\r\n                                value = parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                            else {\r\n                                if ((parser.token & 8454144) === 8454144) {\r\n                                    value = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, value);\r\n                                }\r\n                                if (consumeOpt(parser, context | 32768, 22)) {\r\n                                    value = parseConditionalExpression(parser, context, value, tokenPos, linePos, colPos);\r\n                                }\r\n                                destructible |=\r\n                                    parser.assignable & 2\r\n                                        ? 16\r\n                                        : 32;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        value = parseLeftHandSideExpression(parser, context, 1, 0, 1, tokenPos, linePos, colPos);\r\n                        destructible |=\r\n                            parser.assignable & 1\r\n                                ? 32\r\n                                : 16;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2) {\r\n                                destructible |= 16;\r\n                            }\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 1 ? 0 : 16;\r\n                            if (parser.token !== 18 && parser.token !== 1074790415) {\r\n                                if (parser.token !== 1077936157)\r\n                                    destructible |= 16;\r\n                                value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (parser.token === 67174411) {\r\n                    state |= 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                    destructible = parser.assignable | 16;\r\n                }\r\n                else {\r\n                    report(parser, 130);\r\n                }\r\n            }\r\n            else if (parser.token === 69271571) {\r\n                key = parseComputedPropertyName(parser, context, inGroup);\r\n                destructible |= parser.destructible & 256 ? 256 : 0;\r\n                state |= 2;\r\n                if (parser.token === 21) {\r\n                    nextToken(parser, context | 32768);\r\n                    const { tokenPos, linePos, colPos, tokenValue, token: tokenAfterColon } = parser;\r\n                    if (parser.token & 143360) {\r\n                        value = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n                        const { token } = parser;\r\n                        value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                        if ((parser.token & 4194304) === 4194304) {\r\n                            destructible |=\r\n                                parser.assignable & 2\r\n                                    ? 16\r\n                                    : token === 1077936157\r\n                                        ? 0\r\n                                        : 32;\r\n                            value = parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                        else if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (token === 1077936157 || token === 1074790415 || token === 18) {\r\n                                if (parser.assignable & 2) {\r\n                                    destructible |= 16;\r\n                                }\r\n                                else if (scope && (tokenAfterColon & 143360) === 143360) {\r\n                                    addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n                                }\r\n                            }\r\n                            else {\r\n                                destructible |=\r\n                                    parser.assignable & 1\r\n                                        ? 32\r\n                                        : 16;\r\n                            }\r\n                        }\r\n                        else {\r\n                            destructible |= 16;\r\n                            value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                    }\r\n                    else if ((parser.token & 2097152) === 2097152) {\r\n                        value =\r\n                            parser.token === 69271571\r\n                                ? parseArrayExpressionOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                                : parseObjectLiteralOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n                        destructible = parser.destructible;\r\n                        parser.assignable =\r\n                            destructible & 16 ? 2 : 1;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                        }\r\n                        else if (destructible & 8) {\r\n                            report(parser, 59);\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible =\r\n                                parser.assignable & 2 ? destructible | 16 : 0;\r\n                            if ((parser.token & 4194304) === 4194304) {\r\n                                if (parser.token !== 1077936157)\r\n                                    destructible |= 16;\r\n                                value = parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                            else {\r\n                                if ((parser.token & 8454144) === 8454144) {\r\n                                    value = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, value);\r\n                                }\r\n                                if (consumeOpt(parser, context | 32768, 22)) {\r\n                                    value = parseConditionalExpression(parser, context, value, tokenPos, linePos, colPos);\r\n                                }\r\n                                destructible |=\r\n                                    parser.assignable & 2\r\n                                        ? 16\r\n                                        : 32;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        value = parseLeftHandSideExpression(parser, context, 1, 0, 1, tokenPos, linePos, colPos);\r\n                        destructible |=\r\n                            parser.assignable & 1\r\n                                ? 32\r\n                                : 16;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 1 ? 0 : 16;\r\n                            if (parser.token !== 18 && parser.token !== 1074790415) {\r\n                                if (parser.token !== 1077936157)\r\n                                    destructible |= 16;\r\n                                value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (parser.token === 67174411) {\r\n                    state |= 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, linePos, colPos);\r\n                    destructible = 16;\r\n                }\r\n                else {\r\n                    report(parser, 41);\r\n                }\r\n            }\r\n            else if (token === 8457014) {\r\n                consume(parser, context | 32768, 8457014);\r\n                state |= 8;\r\n                if (parser.token & 143360) {\r\n                    const { token, line, index } = parser;\r\n                    key = parseIdentifier(parser, context, 0);\r\n                    state |= 1;\r\n                    if (parser.token === 67174411) {\r\n                        destructible |= 16;\r\n                        value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                    }\r\n                    else {\r\n                        reportMessageAt(index, line, index, token === 209007\r\n                            ? 43\r\n                            : token === 12402 || parser.token === 12403\r\n                                ? 42\r\n                                : 44, KeywordDescTable[token & 255]);\r\n                    }\r\n                }\r\n                else if ((parser.token & 134217728) === 134217728) {\r\n                    destructible |= 16;\r\n                    key = parseLiteral(parser, context);\r\n                    state |= 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, tokenPos, linePos, colPos);\r\n                }\r\n                else if (parser.token === 69271571) {\r\n                    destructible |= 16;\r\n                    state |= 2 | 1;\r\n                    key = parseComputedPropertyName(parser, context, inGroup);\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else {\r\n                    report(parser, 122);\r\n                }\r\n            }\r\n            else {\r\n                report(parser, 28, KeywordDescTable[token & 255]);\r\n            }\r\n            destructible |= parser.destructible & 128 ? 128 : 0;\r\n            parser.destructible = destructible;\r\n            properties.push(finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                type: 'Property',\r\n                key: key,\r\n                value,\r\n                kind: !(state & 768) ? 'init' : state & 512 ? 'set' : 'get',\r\n                computed: (state & 2) > 0,\r\n                method: (state & 1) > 0,\r\n                shorthand: (state & 4) > 0\r\n            }));\r\n        }\r\n        destructible |= parser.destructible;\r\n        if (parser.token !== 18)\r\n            break;\r\n        nextToken(parser, context);\r\n    }\r\n    consume(parser, context, 1074790415);\r\n    if (prototypeCount > 1)\r\n        destructible |= 64;\r\n    const node = finishNode(parser, context, start, line, column, {\r\n        type: isPattern ? 'ObjectPattern' : 'ObjectExpression',\r\n        properties\r\n    });\r\n    if (!skipInitializer && parser.token & 4194304) {\r\n        return parseArrayOrObjectAssignmentPattern(parser, context, destructible, inGroup, isPattern, start, line, column, node);\r\n    }\r\n    parser.destructible = destructible;\r\n    return node;\r\n}\r\nfunction parseMethodFormals(parser, context, scope, kind, type, inGroup) {\r\n    consume(parser, context, 67174411);\r\n    const params = [];\r\n    parser.flags = (parser.flags | 128) ^ 128;\r\n    if (parser.token === 16) {\r\n        if (kind & 512) {\r\n            report(parser, 35, 'Setter', 'one', '');\r\n        }\r\n        nextToken(parser, context);\r\n        return params;\r\n    }\r\n    if (kind & 256) {\r\n        report(parser, 35, 'Getter', 'no', 's');\r\n    }\r\n    if (kind & 512 && parser.token === 14) {\r\n        report(parser, 36);\r\n    }\r\n    context = (context | 134217728) ^ 134217728;\r\n    let setterArgs = 0;\r\n    let isSimpleParameterList = 0;\r\n    while (parser.token !== 18) {\r\n        let left = null;\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        if (parser.token & 143360) {\r\n            if ((context & 1024) < 1) {\r\n                if ((parser.token & 36864) === 36864) {\r\n                    parser.flags |= 256;\r\n                }\r\n                if ((parser.token & 537079808) === 537079808) {\r\n                    parser.flags |= 512;\r\n                }\r\n            }\r\n            left = parseAndClassifyIdentifier(parser, context, scope, kind | 1, 0, tokenPos, linePos, colPos);\r\n        }\r\n        else {\r\n            if (parser.token === 2162700) {\r\n                left = parseObjectLiteralOrPattern(parser, context, scope, 1, inGroup, 1, type, 0, tokenPos, linePos, colPos);\r\n            }\r\n            else if (parser.token === 69271571) {\r\n                left = parseArrayExpressionOrPattern(parser, context, scope, 1, inGroup, 1, type, 0, tokenPos, linePos, colPos);\r\n            }\r\n            else if (parser.token === 14) {\r\n                left = parseSpreadOrRestElement(parser, context, scope, 16, type, 0, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n            }\r\n            isSimpleParameterList = 1;\r\n            if (parser.destructible & (32 | 16))\r\n                report(parser, 47);\r\n        }\r\n        if (parser.token === 1077936157) {\r\n            nextToken(parser, context | 32768);\r\n            isSimpleParameterList = 1;\r\n            const right = parseExpression(parser, context, 1, 1, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n            left = finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                type: 'AssignmentPattern',\r\n                left: left,\r\n                right\r\n            });\r\n        }\r\n        setterArgs++;\r\n        params.push(left);\r\n        if (!consumeOpt(parser, context, 18))\r\n            break;\r\n        if (parser.token === 16) {\r\n            break;\r\n        }\r\n    }\r\n    if (kind & 512 && setterArgs !== 1) {\r\n        report(parser, 35, 'Setter', 'one', '');\r\n    }\r\n    if (scope && scope.scopeError !== void 0)\r\n        reportScopeError(scope.scopeError);\r\n    if (isSimpleParameterList)\r\n        parser.flags |= 128;\r\n    consume(parser, context, 16);\r\n    return params;\r\n}\r\nfunction parseComputedPropertyName(parser, context, inGroup) {\r\n    nextToken(parser, context | 32768);\r\n    const key = parseExpression(parser, (context | 134217728) ^ 134217728, 1, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 20);\r\n    return key;\r\n}\r\nfunction parseParenthesizedExpression(parser, context, canAssign, kind, origin, start, line, column) {\r\n    parser.flags = (parser.flags | 128) ^ 128;\r\n    const { tokenPos: piStart, linePos: plStart, colPos: pcStart } = parser;\r\n    nextToken(parser, context | 32768 | 1073741824);\r\n    const scope = context & 64 ? addChildScope(createScope(), 1024) : void 0;\r\n    context = (context | 134217728) ^ 134217728;\r\n    if (consumeOpt(parser, context, 16)) {\r\n        return parseParenthesizedArrow(parser, context, scope, [], canAssign, 0, start, line, column);\r\n    }\r\n    let destructible = 0;\r\n    parser.destructible &= ~(256 | 128);\r\n    let expr;\r\n    let expressions = [];\r\n    let isSequence = 0;\r\n    let isSimpleParameterList = 0;\r\n    const { tokenPos: iStart, linePos: lStart, colPos: cStart } = parser;\r\n    parser.assignable = 1;\r\n    while (parser.token !== 16) {\r\n        const { token, tokenPos, linePos, colPos } = parser;\r\n        if (token & (143360 | 4096)) {\r\n            if (scope)\r\n                addBlockName(parser, context, scope, parser.tokenValue, 1, 0);\r\n            expr = parsePrimaryExpression(parser, context, kind, 0, 1, 0, 1, 1, tokenPos, linePos, colPos);\r\n            if (parser.token === 16 || parser.token === 18) {\r\n                if (parser.assignable & 2) {\r\n                    destructible |= 16;\r\n                    isSimpleParameterList = 1;\r\n                }\r\n                else if ((token & 537079808) === 537079808 ||\r\n                    (token & 36864) === 36864) {\r\n                    isSimpleParameterList = 1;\r\n                }\r\n            }\r\n            else {\r\n                if (parser.token === 1077936157) {\r\n                    isSimpleParameterList = 1;\r\n                }\r\n                else {\r\n                    destructible |= 16;\r\n                }\r\n                expr = parseMemberOrUpdateExpression(parser, context, expr, 1, 0, tokenPos, linePos, colPos);\r\n                if (parser.token !== 16 && parser.token !== 18) {\r\n                    expr = parseAssignmentExpression(parser, context, 1, 0, tokenPos, linePos, colPos, expr);\r\n                }\r\n            }\r\n        }\r\n        else if ((token & 2097152) === 2097152) {\r\n            expr =\r\n                token === 2162700\r\n                    ? parseObjectLiteralOrPattern(parser, context | 1073741824, scope, 0, 1, 0, kind, origin, tokenPos, linePos, colPos)\r\n                    : parseArrayExpressionOrPattern(parser, context | 1073741824, scope, 0, 1, 0, kind, origin, tokenPos, linePos, colPos);\r\n            destructible |= parser.destructible;\r\n            isSimpleParameterList = 1;\r\n            parser.assignable = 2;\r\n            if (parser.token !== 16 && parser.token !== 18) {\r\n                if (destructible & 8)\r\n                    report(parser, 118);\r\n                expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, tokenPos, linePos, colPos);\r\n                destructible |= 16;\r\n                if (parser.token !== 16 && parser.token !== 18) {\r\n                    expr = parseAssignmentExpression(parser, context, 0, 0, tokenPos, linePos, colPos, expr);\r\n                }\r\n            }\r\n        }\r\n        else if (token === 14) {\r\n            expr = parseSpreadOrRestElement(parser, context, scope, 16, kind, origin, 0, 1, 0, tokenPos, linePos, colPos);\r\n            if (parser.destructible & 16)\r\n                report(parser, 71);\r\n            isSimpleParameterList = 1;\r\n            if (isSequence && (parser.token === 16 || parser.token === 18)) {\r\n                expressions.push(expr);\r\n            }\r\n            destructible |= 8;\r\n            break;\r\n        }\r\n        else {\r\n            destructible |= 16;\r\n            expr = parseExpression(parser, context, 1, 0, 1, tokenPos, linePos, colPos);\r\n            if (isSequence && (parser.token === 16 || parser.token === 18)) {\r\n                expressions.push(expr);\r\n            }\r\n            if (parser.token === 18) {\r\n                if (!isSequence) {\r\n                    isSequence = 1;\r\n                    expressions = [expr];\r\n                }\r\n            }\r\n            if (isSequence) {\r\n                while (consumeOpt(parser, context | 32768, 18)) {\r\n                    expressions.push(parseExpression(parser, context, 1, 0, 1, parser.tokenPos, parser.linePos, parser.colPos));\r\n                }\r\n                parser.assignable = 2;\r\n                expr = finishNode(parser, context, iStart, lStart, cStart, {\r\n                    type: 'SequenceExpression',\r\n                    expressions\r\n                });\r\n            }\r\n            consume(parser, context, 16);\r\n            parser.destructible = destructible;\r\n            return expr;\r\n        }\r\n        if (isSequence && (parser.token === 16 || parser.token === 18)) {\r\n            expressions.push(expr);\r\n        }\r\n        if (!consumeOpt(parser, context | 32768, 18))\r\n            break;\r\n        if (!isSequence) {\r\n            isSequence = 1;\r\n            expressions = [expr];\r\n        }\r\n        if (parser.token === 16) {\r\n            destructible |= 8;\r\n            break;\r\n        }\r\n    }\r\n    if (isSequence) {\r\n        parser.assignable = 2;\r\n        expr = finishNode(parser, context, iStart, lStart, cStart, {\r\n            type: 'SequenceExpression',\r\n            expressions\r\n        });\r\n    }\r\n    consume(parser, context, 16);\r\n    if (destructible & 16 && destructible & 8)\r\n        report(parser, 145);\r\n    destructible |=\r\n        parser.destructible & 256\r\n            ? 256\r\n            : 0 | (parser.destructible & 128)\r\n                ? 128\r\n                : 0;\r\n    if (parser.token === 10) {\r\n        if (destructible & (32 | 16))\r\n            report(parser, 46);\r\n        if (context & (4194304 | 2048) && destructible & 128)\r\n            report(parser, 29);\r\n        if (context & (1024 | 2097152) && destructible & 256) {\r\n            report(parser, 30);\r\n        }\r\n        if (isSimpleParameterList)\r\n            parser.flags |= 128;\r\n        return parseParenthesizedArrow(parser, context, scope, isSequence ? expressions : [expr], canAssign, 0, start, line, column);\r\n    }\r\n    else if (destructible & 8) {\r\n        report(parser, 139);\r\n    }\r\n    parser.destructible = ((parser.destructible | 256) ^ 256) | destructible;\r\n    return context & 128\r\n        ? finishNode(parser, context, piStart, plStart, pcStart, {\r\n            type: 'ParenthesizedExpression',\r\n            expression: expr\r\n        })\r\n        : expr;\r\n}\r\nfunction parseIdentifierOrArrow(parser, context, start, line, column) {\r\n    const { tokenValue } = parser;\r\n    const expr = parseIdentifier(parser, context, 0);\r\n    parser.assignable = 1;\r\n    if (parser.token === 10) {\r\n        let scope = void 0;\r\n        if (context & 64)\r\n            scope = createArrowHeadParsingScope(parser, context, tokenValue);\r\n        parser.flags = (parser.flags | 128) ^ 128;\r\n        return parseArrowFunctionExpression(parser, context, scope, [expr], 0, start, line, column);\r\n    }\r\n    return expr;\r\n}\r\nfunction parseArrowFromIdentifier(parser, context, value, expr, inNew, canAssign, isAsync, start, line, column) {\r\n    if (!canAssign)\r\n        report(parser, 54);\r\n    if (inNew)\r\n        report(parser, 48);\r\n    parser.flags &= ~128;\r\n    const scope = context & 64 ? createArrowHeadParsingScope(parser, context, value) : void 0;\r\n    return parseArrowFunctionExpression(parser, context, scope, [expr], isAsync, start, line, column);\r\n}\r\nfunction parseParenthesizedArrow(parser, context, scope, params, canAssign, isAsync, start, line, column) {\r\n    if (!canAssign)\r\n        report(parser, 54);\r\n    for (let i = 0; i < params.length; ++i)\r\n        reinterpretToPattern(parser, params[i]);\r\n    return parseArrowFunctionExpression(parser, context, scope, params, isAsync, start, line, column);\r\n}\r\nfunction parseArrowFunctionExpression(parser, context, scope, params, isAsync, start, line, column) {\r\n    if (parser.flags & 1)\r\n        report(parser, 45);\r\n    consume(parser, context | 32768, 10);\r\n    context = ((context | 15728640) ^ 15728640) | (isAsync << 22);\r\n    const expression = parser.token !== 2162700;\r\n    let body;\r\n    if (scope && scope.scopeError !== void 0) {\r\n        reportScopeError(scope.scopeError);\r\n    }\r\n    if (expression) {\r\n        body = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    else {\r\n        if (scope)\r\n            scope = addChildScope(scope, 128);\r\n        body = parseFunctionBody(parser, (context | 134221824 | 8192 | 16384) ^\r\n            (134221824 | 8192 | 16384), scope, 16, void 0, void 0);\r\n        switch (parser.token) {\r\n            case 69271571:\r\n                if ((parser.flags & 1) < 1) {\r\n                    report(parser, 112);\r\n                }\r\n                break;\r\n            case 67108877:\r\n            case 67174409:\r\n            case 22:\r\n                report(parser, 113);\r\n            case 67174411:\r\n                if ((parser.flags & 1) < 1) {\r\n                    report(parser, 112);\r\n                }\r\n                parser.flags |= 1024;\r\n                break;\r\n        }\r\n        if ((parser.token & 8454144) === 8454144 && (parser.flags & 1) < 1)\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n        if ((parser.token & 33619968) === 33619968)\r\n            report(parser, 121);\r\n    }\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ArrowFunctionExpression',\r\n        params,\r\n        body,\r\n        async: isAsync === 1,\r\n        expression\r\n    });\r\n}\r\nfunction parseFormalParametersOrFormalList(parser, context, scope, inGroup, kind) {\r\n    consume(parser, context, 67174411);\r\n    parser.flags = (parser.flags | 128) ^ 128;\r\n    const params = [];\r\n    if (consumeOpt(parser, context, 16))\r\n        return params;\r\n    context = (context | 134217728) ^ 134217728;\r\n    let isSimpleParameterList = 0;\r\n    while (parser.token !== 18) {\r\n        let left;\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        if (parser.token & 143360) {\r\n            if ((context & 1024) < 1) {\r\n                if ((parser.token & 36864) === 36864) {\r\n                    parser.flags |= 256;\r\n                }\r\n                if ((parser.token & 537079808) === 537079808) {\r\n                    parser.flags |= 512;\r\n                }\r\n            }\r\n            left = parseAndClassifyIdentifier(parser, context, scope, kind | 1, 0, tokenPos, linePos, colPos);\r\n        }\r\n        else {\r\n            if (parser.token === 2162700) {\r\n                left = parseObjectLiteralOrPattern(parser, context, scope, 1, inGroup, 1, kind, 0, tokenPos, linePos, colPos);\r\n            }\r\n            else if (parser.token === 69271571) {\r\n                left = parseArrayExpressionOrPattern(parser, context, scope, 1, inGroup, 1, kind, 0, tokenPos, linePos, colPos);\r\n            }\r\n            else if (parser.token === 14) {\r\n                left = parseSpreadOrRestElement(parser, context, scope, 16, kind, 0, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n            }\r\n            else {\r\n                report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n            }\r\n            isSimpleParameterList = 1;\r\n            if (parser.destructible & (32 | 16)) {\r\n                report(parser, 47);\r\n            }\r\n        }\r\n        if (parser.token === 1077936157) {\r\n            nextToken(parser, context | 32768);\r\n            isSimpleParameterList = 1;\r\n            const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n            left = finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                type: 'AssignmentPattern',\r\n                left,\r\n                right\r\n            });\r\n        }\r\n        params.push(left);\r\n        if (!consumeOpt(parser, context, 18))\r\n            break;\r\n        if (parser.token === 16) {\r\n            break;\r\n        }\r\n    }\r\n    if (isSimpleParameterList)\r\n        parser.flags |= 128;\r\n    if (scope && (isSimpleParameterList || context & 1024) && scope.scopeError !== void 0) {\r\n        reportScopeError(scope.scopeError);\r\n    }\r\n    consume(parser, context, 16);\r\n    return params;\r\n}\r\nfunction parseMembeExpressionNoCall(parser, context, expr, inGroup, start, line, column) {\r\n    const { token } = parser;\r\n    if (token & 67108864) {\r\n        if (token === 67108877) {\r\n            nextToken(parser, context | 1073741824);\r\n            parser.assignable = 1;\r\n            const property = parsePropertyOrPrivatePropertyName(parser, context);\r\n            return parseMembeExpressionNoCall(parser, context, finishNode(parser, context, start, line, column, {\r\n                type: 'MemberExpression',\r\n                object: expr,\r\n                computed: false,\r\n                property\r\n            }), 0, start, line, column);\r\n        }\r\n        else if (token === 69271571) {\r\n            nextToken(parser, context | 32768);\r\n            const { tokenPos, linePos, colPos } = parser;\r\n            const property = parseExpressions(parser, context, inGroup, 1, tokenPos, linePos, colPos);\r\n            consume(parser, context, 20);\r\n            parser.assignable = 1;\r\n            return parseMembeExpressionNoCall(parser, context, finishNode(parser, context, start, line, column, {\r\n                type: 'MemberExpression',\r\n                object: expr,\r\n                computed: true,\r\n                property\r\n            }), 0, start, line, column);\r\n        }\r\n        else if (token === 67174408 || token === 67174409) {\r\n            parser.assignable = 2;\r\n            return parseMembeExpressionNoCall(parser, context, finishNode(parser, context, start, line, column, {\r\n                type: 'TaggedTemplateExpression',\r\n                tag: expr,\r\n                quasi: parser.token === 67174408\r\n                    ? parseTemplate(parser, context | 65536)\r\n                    : parseTemplateLiteral(parser, context, parser.tokenPos, parser.linePos, parser.colPos)\r\n            }), 0, start, line, column);\r\n        }\r\n    }\r\n    return expr;\r\n}\r\nfunction parseNewExpression(parser, context, inGroup, start, line, column) {\r\n    const id = parseIdentifier(parser, context | 32768, 0);\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    if (consumeOpt(parser, context, 67108877)) {\r\n        if (context & 67108864 && parser.token === 143494) {\r\n            parser.assignable = 2;\r\n            return parseMetaProperty(parser, context, id, start, line, column);\r\n        }\r\n        report(parser, 91);\r\n    }\r\n    parser.assignable = 2;\r\n    if ((parser.token & 16842752) === 16842752) {\r\n        report(parser, 62, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    const expr = parsePrimaryExpression(parser, context, 2, 1, 0, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n    context = (context | 134217728) ^ 134217728;\r\n    if (parser.token === 67108991)\r\n        report(parser, 162);\r\n    const callee = parseMembeExpressionNoCall(parser, context, expr, inGroup, tokenPos, linePos, colPos);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'NewExpression',\r\n        callee,\r\n        arguments: parser.token === 67174411 ? parseArguments(parser, context, inGroup) : []\r\n    });\r\n}\r\nfunction parseMetaProperty(parser, context, meta, start, line, column) {\r\n    const property = parseIdentifier(parser, context, 0);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'MetaProperty',\r\n        meta,\r\n        property\r\n    });\r\n}\r\nfunction parseAsyncArrowAfterIdent(parser, context, canAssign, start, line, column) {\r\n    if (parser.token === 209008)\r\n        report(parser, 29);\r\n    if (context & (1024 | 2097152) && parser.token === 241773) {\r\n        report(parser, 30);\r\n    }\r\n    if ((parser.token & 537079808) === 537079808) {\r\n        parser.flags |= 512;\r\n    }\r\n    return parseArrowFromIdentifier(parser, context, parser.tokenValue, parseIdentifier(parser, context, 0), 0, canAssign, 1, start, line, column);\r\n}\r\nfunction parseAsyncArrowOrCallExpression(parser, context, callee, canAssign, kind, origin, flags, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const scope = context & 64 ? addChildScope(createScope(), 1024) : void 0;\r\n    context = (context | 134217728) ^ 134217728;\r\n    if (consumeOpt(parser, context, 16)) {\r\n        if (parser.token === 10) {\r\n            if (flags & 1)\r\n                report(parser, 45);\r\n            return parseParenthesizedArrow(parser, context, scope, [], canAssign, 1, start, line, column);\r\n        }\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'CallExpression',\r\n            callee,\r\n            arguments: []\r\n        });\r\n    }\r\n    let destructible = 0;\r\n    let expr = null;\r\n    let isSimpleParameterList = 0;\r\n    parser.destructible =\r\n        (parser.destructible | 256 | 128) ^\r\n            (256 | 128);\r\n    const params = [];\r\n    while (parser.token !== 16) {\r\n        const { token, tokenPos, linePos, colPos } = parser;\r\n        if (token & (143360 | 4096)) {\r\n            if (scope)\r\n                addBlockName(parser, context, scope, parser.tokenValue, kind, 0);\r\n            expr = parsePrimaryExpression(parser, context, kind, 0, 1, 0, 1, 1, tokenPos, linePos, colPos);\r\n            if (parser.token === 16 || parser.token === 18) {\r\n                if (parser.assignable & 2) {\r\n                    destructible |= 16;\r\n                    isSimpleParameterList = 1;\r\n                }\r\n                else if ((token & 537079808) === 537079808) {\r\n                    parser.flags |= 512;\r\n                }\r\n                else if ((token & 36864) === 36864) {\r\n                    parser.flags |= 256;\r\n                }\r\n            }\r\n            else {\r\n                if (parser.token === 1077936157) {\r\n                    isSimpleParameterList = 1;\r\n                }\r\n                else {\r\n                    destructible |= 16;\r\n                }\r\n                expr = parseMemberOrUpdateExpression(parser, context, expr, 1, 0, tokenPos, linePos, colPos);\r\n                if (parser.token !== 16 && parser.token !== 18) {\r\n                    expr = parseAssignmentExpression(parser, context, 1, 0, tokenPos, linePos, colPos, expr);\r\n                }\r\n            }\r\n        }\r\n        else if (token & 2097152) {\r\n            expr =\r\n                token === 2162700\r\n                    ? parseObjectLiteralOrPattern(parser, context, scope, 0, 1, 0, kind, origin, tokenPos, linePos, colPos)\r\n                    : parseArrayExpressionOrPattern(parser, context, scope, 0, 1, 0, kind, origin, tokenPos, linePos, colPos);\r\n            destructible |= parser.destructible;\r\n            isSimpleParameterList = 1;\r\n            if (parser.token !== 16 && parser.token !== 18) {\r\n                if (destructible & 8)\r\n                    report(parser, 118);\r\n                expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, tokenPos, linePos, colPos);\r\n                destructible |= 16;\r\n                if ((parser.token & 8454144) === 8454144) {\r\n                    expr = parseBinaryExpression(parser, context, 1, start, line, column, 4, token, expr);\r\n                }\r\n                if (consumeOpt(parser, context | 32768, 22)) {\r\n                    expr = parseConditionalExpression(parser, context, expr, start, line, column);\r\n                }\r\n            }\r\n        }\r\n        else if (token === 14) {\r\n            expr = parseSpreadOrRestElement(parser, context, scope, 16, kind, origin, 1, 1, 0, tokenPos, linePos, colPos);\r\n            destructible |= (parser.token === 16 ? 0 : 16) | parser.destructible;\r\n            isSimpleParameterList = 1;\r\n        }\r\n        else {\r\n            expr = parseExpression(parser, context, 1, 0, 0, tokenPos, linePos, colPos);\r\n            destructible = parser.assignable;\r\n            params.push(expr);\r\n            while (consumeOpt(parser, context | 32768, 18)) {\r\n                params.push(parseExpression(parser, context, 1, 0, 0, tokenPos, linePos, colPos));\r\n            }\r\n            destructible |= parser.assignable;\r\n            consume(parser, context, 16);\r\n            parser.destructible = destructible | 16;\r\n            parser.assignable = 2;\r\n            return finishNode(parser, context, start, line, column, {\r\n                type: 'CallExpression',\r\n                callee,\r\n                arguments: params\r\n            });\r\n        }\r\n        params.push(expr);\r\n        if (!consumeOpt(parser, context | 32768, 18))\r\n            break;\r\n    }\r\n    consume(parser, context, 16);\r\n    destructible |=\r\n        parser.destructible & 256\r\n            ? 256\r\n            : 0 | (parser.destructible & 128)\r\n                ? 128\r\n                : 0;\r\n    if (parser.token === 10) {\r\n        if (destructible & (32 | 16))\r\n            report(parser, 25);\r\n        if (parser.flags & 1 || flags & 1)\r\n            report(parser, 45);\r\n        if (destructible & 128)\r\n            report(parser, 29);\r\n        if (context & (1024 | 2097152) && destructible & 256)\r\n            report(parser, 30);\r\n        if (isSimpleParameterList)\r\n            parser.flags |= 128;\r\n        return parseParenthesizedArrow(parser, context, scope, params, canAssign, 1, start, line, column);\r\n    }\r\n    else if (destructible & 8) {\r\n        report(parser, 59);\r\n    }\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'CallExpression',\r\n        callee,\r\n        arguments: params\r\n    });\r\n}\r\nfunction parseRegExpLiteral(parser, context, start, line, column) {\r\n    const { tokenRaw, tokenRegExp, tokenValue } = parser;\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return context & 512\r\n        ? finishNode(parser, context, start, line, column, {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            regex: tokenRegExp,\r\n            raw: tokenRaw\r\n        })\r\n        : finishNode(parser, context, start, line, column, {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            regex: tokenRegExp\r\n        });\r\n}\r\nfunction parseClassDeclaration(parser, context, scope, flags, start, line, column) {\r\n    context = (context | 16777216 | 1024) ^ 16777216;\r\n    let decorators = parseDecorators(parser, context);\r\n    if (decorators.length) {\r\n        start = parser.tokenPos;\r\n        line = parser.linePos;\r\n        column = parser.colPos;\r\n    }\r\n    if (parser.leadingDecorators.length) {\r\n        parser.leadingDecorators.push(...decorators);\r\n        decorators = parser.leadingDecorators;\r\n        parser.leadingDecorators = [];\r\n    }\r\n    nextToken(parser, context);\r\n    let id = null;\r\n    let superClass = null;\r\n    const { tokenValue } = parser;\r\n    if (parser.token & 4096 && parser.token !== 20567) {\r\n        if (isStrictReservedWord(parser, context, parser.token)) {\r\n            report(parser, 114);\r\n        }\r\n        if ((parser.token & 537079808) === 537079808) {\r\n            report(parser, 115);\r\n        }\r\n        if (scope) {\r\n            addBlockName(parser, context, scope, tokenValue, 32, 0);\r\n            if (flags) {\r\n                if (flags & 2) {\r\n                    declareUnboundVariable(parser, tokenValue);\r\n                }\r\n            }\r\n        }\r\n        id = parseIdentifier(parser, context, 0);\r\n    }\r\n    else {\r\n        if ((flags & 1) < 1)\r\n            report(parser, 37, 'Class');\r\n    }\r\n    let inheritedContext = context;\r\n    if (consumeOpt(parser, context | 32768, 20567)) {\r\n        superClass = parseLeftHandSideExpression(parser, context, 0, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n        inheritedContext |= 524288;\r\n    }\r\n    else {\r\n        inheritedContext = (inheritedContext | 524288) ^ 524288;\r\n    }\r\n    const body = parseClassBody(parser, inheritedContext, context, scope, 2, 8, 0);\r\n    return finishNode(parser, context, start, line, column, context & 1\r\n        ? {\r\n            type: 'ClassDeclaration',\r\n            id,\r\n            superClass,\r\n            decorators,\r\n            body\r\n        }\r\n        : {\r\n            type: 'ClassDeclaration',\r\n            id,\r\n            superClass,\r\n            body\r\n        });\r\n}\r\nfunction parseClassExpression(parser, context, inGroup, start, line, column) {\r\n    let id = null;\r\n    let superClass = null;\r\n    context = (context | 1024 | 16777216) ^ 16777216;\r\n    const decorators = parseDecorators(parser, context);\r\n    if (decorators.length) {\r\n        start = parser.tokenPos;\r\n        line = parser.linePos;\r\n        column = parser.colPos;\r\n    }\r\n    nextToken(parser, context);\r\n    if (parser.token & 4096 && parser.token !== 20567) {\r\n        if (isStrictReservedWord(parser, context, parser.token))\r\n            report(parser, 114);\r\n        if ((parser.token & 537079808) === 537079808) {\r\n            report(parser, 115);\r\n        }\r\n        id = parseIdentifier(parser, context, 0);\r\n    }\r\n    let inheritedContext = context;\r\n    if (consumeOpt(parser, context | 32768, 20567)) {\r\n        superClass = parseLeftHandSideExpression(parser, context, 0, inGroup, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n        inheritedContext |= 524288;\r\n    }\r\n    else {\r\n        inheritedContext = (inheritedContext | 524288) ^ 524288;\r\n    }\r\n    const body = parseClassBody(parser, inheritedContext, context, void 0, 2, 0, inGroup);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, context & 1\r\n        ? {\r\n            type: 'ClassExpression',\r\n            id,\r\n            superClass,\r\n            decorators,\r\n            body\r\n        }\r\n        : {\r\n            type: 'ClassExpression',\r\n            id,\r\n            superClass,\r\n            body\r\n        });\r\n}\r\nfunction parseDecorators(parser, context) {\r\n    const list = [];\r\n    if (context & 1) {\r\n        while (parser.token === 133) {\r\n            list.push(parseDecoratorList(parser, context, parser.tokenPos, parser.linePos, parser.colPos));\r\n        }\r\n    }\r\n    return list;\r\n}\r\nfunction parseDecoratorList(parser, context, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    let expression = parsePrimaryExpression(parser, context, 2, 0, 1, 0, 0, 1, start, line, column);\r\n    expression = parseMemberOrUpdateExpression(parser, context, expression, 0, 0, start, line, column);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'Decorator',\r\n        expression\r\n    });\r\n}\r\nfunction parseClassBody(parser, context, inheritedContext, scope, kind, origin, inGroup) {\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    consume(parser, context | 32768, 2162700);\r\n    context = (context | 134217728) ^ 134217728;\r\n    parser.flags = (parser.flags | 32) ^ 32;\r\n    const body = [];\r\n    let decorators;\r\n    while (parser.token !== 1074790415) {\r\n        let length = 0;\r\n        decorators = parseDecorators(parser, context);\r\n        length = decorators.length;\r\n        if (length > 0 && parser.tokenValue === 'constructor') {\r\n            report(parser, 106);\r\n        }\r\n        if (parser.token === 1074790415)\r\n            report(parser, 105);\r\n        if (consumeOpt(parser, context, 1074790417)) {\r\n            if (length > 0)\r\n                report(parser, 116);\r\n            continue;\r\n        }\r\n        body.push(parseClassElementList(parser, context, scope, inheritedContext, kind, decorators, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos));\r\n    }\r\n    consume(parser, origin & 8 ? context | 32768 : context, 1074790415);\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'ClassBody',\r\n        body\r\n    });\r\n}\r\nfunction parseClassElementList(parser, context, scope, inheritedContext, type, decorators, isStatic, inGroup, start, line, column) {\r\n    let kind = isStatic ? 32 : 0;\r\n    let key = null;\r\n    const { token, tokenPos, linePos, colPos } = parser;\r\n    if (token & (143360 | 36864)) {\r\n        key = parseIdentifier(parser, context, 0);\r\n        switch (token) {\r\n            case 36972:\r\n                if (!isStatic && parser.token !== 67174411) {\r\n                    return parseClassElementList(parser, context, scope, inheritedContext, type, decorators, 1, inGroup, start, line, column);\r\n                }\r\n                break;\r\n            case 209007:\r\n                if (parser.token !== 67174411 && (parser.flags & 1) < 1) {\r\n                    if (context & 1 && (parser.token & 1073741824) === 1073741824) {\r\n                        return parsePropertyDefinition(parser, context, key, kind, decorators, tokenPos, linePos, colPos);\r\n                    }\r\n                    kind |= 16 | (optionalBit(parser, context, 8457014) ? 8 : 0);\r\n                }\r\n                break;\r\n            case 12402:\r\n                if (parser.token !== 67174411) {\r\n                    if (context & 1 && (parser.token & 1073741824) === 1073741824) {\r\n                        return parsePropertyDefinition(parser, context, key, kind, decorators, tokenPos, linePos, colPos);\r\n                    }\r\n                    kind |= 256;\r\n                }\r\n                break;\r\n            case 12403:\r\n                if (parser.token !== 67174411) {\r\n                    if (context & 1 && (parser.token & 1073741824) === 1073741824) {\r\n                        return parsePropertyDefinition(parser, context, key, kind, decorators, tokenPos, linePos, colPos);\r\n                    }\r\n                    kind |= 512;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    else if (token === 69271571) {\r\n        kind |= 2;\r\n        key = parseComputedPropertyName(parser, inheritedContext, inGroup);\r\n    }\r\n    else if ((token & 134217728) === 134217728) {\r\n        key = parseLiteral(parser, context);\r\n    }\r\n    else if (token === 8457014) {\r\n        kind |= 8;\r\n        nextToken(parser, context);\r\n    }\r\n    else if (context & 1 && parser.token === 131) {\r\n        kind |= 4096;\r\n        key = parsePrivateIdentifier(parser, context, tokenPos, linePos, colPos);\r\n        context = context | 16384;\r\n    }\r\n    else if (context & 1 && (parser.token & 1073741824) === 1073741824) {\r\n        kind |= 128;\r\n        context = context | 16384;\r\n    }\r\n    else if (token === 122) {\r\n        key = parseIdentifier(parser, context, 0);\r\n        if (parser.token !== 67174411)\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    else {\r\n        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    if (kind & (8 | 16 | 768)) {\r\n        if (parser.token & 143360) {\r\n            key = parseIdentifier(parser, context, 0);\r\n        }\r\n        else if ((parser.token & 134217728) === 134217728) {\r\n            key = parseLiteral(parser, context);\r\n        }\r\n        else if (parser.token === 69271571) {\r\n            kind |= 2;\r\n            key = parseComputedPropertyName(parser, context, 0);\r\n        }\r\n        else if (parser.token === 122) {\r\n            key = parseIdentifier(parser, context, 0);\r\n        }\r\n        else if (context & 1 && parser.token === 131) {\r\n            kind |= 4096;\r\n            key = parsePrivateIdentifier(parser, context, tokenPos, linePos, colPos);\r\n        }\r\n        else\r\n            report(parser, 131);\r\n    }\r\n    if ((kind & 2) < 1) {\r\n        if (parser.tokenValue === 'constructor') {\r\n            if ((parser.token & 1073741824) === 1073741824) {\r\n                report(parser, 125);\r\n            }\r\n            else if ((kind & 32) < 1 && parser.token === 67174411) {\r\n                if (kind & (768 | 16 | 128 | 8)) {\r\n                    report(parser, 50, 'accessor');\r\n                }\r\n                else if ((context & 524288) < 1) {\r\n                    if (parser.flags & 32)\r\n                        report(parser, 51);\r\n                    else\r\n                        parser.flags |= 32;\r\n                }\r\n            }\r\n            kind |= 64;\r\n        }\r\n        else if ((kind & 4096) < 1 &&\r\n            kind & (32 | 768 | 8 | 16) &&\r\n            parser.tokenValue === 'prototype') {\r\n            report(parser, 49);\r\n        }\r\n    }\r\n    if (context & 1 && parser.token !== 67174411) {\r\n        return parsePropertyDefinition(parser, context, key, kind, decorators, tokenPos, linePos, colPos);\r\n    }\r\n    const value = parseMethodDefinition(parser, context, kind, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, context & 1\r\n        ? {\r\n            type: 'MethodDefinition',\r\n            kind: (kind & 32) < 1 && kind & 64\r\n                ? 'constructor'\r\n                : kind & 256\r\n                    ? 'get'\r\n                    : kind & 512\r\n                        ? 'set'\r\n                        : 'method',\r\n            static: (kind & 32) > 0,\r\n            computed: (kind & 2) > 0,\r\n            key,\r\n            decorators,\r\n            value\r\n        }\r\n        : {\r\n            type: 'MethodDefinition',\r\n            kind: (kind & 32) < 1 && kind & 64\r\n                ? 'constructor'\r\n                : kind & 256\r\n                    ? 'get'\r\n                    : kind & 512\r\n                        ? 'set'\r\n                        : 'method',\r\n            static: (kind & 32) > 0,\r\n            computed: (kind & 2) > 0,\r\n            key,\r\n            value\r\n        });\r\n}\r\nfunction parsePrivateIdentifier(parser, context, start, line, column) {\r\n    nextToken(parser, context);\r\n    const { tokenValue } = parser;\r\n    if (tokenValue === 'constructor')\r\n        report(parser, 124);\r\n    nextToken(parser, context);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'PrivateIdentifier',\r\n        name: tokenValue\r\n    });\r\n}\r\nfunction parsePropertyDefinition(parser, context, key, state, decorators, start, line, column) {\r\n    let value = null;\r\n    if (state & 8)\r\n        report(parser, 0);\r\n    if (parser.token === 1077936157) {\r\n        nextToken(parser, context | 32768);\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        if (parser.token === 537079928)\r\n            report(parser, 115);\r\n        value = parsePrimaryExpression(parser, context | 16384, 2, 0, 1, 0, 0, 1, tokenPos, linePos, colPos);\r\n        if ((parser.token & 1073741824) !== 1073741824) {\r\n            value = parseMemberOrUpdateExpression(parser, context | 16384, value, 0, 0, tokenPos, linePos, colPos);\r\n            value = parseAssignmentExpression(parser, context | 16384, 0, 0, tokenPos, linePos, colPos, value);\r\n            if (parser.token === 18) {\r\n                value = parseSequenceExpression(parser, context, 0, start, line, column, value);\r\n            }\r\n        }\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'PropertyDefinition',\r\n        key,\r\n        value,\r\n        static: (state & 32) > 0,\r\n        computed: (state & 2) > 0,\r\n        decorators\r\n    });\r\n}\r\nfunction parseBindingPattern(parser, context, scope, type, origin, start, line, column) {\r\n    if (parser.token & 143360)\r\n        return parseAndClassifyIdentifier(parser, context, scope, type, origin, start, line, column);\r\n    if ((parser.token & 2097152) !== 2097152)\r\n        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    const left = parser.token === 69271571\r\n        ? parseArrayExpressionOrPattern(parser, context, scope, 1, 0, 1, type, origin, start, line, column)\r\n        : parseObjectLiteralOrPattern(parser, context, scope, 1, 0, 1, type, origin, start, line, column);\r\n    if (parser.destructible & 16)\r\n        report(parser, 47);\r\n    if (parser.destructible & 32)\r\n        report(parser, 47);\r\n    return left;\r\n}\r\nfunction parseAndClassifyIdentifier(parser, context, scope, kind, origin, start, line, column) {\r\n    const { tokenValue, token } = parser;\r\n    if (context & 1024) {\r\n        if ((token & 537079808) === 537079808) {\r\n            report(parser, 115);\r\n        }\r\n        else if ((token & 36864) === 36864) {\r\n            report(parser, 114);\r\n        }\r\n    }\r\n    if ((token & 20480) === 20480) {\r\n        report(parser, 99);\r\n    }\r\n    if (context & (2048 | 2097152) && token === 241773) {\r\n        report(parser, 30);\r\n    }\r\n    if (token === 241739) {\r\n        if (kind & (8 | 16))\r\n            report(parser, 97);\r\n    }\r\n    if (context & (4194304 | 2048) && token === 209008) {\r\n        report(parser, 95);\r\n    }\r\n    nextToken(parser, context);\r\n    if (scope)\r\n        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'Identifier',\r\n        name: tokenValue\r\n    });\r\n}\r\nfunction parseJSXRootElementOrFragment(parser, context, inJSXChild, start, line, column) {\r\n    nextToken(parser, context);\r\n    if (parser.token === 8456259) {\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'JSXFragment',\r\n            openingFragment: parseOpeningFragment(parser, context, start, line, column),\r\n            children: parseJSXChildren(parser, context),\r\n            closingFragment: parseJSXClosingFragment(parser, context, inJSXChild, parser.tokenPos, parser.linePos, parser.colPos)\r\n        });\r\n    }\r\n    let closingElement = null;\r\n    let children = [];\r\n    const openingElement = parseJSXOpeningFragmentOrSelfCloseElement(parser, context, inJSXChild, start, line, column);\r\n    if (!openingElement.selfClosing) {\r\n        children = parseJSXChildren(parser, context);\r\n        closingElement = parseJSXClosingElement(parser, context, inJSXChild, parser.tokenPos, parser.linePos, parser.colPos);\r\n        const close = isEqualTagName(closingElement.name);\r\n        if (isEqualTagName(openingElement.name) !== close)\r\n            report(parser, 149, close);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXElement',\r\n        children,\r\n        openingElement,\r\n        closingElement\r\n    });\r\n}\r\nfunction parseOpeningFragment(parser, context, start, line, column) {\r\n    scanJSXToken(parser, context);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXOpeningFragment'\r\n    });\r\n}\r\nfunction parseJSXClosingElement(parser, context, inJSXChild, start, line, column) {\r\n    consume(parser, context, 25);\r\n    const name = parseJSXElementName(parser, context, parser.tokenPos, parser.linePos, parser.colPos);\r\n    if (inJSXChild) {\r\n        consume(parser, context, 8456259);\r\n    }\r\n    else {\r\n        parser.token = scanJSXToken(parser, context);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXClosingElement',\r\n        name\r\n    });\r\n}\r\nfunction parseJSXClosingFragment(parser, context, inJSXChild, start, line, column) {\r\n    consume(parser, context, 25);\r\n    if (inJSXChild) {\r\n        consume(parser, context, 8456259);\r\n    }\r\n    else {\r\n        consume(parser, context, 8456259);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXClosingFragment'\r\n    });\r\n}\r\nfunction parseJSXChildren(parser, context) {\r\n    const children = [];\r\n    while (parser.token !== 25) {\r\n        parser.index = parser.tokenPos = parser.startPos;\r\n        parser.column = parser.colPos = parser.startColumn;\r\n        parser.line = parser.linePos = parser.startLine;\r\n        scanJSXToken(parser, context);\r\n        children.push(parseJSXChild(parser, context, parser.tokenPos, parser.linePos, parser.colPos));\r\n    }\r\n    return children;\r\n}\r\nfunction parseJSXChild(parser, context, start, line, column) {\r\n    if (parser.token === 138)\r\n        return parseJSXText(parser, context, start, line, column);\r\n    if (parser.token === 2162700)\r\n        return parseJSXExpressionContainer(parser, context, 0, 0, start, line, column);\r\n    if (parser.token === 8456258)\r\n        return parseJSXRootElementOrFragment(parser, context, 0, start, line, column);\r\n    report(parser, 0);\r\n}\r\nfunction parseJSXText(parser, context, start, line, column) {\r\n    scanJSXToken(parser, context);\r\n    const node = {\r\n        type: 'JSXText',\r\n        value: parser.tokenValue\r\n    };\r\n    if (context & 512) {\r\n        node.raw = parser.tokenRaw;\r\n    }\r\n    return finishNode(parser, context, start, line, column, node);\r\n}\r\nfunction parseJSXOpeningFragmentOrSelfCloseElement(parser, context, inJSXChild, start, line, column) {\r\n    if ((parser.token & 143360) !== 143360 && (parser.token & 4096) !== 4096)\r\n        report(parser, 0);\r\n    const tagName = parseJSXElementName(parser, context, parser.tokenPos, parser.linePos, parser.colPos);\r\n    const attributes = parseJSXAttributes(parser, context);\r\n    const selfClosing = parser.token === 8457016;\r\n    if (parser.token === 8456259) {\r\n        scanJSXToken(parser, context);\r\n    }\r\n    else {\r\n        consume(parser, context, 8457016);\r\n        if (inJSXChild) {\r\n            consume(parser, context, 8456259);\r\n        }\r\n        else {\r\n            scanJSXToken(parser, context);\r\n        }\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXOpeningElement',\r\n        name: tagName,\r\n        attributes,\r\n        selfClosing\r\n    });\r\n}\r\nfunction parseJSXElementName(parser, context, start, line, column) {\r\n    scanJSXIdentifier(parser);\r\n    let key = parseJSXIdentifier(parser, context, start, line, column);\r\n    if (parser.token === 21)\r\n        return parseJSXNamespacedName(parser, context, key, start, line, column);\r\n    while (consumeOpt(parser, context, 67108877)) {\r\n        scanJSXIdentifier(parser);\r\n        key = parseJSXMemberExpression(parser, context, key, start, line, column);\r\n    }\r\n    return key;\r\n}\r\nfunction parseJSXMemberExpression(parser, context, object, start, line, column) {\r\n    const property = parseJSXIdentifier(parser, context, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXMemberExpression',\r\n        object,\r\n        property\r\n    });\r\n}\r\nfunction parseJSXAttributes(parser, context) {\r\n    const attributes = [];\r\n    while (parser.token !== 8457016 && parser.token !== 8456259 && parser.token !== 1048576) {\r\n        attributes.push(parseJsxAttribute(parser, context, parser.tokenPos, parser.linePos, parser.colPos));\r\n    }\r\n    return attributes;\r\n}\r\nfunction parseJSXSpreadAttribute(parser, context, start, line, column) {\r\n    nextToken(parser, context);\r\n    consume(parser, context, 14);\r\n    const expression = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 1074790415);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXSpreadAttribute',\r\n        argument: expression\r\n    });\r\n}\r\nfunction parseJsxAttribute(parser, context, start, line, column) {\r\n    if (parser.token === 2162700)\r\n        return parseJSXSpreadAttribute(parser, context, start, line, column);\r\n    scanJSXIdentifier(parser);\r\n    let value = null;\r\n    let name = parseJSXIdentifier(parser, context, start, line, column);\r\n    if (parser.token === 21) {\r\n        name = parseJSXNamespacedName(parser, context, name, start, line, column);\r\n    }\r\n    if (parser.token === 1077936157) {\r\n        const token = scanJSXAttributeValue(parser, context);\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        switch (token) {\r\n            case 134283267:\r\n                value = parseLiteral(parser, context);\r\n                break;\r\n            case 8456258:\r\n                value = parseJSXRootElementOrFragment(parser, context, 1, tokenPos, linePos, colPos);\r\n                break;\r\n            case 2162700:\r\n                value = parseJSXExpressionContainer(parser, context, 1, 1, tokenPos, linePos, colPos);\r\n                break;\r\n            default:\r\n                report(parser, 148);\r\n        }\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXAttribute',\r\n        value,\r\n        name\r\n    });\r\n}\r\nfunction parseJSXNamespacedName(parser, context, namespace, start, line, column) {\r\n    consume(parser, context, 21);\r\n    const name = parseJSXIdentifier(parser, context, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXNamespacedName',\r\n        namespace,\r\n        name\r\n    });\r\n}\r\nfunction parseJSXExpressionContainer(parser, context, inJSXChild, isAttr, start, line, column) {\r\n    nextToken(parser, context);\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    if (parser.token === 14)\r\n        return parseJSXSpreadChild(parser, context, tokenPos, linePos, colPos);\r\n    let expression = null;\r\n    if (parser.token === 1074790415) {\r\n        if (isAttr)\r\n            report(parser, 151);\r\n        expression = parseJSXEmptyExpression(parser, context, parser.startPos, parser.startLine, parser.startColumn);\r\n    }\r\n    else {\r\n        expression = parseExpression(parser, context, 1, 0, 0, tokenPos, linePos, colPos);\r\n    }\r\n    if (inJSXChild) {\r\n        consume(parser, context, 1074790415);\r\n    }\r\n    else {\r\n        scanJSXToken(parser, context);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXExpressionContainer',\r\n        expression\r\n    });\r\n}\r\nfunction parseJSXSpreadChild(parser, context, start, line, column) {\r\n    consume(parser, context, 14);\r\n    const expression = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 1074790415);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXSpreadChild',\r\n        expression\r\n    });\r\n}\r\nfunction parseJSXEmptyExpression(parser, context, start, line, column) {\r\n    parser.startPos = parser.tokenPos;\r\n    parser.startLine = parser.linePos;\r\n    parser.startColumn = parser.colPos;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXEmptyExpression'\r\n    });\r\n}\r\nfunction parseJSXIdentifier(parser, context, start, line, column) {\r\n    const { tokenValue } = parser;\r\n    nextToken(parser, context);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXIdentifier',\r\n        name: tokenValue\r\n    });\r\n}\n\nvar estree = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\nvar version$1 = \"4.2.0\";\n\nconst version = version$1;\r\nfunction parseScript(source, options) {\r\n    return parseSource(source, options, 0);\r\n}\r\nfunction parseModule(source, options) {\r\n    return parseSource(source, options, 1024 | 2048);\r\n}\r\nfunction parse(source, options) {\r\n    return parseSource(source, options, 0);\r\n}\n\nexports.ESTree = estree;\nexports.parse = parse;\nexports.parseModule = parseModule;\nexports.parseScript = parseScript;\nexports.version = version;\n", "const meriyah = require('meriyah')\n\nmodule.exports = function parse (source, options) {\n  return meriyah.parseModule(source, options)\n}\n", "const estraverse = require('estraverse')\n\nfunction complexReplace (method, node, parent) {\n  const replacement = method(node, parent)\n  if (Array.isArray(replacement)) {\n    parent.body = parent.body.reduce((result, leaf) => {\n      return result.concat(node === leaf ? replacement : leaf)\n    }, [])\n  } else if (replacement) {\n    return replacement\n  } else if (replacement === null) {\n    parent.body = parent.body.reduce((result, leaf) => {\n      return result.concat(node === leaf ? null : leaf)\n    }, []).filter(Boolean)\n  }\n}\n\nmodule.exports = function replace (tree, options) {\n  const enter = typeof options === 'function' ? options : options.enter\n  const leave = options && options.leave\n  return estraverse.replace(tree, {\n    enter (node, parent) {\n      if (enter) {\n        const replacement = complexReplace(enter, node, parent)\n        if (replacement) { return replacement }\n      }\n    },\n    leave (node, parent) {\n      if (leave) {\n        const replacement = complexReplace(leave, node, parent)\n        if (replacement) { return replacement }\n      }\n    }\n  })\n}\n", "/*\n * Based on:\n *\n * estemplate\n * https://github.com/RReverser/estemplate\n *\n * Copyright (c) 2014 Ingvar Stepanyan\n * Licensed under the MIT license.\n */\n\n'use strict'\n\nconst parse = require('../parse')\nconst traverse = require('../traverse')\nconst replace = require('../replace')\nconst CODE_REGEXP = /([^\\s,;]?)\\s*?%(=?)\\s*([\\s\\S]+?)\\s*%\\s*?([^\\s,;]?)/g\nconst INTERNAL_VARIABLE_REGEXP = /^__ASTER_DATA_\\d+$/\nconst INTERNAL_MARKER_REGEXP = /\\\"(__ASTER_DATA_\\d+)\\\"/g\nconst BRACKETS = {\n  '<': '>',\n  '[': ']',\n  '(': ')',\n  '{': '}',\n  \"'\": \"'\",\n  '\"': '\"'\n}\nconst SPREAD = {\n  'ArrayExpression': 'elements',\n  'CallExpression': 'arguments',\n  'BlockStatement': 'body',\n  'FunctionExpression': 'params',\n  'FunctionDeclaration': 'params',\n  'Program': 'body'\n}\n\nfunction template(string, options, data) {\n  if (!data) {\n    data = options\n    options = undefined\n  }\n  return template.compile(string, options)(data)\n}\n\nfunction isInternalVariable(node) {\n  return node.type === 'Identifier' && INTERNAL_VARIABLE_REGEXP.test(node.name)\n}\n\nfunction isInternalStatement(node) {\n  return node.type === 'ExpressionStatement' && typeof node.expression === 'string'\n}\n\ntemplate.modifyTree = function (ast) {\n  traverse(ast, {\n    leave (node, parent) {\n      if (node.type !== '...') {\n        return\n      }\n      var itemsKey = SPREAD[parent.type]\n      if (!itemsKey) {\n        throw new TypeError('Unknown substitution in ' + parent.type)\n      }\n      parent[itemsKey] = parent[itemsKey].reduce(function (items, item) {\n        if (item.type === '...') {\n          return items.concat(item.argument)\n        }\n        items.push(item)\n        return items\n      }, [])\n    },\n    keys: {\n      '...': ['argument']\n    }\n  })\n  return ast\n}\n\ntemplate.compile = function (string, options) {\n  var code = [],\n    index = 0\n\n  string = string.replace(CODE_REGEXP, function (match, open, isEval, codePart, close) {\n    if (open) {\n      var expectedClose = BRACKETS[open]\n      if (!expectedClose || close && expectedClose !== close) {\n        return match\n      }\n    }\n    if (isEval) {\n      var variableName = '__ASTER_DATA_' + (index++)\n      var isSpread = open !== '<' && open !== \"'\" && open !== '\"'\n      if (isSpread) {\n        codePart = '{type: \"...\", argument: ' + codePart + '}'\n      } else if (open === \"'\" || open === '\"') {\n        codePart = '{type: \"Literal\", value: ' + codePart + '}'\n      }\n      code.push('\\t\\tvar ' + variableName + ' = ' + codePart)\n      return isSpread ? (open + variableName + close) : variableName\n    } else {\n      if (open !== '<') {\n        return match\n      }\n      code.push(codePart)\n      return ''\n    }\n  })\n\n  var tree = parse(string, options)\n\n  replace(tree, {\n    leave (node) {\n      if (isInternalVariable(node)) {\n        return node.name\n      }\n\n      if (isInternalStatement(node)) {\n        return node.expression\n      }\n    }\n  })\n\n  if (!(options && options.fast)) {\n    code.unshift('\\twith (it) {')\n    code.push('\\t}')\n  }\n\n  code.unshift('return function template(it) {')\n\n  code.push(\n    '\\treturn estemplate.modifyTree(' + JSON.stringify(tree).replace(INTERNAL_MARKER_REGEXP, '$1') + ')',\n    '}'\n  )\n\n  return new Function('estemplate', code.join('\\n'))(template)\n}\n\nmodule.exports = template\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Def = void 0;\nvar tslib_1 = require(\"tslib\");\nvar Op = Object.prototype;\nvar objToStr = Op.toString;\nvar hasOwn = Op.hasOwnProperty;\nvar BaseType = /** @class */ (function () {\n    function BaseType() {\n    }\n    BaseType.prototype.assert = function (value, deep) {\n        if (!this.check(value, deep)) {\n            var str = shallowStringify(value);\n            throw new Error(str + \" does not match type \" + this);\n        }\n        return true;\n    };\n    BaseType.prototype.arrayOf = function () {\n        var elemType = this;\n        return new ArrayType(elemType);\n    };\n    return BaseType;\n}());\nvar ArrayType = /** @class */ (function (_super) {\n    tslib_1.__extends(ArrayType, _super);\n    function ArrayType(elemType) {\n        var _this = _super.call(this) || this;\n        _this.elemType = elemType;\n        _this.kind = \"ArrayType\";\n        return _this;\n    }\n    ArrayType.prototype.toString = function () {\n        return \"[\" + this.elemType + \"]\";\n    };\n    ArrayType.prototype.check = function (value, deep) {\n        var _this = this;\n        return Array.isArray(value) && value.every(function (elem) { return _this.elemType.check(elem, deep); });\n    };\n    return ArrayType;\n}(BaseType));\nvar IdentityType = /** @class */ (function (_super) {\n    tslib_1.__extends(IdentityType, _super);\n    function IdentityType(value) {\n        var _this = _super.call(this) || this;\n        _this.value = value;\n        _this.kind = \"IdentityType\";\n        return _this;\n    }\n    IdentityType.prototype.toString = function () {\n        return String(this.value);\n    };\n    IdentityType.prototype.check = function (value, deep) {\n        var result = value === this.value;\n        if (!result && typeof deep === \"function\") {\n            deep(this, value);\n        }\n        return result;\n    };\n    return IdentityType;\n}(BaseType));\nvar ObjectType = /** @class */ (function (_super) {\n    tslib_1.__extends(ObjectType, _super);\n    function ObjectType(fields) {\n        var _this = _super.call(this) || this;\n        _this.fields = fields;\n        _this.kind = \"ObjectType\";\n        return _this;\n    }\n    ObjectType.prototype.toString = function () {\n        return \"{ \" + this.fields.join(\", \") + \" }\";\n    };\n    ObjectType.prototype.check = function (value, deep) {\n        return (objToStr.call(value) === objToStr.call({}) &&\n            this.fields.every(function (field) {\n                return field.type.check(value[field.name], deep);\n            }));\n    };\n    return ObjectType;\n}(BaseType));\nvar OrType = /** @class */ (function (_super) {\n    tslib_1.__extends(OrType, _super);\n    function OrType(types) {\n        var _this = _super.call(this) || this;\n        _this.types = types;\n        _this.kind = \"OrType\";\n        return _this;\n    }\n    OrType.prototype.toString = function () {\n        return this.types.join(\" | \");\n    };\n    OrType.prototype.check = function (value, deep) {\n        return this.types.some(function (type) {\n            return type.check(value, deep);\n        });\n    };\n    return OrType;\n}(BaseType));\nvar PredicateType = /** @class */ (function (_super) {\n    tslib_1.__extends(PredicateType, _super);\n    function PredicateType(name, predicate) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.predicate = predicate;\n        _this.kind = \"PredicateType\";\n        return _this;\n    }\n    PredicateType.prototype.toString = function () {\n        return this.name;\n    };\n    PredicateType.prototype.check = function (value, deep) {\n        var result = this.predicate(value, deep);\n        if (!result && typeof deep === \"function\") {\n            deep(this, value);\n        }\n        return result;\n    };\n    return PredicateType;\n}(BaseType));\nvar Def = /** @class */ (function () {\n    function Def(type, typeName) {\n        this.type = type;\n        this.typeName = typeName;\n        this.baseNames = [];\n        this.ownFields = Object.create(null);\n        // Includes own typeName. Populated during finalization.\n        this.allSupertypes = Object.create(null);\n        // Linear inheritance hierarchy. Populated during finalization.\n        this.supertypeList = [];\n        // Includes inherited fields.\n        this.allFields = Object.create(null);\n        // Non-hidden keys of allFields.\n        this.fieldNames = [];\n        // This property will be overridden as true by individual Def instances\n        // when they are finalized.\n        this.finalized = false;\n        // False by default until .build(...) is called on an instance.\n        this.buildable = false;\n        this.buildParams = [];\n    }\n    Def.prototype.isSupertypeOf = function (that) {\n        if (that instanceof Def) {\n            if (this.finalized !== true ||\n                that.finalized !== true) {\n                throw new Error(\"\");\n            }\n            return hasOwn.call(that.allSupertypes, this.typeName);\n        }\n        else {\n            throw new Error(that + \" is not a Def\");\n        }\n    };\n    Def.prototype.checkAllFields = function (value, deep) {\n        var allFields = this.allFields;\n        if (this.finalized !== true) {\n            throw new Error(\"\" + this.typeName);\n        }\n        function checkFieldByName(name) {\n            var field = allFields[name];\n            var type = field.type;\n            var child = field.getValue(value);\n            return type.check(child, deep);\n        }\n        return value !== null &&\n            typeof value === \"object\" &&\n            Object.keys(allFields).every(checkFieldByName);\n    };\n    Def.prototype.bases = function () {\n        var supertypeNames = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            supertypeNames[_i] = arguments[_i];\n        }\n        var bases = this.baseNames;\n        if (this.finalized) {\n            if (supertypeNames.length !== bases.length) {\n                throw new Error(\"\");\n            }\n            for (var i = 0; i < supertypeNames.length; i++) {\n                if (supertypeNames[i] !== bases[i]) {\n                    throw new Error(\"\");\n                }\n            }\n            return this;\n        }\n        supertypeNames.forEach(function (baseName) {\n            // This indexOf lookup may be O(n), but the typical number of base\n            // names is very small, and indexOf is a native Array method.\n            if (bases.indexOf(baseName) < 0) {\n                bases.push(baseName);\n            }\n        });\n        return this; // For chaining.\n    };\n    return Def;\n}());\nexports.Def = Def;\nvar Field = /** @class */ (function () {\n    function Field(name, type, defaultFn, hidden) {\n        this.name = name;\n        this.type = type;\n        this.defaultFn = defaultFn;\n        this.hidden = !!hidden;\n    }\n    Field.prototype.toString = function () {\n        return JSON.stringify(this.name) + \": \" + this.type;\n    };\n    Field.prototype.getValue = function (obj) {\n        var value = obj[this.name];\n        if (typeof value !== \"undefined\") {\n            return value;\n        }\n        if (typeof this.defaultFn === \"function\") {\n            value = this.defaultFn.call(obj);\n        }\n        return value;\n    };\n    return Field;\n}());\nfunction shallowStringify(value) {\n    if (Array.isArray(value)) {\n        return \"[\" + value.map(shallowStringify).join(\", \") + \"]\";\n    }\n    if (value && typeof value === \"object\") {\n        return \"{ \" + Object.keys(value).map(function (key) {\n            return key + \": \" + value[key];\n        }).join(\", \") + \" }\";\n    }\n    return JSON.stringify(value);\n}\nfunction typesPlugin(_fork) {\n    var Type = {\n        or: function () {\n            var types = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                types[_i] = arguments[_i];\n            }\n            return new OrType(types.map(function (type) { return Type.from(type); }));\n        },\n        from: function (value, name) {\n            if (value instanceof ArrayType ||\n                value instanceof IdentityType ||\n                value instanceof ObjectType ||\n                value instanceof OrType ||\n                value instanceof PredicateType) {\n                return value;\n            }\n            // The Def type is used as a helper for constructing compound\n            // interface types for AST nodes.\n            if (value instanceof Def) {\n                return value.type;\n            }\n            // Support [ElemType] syntax.\n            if (isArray.check(value)) {\n                if (value.length !== 1) {\n                    throw new Error(\"only one element type is permitted for typed arrays\");\n                }\n                return new ArrayType(Type.from(value[0]));\n            }\n            // Support { someField: FieldType, ... } syntax.\n            if (isObject.check(value)) {\n                return new ObjectType(Object.keys(value).map(function (name) {\n                    return new Field(name, Type.from(value[name], name));\n                }));\n            }\n            if (typeof value === \"function\") {\n                var bicfIndex = builtInCtorFns.indexOf(value);\n                if (bicfIndex >= 0) {\n                    return builtInCtorTypes[bicfIndex];\n                }\n                if (typeof name !== \"string\") {\n                    throw new Error(\"missing name\");\n                }\n                return new PredicateType(name, value);\n            }\n            // As a last resort, toType returns a type that matches any value that\n            // is === from. This is primarily useful for literal values like\n            // toType(null), but it has the additional advantage of allowing\n            // toType to be a total function.\n            return new IdentityType(value);\n        },\n        // Define a type whose name is registered in a namespace (the defCache) so\n        // that future definitions will return the same type given the same name.\n        // In particular, this system allows for circular and forward definitions.\n        // The Def object d returned from Type.def may be used to configure the\n        // type d.type by calling methods such as d.bases, d.build, and d.field.\n        def: function (typeName) {\n            return hasOwn.call(defCache, typeName)\n                ? defCache[typeName]\n                : defCache[typeName] = new DefImpl(typeName);\n        },\n        hasDef: function (typeName) {\n            return hasOwn.call(defCache, typeName);\n        }\n    };\n    var builtInCtorFns = [];\n    var builtInCtorTypes = [];\n    function defBuiltInType(name, example) {\n        var objStr = objToStr.call(example);\n        var type = new PredicateType(name, function (value) { return objToStr.call(value) === objStr; });\n        if (example && typeof example.constructor === \"function\") {\n            builtInCtorFns.push(example.constructor);\n            builtInCtorTypes.push(type);\n        }\n        return type;\n    }\n    // These types check the underlying [[Class]] attribute of the given\n    // value, rather than using the problematic typeof operator. Note however\n    // that no subtyping is considered; so, for instance, isObject.check\n    // returns false for [], /./, new Date, and null.\n    var isString = defBuiltInType(\"string\", \"truthy\");\n    var isFunction = defBuiltInType(\"function\", function () { });\n    var isArray = defBuiltInType(\"array\", []);\n    var isObject = defBuiltInType(\"object\", {});\n    var isRegExp = defBuiltInType(\"RegExp\", /./);\n    var isDate = defBuiltInType(\"Date\", new Date());\n    var isNumber = defBuiltInType(\"number\", 3);\n    var isBoolean = defBuiltInType(\"boolean\", true);\n    var isNull = defBuiltInType(\"null\", null);\n    var isUndefined = defBuiltInType(\"undefined\", undefined);\n    var builtInTypes = {\n        string: isString,\n        function: isFunction,\n        array: isArray,\n        object: isObject,\n        RegExp: isRegExp,\n        Date: isDate,\n        number: isNumber,\n        boolean: isBoolean,\n        null: isNull,\n        undefined: isUndefined,\n    };\n    // In order to return the same Def instance every time Type.def is called\n    // with a particular name, those instances need to be stored in a cache.\n    var defCache = Object.create(null);\n    function defFromValue(value) {\n        if (value && typeof value === \"object\") {\n            var type = value.type;\n            if (typeof type === \"string\" &&\n                hasOwn.call(defCache, type)) {\n                var d = defCache[type];\n                if (d.finalized) {\n                    return d;\n                }\n            }\n        }\n        return null;\n    }\n    var DefImpl = /** @class */ (function (_super) {\n        tslib_1.__extends(DefImpl, _super);\n        function DefImpl(typeName) {\n            var _this = _super.call(this, new PredicateType(typeName, function (value, deep) { return _this.check(value, deep); }), typeName) || this;\n            return _this;\n        }\n        DefImpl.prototype.check = function (value, deep) {\n            if (this.finalized !== true) {\n                throw new Error(\"prematurely checking unfinalized type \" + this.typeName);\n            }\n            // A Def type can only match an object value.\n            if (value === null || typeof value !== \"object\") {\n                return false;\n            }\n            var vDef = defFromValue(value);\n            if (!vDef) {\n                // If we couldn't infer the Def associated with the given value,\n                // and we expected it to be a SourceLocation or a Position, it was\n                // probably just missing a \"type\" field (because Esprima does not\n                // assign a type property to such nodes). Be optimistic and let\n                // this.checkAllFields make the final decision.\n                if (this.typeName === \"SourceLocation\" ||\n                    this.typeName === \"Position\") {\n                    return this.checkAllFields(value, deep);\n                }\n                // Calling this.checkAllFields for any other type of node is both\n                // bad for performance and way too forgiving.\n                return false;\n            }\n            // If checking deeply and vDef === this, then we only need to call\n            // checkAllFields once. Calling checkAllFields is too strict when deep\n            // is false, because then we only care about this.isSupertypeOf(vDef).\n            if (deep && vDef === this) {\n                return this.checkAllFields(value, deep);\n            }\n            // In most cases we rely exclusively on isSupertypeOf to make O(1)\n            // subtyping determinations. This suffices in most situations outside\n            // of unit tests, since interface conformance is checked whenever new\n            // instances are created using builder functions.\n            if (!this.isSupertypeOf(vDef)) {\n                return false;\n            }\n            // The exception is when deep is true; then, we recursively check all\n            // fields.\n            if (!deep) {\n                return true;\n            }\n            // Use the more specific Def (vDef) to perform the deep check, but\n            // shallow-check fields defined by the less specific Def (this).\n            return vDef.checkAllFields(value, deep)\n                && this.checkAllFields(value, false);\n        };\n        DefImpl.prototype.build = function () {\n            var _this = this;\n            var buildParams = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                buildParams[_i] = arguments[_i];\n            }\n            // Calling Def.prototype.build multiple times has the effect of merely\n            // redefining this property.\n            this.buildParams = buildParams;\n            if (this.buildable) {\n                // If this Def is already buildable, update self.buildParams and\n                // continue using the old builder function.\n                return this;\n            }\n            // Every buildable type will have its \"type\" field filled in\n            // automatically. This includes types that are not subtypes of Node,\n            // like SourceLocation, but that seems harmless (TODO?).\n            this.field(\"type\", String, function () { return _this.typeName; });\n            // Override Dp.buildable for this Def instance.\n            this.buildable = true;\n            var addParam = function (built, param, arg, isArgAvailable) {\n                if (hasOwn.call(built, param))\n                    return;\n                var all = _this.allFields;\n                if (!hasOwn.call(all, param)) {\n                    throw new Error(\"\" + param);\n                }\n                var field = all[param];\n                var type = field.type;\n                var value;\n                if (isArgAvailable) {\n                    value = arg;\n                }\n                else if (field.defaultFn) {\n                    // Expose the partially-built object to the default\n                    // function as its `this` object.\n                    value = field.defaultFn.call(built);\n                }\n                else {\n                    var message = \"no value or default function given for field \" +\n                        JSON.stringify(param) + \" of \" + _this.typeName + \"(\" +\n                        _this.buildParams.map(function (name) {\n                            return all[name];\n                        }).join(\", \") + \")\";\n                    throw new Error(message);\n                }\n                if (!type.check(value)) {\n                    throw new Error(shallowStringify(value) +\n                        \" does not match field \" + field +\n                        \" of type \" + _this.typeName);\n                }\n                built[param] = value;\n            };\n            // Calling the builder function will construct an instance of the Def,\n            // with positional arguments mapped to the fields original passed to .build.\n            // If not enough arguments are provided, the default value for the remaining fields\n            // will be used.\n            var builder = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var argc = args.length;\n                if (!_this.finalized) {\n                    throw new Error(\"attempting to instantiate unfinalized type \" +\n                        _this.typeName);\n                }\n                var built = Object.create(nodePrototype);\n                _this.buildParams.forEach(function (param, i) {\n                    if (i < argc) {\n                        addParam(built, param, args[i], true);\n                    }\n                    else {\n                        addParam(built, param, null, false);\n                    }\n                });\n                Object.keys(_this.allFields).forEach(function (param) {\n                    // Use the default value.\n                    addParam(built, param, null, false);\n                });\n                // Make sure that the \"type\" field was filled automatically.\n                if (built.type !== _this.typeName) {\n                    throw new Error(\"\");\n                }\n                return built;\n            };\n            // Calling .from on the builder function will construct an instance of the Def,\n            // using field values from the passed object. For fields missing from the passed object,\n            // their default value will be used.\n            builder.from = function (obj) {\n                if (!_this.finalized) {\n                    throw new Error(\"attempting to instantiate unfinalized type \" +\n                        _this.typeName);\n                }\n                var built = Object.create(nodePrototype);\n                Object.keys(_this.allFields).forEach(function (param) {\n                    if (hasOwn.call(obj, param)) {\n                        addParam(built, param, obj[param], true);\n                    }\n                    else {\n                        addParam(built, param, null, false);\n                    }\n                });\n                // Make sure that the \"type\" field was filled automatically.\n                if (built.type !== _this.typeName) {\n                    throw new Error(\"\");\n                }\n                return built;\n            };\n            Object.defineProperty(builders, getBuilderName(this.typeName), {\n                enumerable: true,\n                value: builder\n            });\n            return this;\n        };\n        // The reason fields are specified using .field(...) instead of an object\n        // literal syntax is somewhat subtle: the object literal syntax would\n        // support only one key and one value, but with .field(...) we can pass\n        // any number of arguments to specify the field.\n        DefImpl.prototype.field = function (name, type, defaultFn, hidden) {\n            if (this.finalized) {\n                console.error(\"Ignoring attempt to redefine field \" +\n                    JSON.stringify(name) + \" of finalized type \" +\n                    JSON.stringify(this.typeName));\n                return this;\n            }\n            this.ownFields[name] = new Field(name, Type.from(type), defaultFn, hidden);\n            return this; // For chaining.\n        };\n        DefImpl.prototype.finalize = function () {\n            var _this = this;\n            // It's not an error to finalize a type more than once, but only the\n            // first call to .finalize does anything.\n            if (!this.finalized) {\n                var allFields = this.allFields;\n                var allSupertypes = this.allSupertypes;\n                this.baseNames.forEach(function (name) {\n                    var def = defCache[name];\n                    if (def instanceof Def) {\n                        def.finalize();\n                        extend(allFields, def.allFields);\n                        extend(allSupertypes, def.allSupertypes);\n                    }\n                    else {\n                        var message = \"unknown supertype name \" +\n                            JSON.stringify(name) +\n                            \" for subtype \" +\n                            JSON.stringify(_this.typeName);\n                        throw new Error(message);\n                    }\n                });\n                // TODO Warn if fields are overridden with incompatible types.\n                extend(allFields, this.ownFields);\n                allSupertypes[this.typeName] = this;\n                this.fieldNames.length = 0;\n                for (var fieldName in allFields) {\n                    if (hasOwn.call(allFields, fieldName) &&\n                        !allFields[fieldName].hidden) {\n                        this.fieldNames.push(fieldName);\n                    }\n                }\n                // Types are exported only once they have been finalized.\n                Object.defineProperty(namedTypes, this.typeName, {\n                    enumerable: true,\n                    value: this.type\n                });\n                this.finalized = true;\n                // A linearization of the inheritance hierarchy.\n                populateSupertypeList(this.typeName, this.supertypeList);\n                if (this.buildable &&\n                    this.supertypeList.lastIndexOf(\"Expression\") >= 0) {\n                    wrapExpressionBuilderWithStatement(this.typeName);\n                }\n            }\n        };\n        return DefImpl;\n    }(Def));\n    // Note that the list returned by this function is a copy of the internal\n    // supertypeList, *without* the typeName itself as the first element.\n    function getSupertypeNames(typeName) {\n        if (!hasOwn.call(defCache, typeName)) {\n            throw new Error(\"\");\n        }\n        var d = defCache[typeName];\n        if (d.finalized !== true) {\n            throw new Error(\"\");\n        }\n        return d.supertypeList.slice(1);\n    }\n    // Returns an object mapping from every known type in the defCache to the\n    // most specific supertype whose name is an own property of the candidates\n    // object.\n    function computeSupertypeLookupTable(candidates) {\n        var table = {};\n        var typeNames = Object.keys(defCache);\n        var typeNameCount = typeNames.length;\n        for (var i = 0; i < typeNameCount; ++i) {\n            var typeName = typeNames[i];\n            var d = defCache[typeName];\n            if (d.finalized !== true) {\n                throw new Error(\"\" + typeName);\n            }\n            for (var j = 0; j < d.supertypeList.length; ++j) {\n                var superTypeName = d.supertypeList[j];\n                if (hasOwn.call(candidates, superTypeName)) {\n                    table[typeName] = superTypeName;\n                    break;\n                }\n            }\n        }\n        return table;\n    }\n    var builders = Object.create(null);\n    // This object is used as prototype for any node created by a builder.\n    var nodePrototype = {};\n    // Call this function to define a new method to be shared by all AST\n    // nodes. The replaced method (if any) is returned for easy wrapping.\n    function defineMethod(name, func) {\n        var old = nodePrototype[name];\n        // Pass undefined as func to delete nodePrototype[name].\n        if (isUndefined.check(func)) {\n            delete nodePrototype[name];\n        }\n        else {\n            isFunction.assert(func);\n            Object.defineProperty(nodePrototype, name, {\n                enumerable: true,\n                configurable: true,\n                value: func\n            });\n        }\n        return old;\n    }\n    function getBuilderName(typeName) {\n        return typeName.replace(/^[A-Z]+/, function (upperCasePrefix) {\n            var len = upperCasePrefix.length;\n            switch (len) {\n                case 0: return \"\";\n                // If there's only one initial capital letter, just lower-case it.\n                case 1: return upperCasePrefix.toLowerCase();\n                default:\n                    // If there's more than one initial capital letter, lower-case\n                    // all but the last one, so that XMLDefaultDeclaration (for\n                    // example) becomes xmlDefaultDeclaration.\n                    return upperCasePrefix.slice(0, len - 1).toLowerCase() +\n                        upperCasePrefix.charAt(len - 1);\n            }\n        });\n    }\n    function getStatementBuilderName(typeName) {\n        typeName = getBuilderName(typeName);\n        return typeName.replace(/(Expression)?$/, \"Statement\");\n    }\n    var namedTypes = {};\n    // Like Object.keys, but aware of what fields each AST type should have.\n    function getFieldNames(object) {\n        var d = defFromValue(object);\n        if (d) {\n            return d.fieldNames.slice(0);\n        }\n        if (\"type\" in object) {\n            throw new Error(\"did not recognize object of type \" +\n                JSON.stringify(object.type));\n        }\n        return Object.keys(object);\n    }\n    // Get the value of an object property, taking object.type and default\n    // functions into account.\n    function getFieldValue(object, fieldName) {\n        var d = defFromValue(object);\n        if (d) {\n            var field = d.allFields[fieldName];\n            if (field) {\n                return field.getValue(object);\n            }\n        }\n        return object && object[fieldName];\n    }\n    // Iterate over all defined fields of an object, including those missing\n    // or undefined, passing each field name and effective value (as returned\n    // by getFieldValue) to the callback. If the object has no corresponding\n    // Def, the callback will never be called.\n    function eachField(object, callback, context) {\n        getFieldNames(object).forEach(function (name) {\n            callback.call(this, name, getFieldValue(object, name));\n        }, context);\n    }\n    // Similar to eachField, except that iteration stops as soon as the\n    // callback returns a truthy value. Like Array.prototype.some, the final\n    // result is either true or false to indicates whether the callback\n    // returned true for any element or not.\n    function someField(object, callback, context) {\n        return getFieldNames(object).some(function (name) {\n            return callback.call(this, name, getFieldValue(object, name));\n        }, context);\n    }\n    // Adds an additional builder for Expression subtypes\n    // that wraps the built Expression in an ExpressionStatements.\n    function wrapExpressionBuilderWithStatement(typeName) {\n        var wrapperName = getStatementBuilderName(typeName);\n        // skip if the builder already exists\n        if (builders[wrapperName])\n            return;\n        // the builder function to wrap with builders.ExpressionStatement\n        var wrapped = builders[getBuilderName(typeName)];\n        // skip if there is nothing to wrap\n        if (!wrapped)\n            return;\n        var builder = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return builders.expressionStatement(wrapped.apply(builders, args));\n        };\n        builder.from = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return builders.expressionStatement(wrapped.from.apply(builders, args));\n        };\n        builders[wrapperName] = builder;\n    }\n    function populateSupertypeList(typeName, list) {\n        list.length = 0;\n        list.push(typeName);\n        var lastSeen = Object.create(null);\n        for (var pos = 0; pos < list.length; ++pos) {\n            typeName = list[pos];\n            var d = defCache[typeName];\n            if (d.finalized !== true) {\n                throw new Error(\"\");\n            }\n            // If we saw typeName earlier in the breadth-first traversal,\n            // delete the last-seen occurrence.\n            if (hasOwn.call(lastSeen, typeName)) {\n                delete list[lastSeen[typeName]];\n            }\n            // Record the new index of the last-seen occurrence of typeName.\n            lastSeen[typeName] = pos;\n            // Enqueue the base names of this type.\n            list.push.apply(list, d.baseNames);\n        }\n        // Compaction loop to remove array holes.\n        for (var to = 0, from = to, len = list.length; from < len; ++from) {\n            if (hasOwn.call(list, from)) {\n                list[to++] = list[from];\n            }\n        }\n        list.length = to;\n    }\n    function extend(into, from) {\n        Object.keys(from).forEach(function (name) {\n            into[name] = from[name];\n        });\n        return into;\n    }\n    function finalize() {\n        Object.keys(defCache).forEach(function (name) {\n            defCache[name].finalize();\n        });\n    }\n    return {\n        Type: Type,\n        builtInTypes: builtInTypes,\n        getSupertypeNames: getSupertypeNames,\n        computeSupertypeLookupTable: computeSupertypeLookupTable,\n        builders: builders,\n        defineMethod: defineMethod,\n        getBuilderName: getBuilderName,\n        getStatementBuilderName: getStatementBuilderName,\n        namedTypes: namedTypes,\n        getFieldNames: getFieldNames,\n        getFieldValue: getFieldValue,\n        eachField: eachField,\n        someField: someField,\n        finalize: finalize,\n    };\n}\nexports.default = typesPlugin;\n;\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nvar Op = Object.prototype;\nvar hasOwn = Op.hasOwnProperty;\nfunction pathPlugin(fork) {\n    var types = fork.use(types_1.default);\n    var isArray = types.builtInTypes.array;\n    var isNumber = types.builtInTypes.number;\n    var Path = function Path(value, parentPath, name) {\n        if (!(this instanceof Path)) {\n            throw new Error(\"Path constructor cannot be invoked without 'new'\");\n        }\n        if (parentPath) {\n            if (!(parentPath instanceof Path)) {\n                throw new Error(\"\");\n            }\n        }\n        else {\n            parentPath = null;\n            name = null;\n        }\n        // The value encapsulated by this Path, generally equal to\n        // parentPath.value[name] if we have a parentPath.\n        this.value = value;\n        // The immediate parent Path of this Path.\n        this.parentPath = parentPath;\n        // The name of the property of parentPath.value through which this\n        // Path's value was reached.\n        this.name = name;\n        // Calling path.get(\"child\") multiple times always returns the same\n        // child Path object, for both performance and consistency reasons.\n        this.__childCache = null;\n    };\n    var Pp = Path.prototype;\n    function getChildCache(path) {\n        // Lazily create the child cache. This also cheapens cache\n        // invalidation, since you can just reset path.__childCache to null.\n        return path.__childCache || (path.__childCache = Object.create(null));\n    }\n    function getChildPath(path, name) {\n        var cache = getChildCache(path);\n        var actualChildValue = path.getValueProperty(name);\n        var childPath = cache[name];\n        if (!hasOwn.call(cache, name) ||\n            // Ensure consistency between cache and reality.\n            childPath.value !== actualChildValue) {\n            childPath = cache[name] = new path.constructor(actualChildValue, path, name);\n        }\n        return childPath;\n    }\n    // This method is designed to be overridden by subclasses that need to\n    // handle missing properties, etc.\n    Pp.getValueProperty = function getValueProperty(name) {\n        return this.value[name];\n    };\n    Pp.get = function get() {\n        var names = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            names[_i] = arguments[_i];\n        }\n        var path = this;\n        var count = names.length;\n        for (var i = 0; i < count; ++i) {\n            path = getChildPath(path, names[i]);\n        }\n        return path;\n    };\n    Pp.each = function each(callback, context) {\n        var childPaths = [];\n        var len = this.value.length;\n        var i = 0;\n        // Collect all the original child paths before invoking the callback.\n        for (var i = 0; i < len; ++i) {\n            if (hasOwn.call(this.value, i)) {\n                childPaths[i] = this.get(i);\n            }\n        }\n        // Invoke the callback on just the original child paths, regardless of\n        // any modifications made to the array by the callback. I chose these\n        // semantics over cleverly invoking the callback on new elements because\n        // this way is much easier to reason about.\n        context = context || this;\n        for (i = 0; i < len; ++i) {\n            if (hasOwn.call(childPaths, i)) {\n                callback.call(context, childPaths[i]);\n            }\n        }\n    };\n    Pp.map = function map(callback, context) {\n        var result = [];\n        this.each(function (childPath) {\n            result.push(callback.call(this, childPath));\n        }, context);\n        return result;\n    };\n    Pp.filter = function filter(callback, context) {\n        var result = [];\n        this.each(function (childPath) {\n            if (callback.call(this, childPath)) {\n                result.push(childPath);\n            }\n        }, context);\n        return result;\n    };\n    function emptyMoves() { }\n    function getMoves(path, offset, start, end) {\n        isArray.assert(path.value);\n        if (offset === 0) {\n            return emptyMoves;\n        }\n        var length = path.value.length;\n        if (length < 1) {\n            return emptyMoves;\n        }\n        var argc = arguments.length;\n        if (argc === 2) {\n            start = 0;\n            end = length;\n        }\n        else if (argc === 3) {\n            start = Math.max(start, 0);\n            end = length;\n        }\n        else {\n            start = Math.max(start, 0);\n            end = Math.min(end, length);\n        }\n        isNumber.assert(start);\n        isNumber.assert(end);\n        var moves = Object.create(null);\n        var cache = getChildCache(path);\n        for (var i = start; i < end; ++i) {\n            if (hasOwn.call(path.value, i)) {\n                var childPath = path.get(i);\n                if (childPath.name !== i) {\n                    throw new Error(\"\");\n                }\n                var newIndex = i + offset;\n                childPath.name = newIndex;\n                moves[newIndex] = childPath;\n                delete cache[i];\n            }\n        }\n        delete cache.length;\n        return function () {\n            for (var newIndex in moves) {\n                var childPath = moves[newIndex];\n                if (childPath.name !== +newIndex) {\n                    throw new Error(\"\");\n                }\n                cache[newIndex] = childPath;\n                path.value[newIndex] = childPath.value;\n            }\n        };\n    }\n    Pp.shift = function shift() {\n        var move = getMoves(this, -1);\n        var result = this.value.shift();\n        move();\n        return result;\n    };\n    Pp.unshift = function unshift() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var move = getMoves(this, args.length);\n        var result = this.value.unshift.apply(this.value, args);\n        move();\n        return result;\n    };\n    Pp.push = function push() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        isArray.assert(this.value);\n        delete getChildCache(this).length;\n        return this.value.push.apply(this.value, args);\n    };\n    Pp.pop = function pop() {\n        isArray.assert(this.value);\n        var cache = getChildCache(this);\n        delete cache[this.value.length - 1];\n        delete cache.length;\n        return this.value.pop();\n    };\n    Pp.insertAt = function insertAt(index) {\n        var argc = arguments.length;\n        var move = getMoves(this, argc - 1, index);\n        if (move === emptyMoves && argc <= 1) {\n            return this;\n        }\n        index = Math.max(index, 0);\n        for (var i = 1; i < argc; ++i) {\n            this.value[index + i - 1] = arguments[i];\n        }\n        move();\n        return this;\n    };\n    Pp.insertBefore = function insertBefore() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var pp = this.parentPath;\n        var argc = args.length;\n        var insertAtArgs = [this.name];\n        for (var i = 0; i < argc; ++i) {\n            insertAtArgs.push(args[i]);\n        }\n        return pp.insertAt.apply(pp, insertAtArgs);\n    };\n    Pp.insertAfter = function insertAfter() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var pp = this.parentPath;\n        var argc = args.length;\n        var insertAtArgs = [this.name + 1];\n        for (var i = 0; i < argc; ++i) {\n            insertAtArgs.push(args[i]);\n        }\n        return pp.insertAt.apply(pp, insertAtArgs);\n    };\n    function repairRelationshipWithParent(path) {\n        if (!(path instanceof Path)) {\n            throw new Error(\"\");\n        }\n        var pp = path.parentPath;\n        if (!pp) {\n            // Orphan paths have no relationship to repair.\n            return path;\n        }\n        var parentValue = pp.value;\n        var parentCache = getChildCache(pp);\n        // Make sure parentCache[path.name] is populated.\n        if (parentValue[path.name] === path.value) {\n            parentCache[path.name] = path;\n        }\n        else if (isArray.check(parentValue)) {\n            // Something caused path.name to become out of date, so attempt to\n            // recover by searching for path.value in parentValue.\n            var i = parentValue.indexOf(path.value);\n            if (i >= 0) {\n                parentCache[path.name = i] = path;\n            }\n        }\n        else {\n            // If path.value disagrees with parentValue[path.name], and\n            // path.name is not an array index, let path.value become the new\n            // parentValue[path.name] and update parentCache accordingly.\n            parentValue[path.name] = path.value;\n            parentCache[path.name] = path;\n        }\n        if (parentValue[path.name] !== path.value) {\n            throw new Error(\"\");\n        }\n        if (path.parentPath.get(path.name) !== path) {\n            throw new Error(\"\");\n        }\n        return path;\n    }\n    Pp.replace = function replace(replacement) {\n        var results = [];\n        var parentValue = this.parentPath.value;\n        var parentCache = getChildCache(this.parentPath);\n        var count = arguments.length;\n        repairRelationshipWithParent(this);\n        if (isArray.check(parentValue)) {\n            var originalLength = parentValue.length;\n            var move = getMoves(this.parentPath, count - 1, this.name + 1);\n            var spliceArgs = [this.name, 1];\n            for (var i = 0; i < count; ++i) {\n                spliceArgs.push(arguments[i]);\n            }\n            var splicedOut = parentValue.splice.apply(parentValue, spliceArgs);\n            if (splicedOut[0] !== this.value) {\n                throw new Error(\"\");\n            }\n            if (parentValue.length !== (originalLength - 1 + count)) {\n                throw new Error(\"\");\n            }\n            move();\n            if (count === 0) {\n                delete this.value;\n                delete parentCache[this.name];\n                this.__childCache = null;\n            }\n            else {\n                if (parentValue[this.name] !== replacement) {\n                    throw new Error(\"\");\n                }\n                if (this.value !== replacement) {\n                    this.value = replacement;\n                    this.__childCache = null;\n                }\n                for (i = 0; i < count; ++i) {\n                    results.push(this.parentPath.get(this.name + i));\n                }\n                if (results[0] !== this) {\n                    throw new Error(\"\");\n                }\n            }\n        }\n        else if (count === 1) {\n            if (this.value !== replacement) {\n                this.__childCache = null;\n            }\n            this.value = parentValue[this.name] = replacement;\n            results.push(this);\n        }\n        else if (count === 0) {\n            delete parentValue[this.name];\n            delete this.value;\n            this.__childCache = null;\n            // Leave this path cached as parentCache[this.name], even though\n            // it no longer has a value defined.\n        }\n        else {\n            throw new Error(\"Could not replace path\");\n        }\n        return results;\n    };\n    return Path;\n}\nexports.default = pathPlugin;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction scopePlugin(fork) {\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var namedTypes = types.namedTypes;\n    var Node = namedTypes.Node;\n    var Expression = namedTypes.Expression;\n    var isArray = types.builtInTypes.array;\n    var b = types.builders;\n    var Scope = function Scope(path, parentScope) {\n        if (!(this instanceof Scope)) {\n            throw new Error(\"Scope constructor cannot be invoked without 'new'\");\n        }\n        ScopeType.assert(path.value);\n        var depth;\n        if (parentScope) {\n            if (!(parentScope instanceof Scope)) {\n                throw new Error(\"\");\n            }\n            depth = parentScope.depth + 1;\n        }\n        else {\n            parentScope = null;\n            depth = 0;\n        }\n        Object.defineProperties(this, {\n            path: { value: path },\n            node: { value: path.value },\n            isGlobal: { value: !parentScope, enumerable: true },\n            depth: { value: depth },\n            parent: { value: parentScope },\n            bindings: { value: {} },\n            types: { value: {} },\n        });\n    };\n    var scopeTypes = [\n        // Program nodes introduce global scopes.\n        namedTypes.Program,\n        // Function is the supertype of FunctionExpression,\n        // FunctionDeclaration, ArrowExpression, etc.\n        namedTypes.Function,\n        // In case you didn't know, the caught parameter shadows any variable\n        // of the same name in an outer scope.\n        namedTypes.CatchClause\n    ];\n    var ScopeType = Type.or.apply(Type, scopeTypes);\n    Scope.isEstablishedBy = function (node) {\n        return ScopeType.check(node);\n    };\n    var Sp = Scope.prototype;\n    // Will be overridden after an instance lazily calls scanScope.\n    Sp.didScan = false;\n    Sp.declares = function (name) {\n        this.scan();\n        return hasOwn.call(this.bindings, name);\n    };\n    Sp.declaresType = function (name) {\n        this.scan();\n        return hasOwn.call(this.types, name);\n    };\n    Sp.declareTemporary = function (prefix) {\n        if (prefix) {\n            if (!/^[a-z$_]/i.test(prefix)) {\n                throw new Error(\"\");\n            }\n        }\n        else {\n            prefix = \"t$\";\n        }\n        // Include this.depth in the name to make sure the name does not\n        // collide with any variables in nested/enclosing scopes.\n        prefix += this.depth.toString(36) + \"$\";\n        this.scan();\n        var index = 0;\n        while (this.declares(prefix + index)) {\n            ++index;\n        }\n        var name = prefix + index;\n        return this.bindings[name] = types.builders.identifier(name);\n    };\n    Sp.injectTemporary = function (identifier, init) {\n        identifier || (identifier = this.declareTemporary());\n        var bodyPath = this.path.get(\"body\");\n        if (namedTypes.BlockStatement.check(bodyPath.value)) {\n            bodyPath = bodyPath.get(\"body\");\n        }\n        bodyPath.unshift(b.variableDeclaration(\"var\", [b.variableDeclarator(identifier, init || null)]));\n        return identifier;\n    };\n    Sp.scan = function (force) {\n        if (force || !this.didScan) {\n            for (var name in this.bindings) {\n                // Empty out this.bindings, just in cases.\n                delete this.bindings[name];\n            }\n            scanScope(this.path, this.bindings, this.types);\n            this.didScan = true;\n        }\n    };\n    Sp.getBindings = function () {\n        this.scan();\n        return this.bindings;\n    };\n    Sp.getTypes = function () {\n        this.scan();\n        return this.types;\n    };\n    function scanScope(path, bindings, scopeTypes) {\n        var node = path.value;\n        ScopeType.assert(node);\n        if (namedTypes.CatchClause.check(node)) {\n            // A catch clause establishes a new scope but the only variable\n            // bound in that scope is the catch parameter. Any other\n            // declarations create bindings in the outer scope.\n            var param = path.get(\"param\");\n            if (param.value) {\n                addPattern(param, bindings);\n            }\n        }\n        else {\n            recursiveScanScope(path, bindings, scopeTypes);\n        }\n    }\n    function recursiveScanScope(path, bindings, scopeTypes) {\n        var node = path.value;\n        if (path.parent &&\n            namedTypes.FunctionExpression.check(path.parent.node) &&\n            path.parent.node.id) {\n            addPattern(path.parent.get(\"id\"), bindings);\n        }\n        if (!node) {\n            // None of the remaining cases matter if node is falsy.\n        }\n        else if (isArray.check(node)) {\n            path.each(function (childPath) {\n                recursiveScanChild(childPath, bindings, scopeTypes);\n            });\n        }\n        else if (namedTypes.Function.check(node)) {\n            path.get(\"params\").each(function (paramPath) {\n                addPattern(paramPath, bindings);\n            });\n            recursiveScanChild(path.get(\"body\"), bindings, scopeTypes);\n        }\n        else if ((namedTypes.TypeAlias && namedTypes.TypeAlias.check(node)) ||\n            (namedTypes.InterfaceDeclaration && namedTypes.InterfaceDeclaration.check(node)) ||\n            (namedTypes.TSTypeAliasDeclaration && namedTypes.TSTypeAliasDeclaration.check(node)) ||\n            (namedTypes.TSInterfaceDeclaration && namedTypes.TSInterfaceDeclaration.check(node))) {\n            addTypePattern(path.get(\"id\"), scopeTypes);\n        }\n        else if (namedTypes.VariableDeclarator.check(node)) {\n            addPattern(path.get(\"id\"), bindings);\n            recursiveScanChild(path.get(\"init\"), bindings, scopeTypes);\n        }\n        else if (node.type === \"ImportSpecifier\" ||\n            node.type === \"ImportNamespaceSpecifier\" ||\n            node.type === \"ImportDefaultSpecifier\") {\n            addPattern(\n            // Esprima used to use the .name field to refer to the local\n            // binding identifier for ImportSpecifier nodes, but .id for\n            // ImportNamespaceSpecifier and ImportDefaultSpecifier nodes.\n            // ESTree/Acorn/ESpree use .local for all three node types.\n            path.get(node.local ? \"local\" :\n                node.name ? \"name\" : \"id\"), bindings);\n        }\n        else if (Node.check(node) && !Expression.check(node)) {\n            types.eachField(node, function (name, child) {\n                var childPath = path.get(name);\n                if (!pathHasValue(childPath, child)) {\n                    throw new Error(\"\");\n                }\n                recursiveScanChild(childPath, bindings, scopeTypes);\n            });\n        }\n    }\n    function pathHasValue(path, value) {\n        if (path.value === value) {\n            return true;\n        }\n        // Empty arrays are probably produced by defaults.emptyArray, in which\n        // case is makes sense to regard them as equivalent, if not ===.\n        if (Array.isArray(path.value) &&\n            path.value.length === 0 &&\n            Array.isArray(value) &&\n            value.length === 0) {\n            return true;\n        }\n        return false;\n    }\n    function recursiveScanChild(path, bindings, scopeTypes) {\n        var node = path.value;\n        if (!node || Expression.check(node)) {\n            // Ignore falsy values and Expressions.\n        }\n        else if (namedTypes.FunctionDeclaration.check(node) &&\n            node.id !== null) {\n            addPattern(path.get(\"id\"), bindings);\n        }\n        else if (namedTypes.ClassDeclaration &&\n            namedTypes.ClassDeclaration.check(node)) {\n            addPattern(path.get(\"id\"), bindings);\n        }\n        else if (ScopeType.check(node)) {\n            if (namedTypes.CatchClause.check(node) &&\n                // TODO Broaden this to accept any pattern.\n                namedTypes.Identifier.check(node.param)) {\n                var catchParamName = node.param.name;\n                var hadBinding = hasOwn.call(bindings, catchParamName);\n                // Any declarations that occur inside the catch body that do\n                // not have the same name as the catch parameter should count\n                // as bindings in the outer scope.\n                recursiveScanScope(path.get(\"body\"), bindings, scopeTypes);\n                // If a new binding matching the catch parameter name was\n                // created while scanning the catch body, ignore it because it\n                // actually refers to the catch parameter and not the outer\n                // scope that we're currently scanning.\n                if (!hadBinding) {\n                    delete bindings[catchParamName];\n                }\n            }\n        }\n        else {\n            recursiveScanScope(path, bindings, scopeTypes);\n        }\n    }\n    function addPattern(patternPath, bindings) {\n        var pattern = patternPath.value;\n        namedTypes.Pattern.assert(pattern);\n        if (namedTypes.Identifier.check(pattern)) {\n            if (hasOwn.call(bindings, pattern.name)) {\n                bindings[pattern.name].push(patternPath);\n            }\n            else {\n                bindings[pattern.name] = [patternPath];\n            }\n        }\n        else if (namedTypes.AssignmentPattern &&\n            namedTypes.AssignmentPattern.check(pattern)) {\n            addPattern(patternPath.get('left'), bindings);\n        }\n        else if (namedTypes.ObjectPattern &&\n            namedTypes.ObjectPattern.check(pattern)) {\n            patternPath.get('properties').each(function (propertyPath) {\n                var property = propertyPath.value;\n                if (namedTypes.Pattern.check(property)) {\n                    addPattern(propertyPath, bindings);\n                }\n                else if (namedTypes.Property.check(property)) {\n                    addPattern(propertyPath.get('value'), bindings);\n                }\n                else if (namedTypes.SpreadProperty &&\n                    namedTypes.SpreadProperty.check(property)) {\n                    addPattern(propertyPath.get('argument'), bindings);\n                }\n            });\n        }\n        else if (namedTypes.ArrayPattern &&\n            namedTypes.ArrayPattern.check(pattern)) {\n            patternPath.get('elements').each(function (elementPath) {\n                var element = elementPath.value;\n                if (namedTypes.Pattern.check(element)) {\n                    addPattern(elementPath, bindings);\n                }\n                else if (namedTypes.SpreadElement &&\n                    namedTypes.SpreadElement.check(element)) {\n                    addPattern(elementPath.get(\"argument\"), bindings);\n                }\n            });\n        }\n        else if (namedTypes.PropertyPattern &&\n            namedTypes.PropertyPattern.check(pattern)) {\n            addPattern(patternPath.get('pattern'), bindings);\n        }\n        else if ((namedTypes.SpreadElementPattern &&\n            namedTypes.SpreadElementPattern.check(pattern)) ||\n            (namedTypes.RestElement &&\n                namedTypes.RestElement.check(pattern)) ||\n            (namedTypes.SpreadPropertyPattern &&\n                namedTypes.SpreadPropertyPattern.check(pattern))) {\n            addPattern(patternPath.get('argument'), bindings);\n        }\n    }\n    function addTypePattern(patternPath, types) {\n        var pattern = patternPath.value;\n        namedTypes.Pattern.assert(pattern);\n        if (namedTypes.Identifier.check(pattern)) {\n            if (hasOwn.call(types, pattern.name)) {\n                types[pattern.name].push(patternPath);\n            }\n            else {\n                types[pattern.name] = [patternPath];\n            }\n        }\n    }\n    Sp.lookup = function (name) {\n        for (var scope = this; scope; scope = scope.parent)\n            if (scope.declares(name))\n                break;\n        return scope;\n    };\n    Sp.lookupType = function (name) {\n        for (var scope = this; scope; scope = scope.parent)\n            if (scope.declaresType(name))\n                break;\n        return scope;\n    };\n    Sp.getGlobalScope = function () {\n        var scope = this;\n        while (!scope.isGlobal)\n            scope = scope.parent;\n        return scope;\n    };\n    return Scope;\n}\nexports.default = scopePlugin;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nvar path_1 = tslib_1.__importDefault(require(\"./path\"));\nvar scope_1 = tslib_1.__importDefault(require(\"./scope\"));\nfunction nodePathPlugin(fork) {\n    var types = fork.use(types_1.default);\n    var n = types.namedTypes;\n    var b = types.builders;\n    var isNumber = types.builtInTypes.number;\n    var isArray = types.builtInTypes.array;\n    var Path = fork.use(path_1.default);\n    var Scope = fork.use(scope_1.default);\n    var NodePath = function NodePath(value, parentPath, name) {\n        if (!(this instanceof NodePath)) {\n            throw new Error(\"NodePath constructor cannot be invoked without 'new'\");\n        }\n        Path.call(this, value, parentPath, name);\n    };\n    var NPp = NodePath.prototype = Object.create(Path.prototype, {\n        constructor: {\n            value: NodePath,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperties(NPp, {\n        node: {\n            get: function () {\n                Object.defineProperty(this, \"node\", {\n                    configurable: true,\n                    value: this._computeNode()\n                });\n                return this.node;\n            }\n        },\n        parent: {\n            get: function () {\n                Object.defineProperty(this, \"parent\", {\n                    configurable: true,\n                    value: this._computeParent()\n                });\n                return this.parent;\n            }\n        },\n        scope: {\n            get: function () {\n                Object.defineProperty(this, \"scope\", {\n                    configurable: true,\n                    value: this._computeScope()\n                });\n                return this.scope;\n            }\n        }\n    });\n    NPp.replace = function () {\n        delete this.node;\n        delete this.parent;\n        delete this.scope;\n        return Path.prototype.replace.apply(this, arguments);\n    };\n    NPp.prune = function () {\n        var remainingNodePath = this.parent;\n        this.replace();\n        return cleanUpNodesAfterPrune(remainingNodePath);\n    };\n    // The value of the first ancestor Path whose value is a Node.\n    NPp._computeNode = function () {\n        var value = this.value;\n        if (n.Node.check(value)) {\n            return value;\n        }\n        var pp = this.parentPath;\n        return pp && pp.node || null;\n    };\n    // The first ancestor Path whose value is a Node distinct from this.node.\n    NPp._computeParent = function () {\n        var value = this.value;\n        var pp = this.parentPath;\n        if (!n.Node.check(value)) {\n            while (pp && !n.Node.check(pp.value)) {\n                pp = pp.parentPath;\n            }\n            if (pp) {\n                pp = pp.parentPath;\n            }\n        }\n        while (pp && !n.Node.check(pp.value)) {\n            pp = pp.parentPath;\n        }\n        return pp || null;\n    };\n    // The closest enclosing scope that governs this node.\n    NPp._computeScope = function () {\n        var value = this.value;\n        var pp = this.parentPath;\n        var scope = pp && pp.scope;\n        if (n.Node.check(value) &&\n            Scope.isEstablishedBy(value)) {\n            scope = new Scope(this, scope);\n        }\n        return scope || null;\n    };\n    NPp.getValueProperty = function (name) {\n        return types.getFieldValue(this.value, name);\n    };\n    /**\n     * Determine whether this.node needs to be wrapped in parentheses in order\n     * for a parser to reproduce the same local AST structure.\n     *\n     * For instance, in the expression `(1 + 2) * 3`, the BinaryExpression\n     * whose operator is \"+\" needs parentheses, because `1 + 2 * 3` would\n     * parse differently.\n     *\n     * If assumeExpressionContext === true, we don't worry about edge cases\n     * like an anonymous FunctionExpression appearing lexically first in its\n     * enclosing statement and thus needing parentheses to avoid being parsed\n     * as a FunctionDeclaration with a missing name.\n     */\n    NPp.needsParens = function (assumeExpressionContext) {\n        var pp = this.parentPath;\n        if (!pp) {\n            return false;\n        }\n        var node = this.value;\n        // Only expressions need parentheses.\n        if (!n.Expression.check(node)) {\n            return false;\n        }\n        // Identifiers never need parentheses.\n        if (node.type === \"Identifier\") {\n            return false;\n        }\n        while (!n.Node.check(pp.value)) {\n            pp = pp.parentPath;\n            if (!pp) {\n                return false;\n            }\n        }\n        var parent = pp.value;\n        switch (node.type) {\n            case \"UnaryExpression\":\n            case \"SpreadElement\":\n            case \"SpreadProperty\":\n                return parent.type === \"MemberExpression\"\n                    && this.name === \"object\"\n                    && parent.object === node;\n            case \"BinaryExpression\":\n            case \"LogicalExpression\":\n                switch (parent.type) {\n                    case \"CallExpression\":\n                        return this.name === \"callee\"\n                            && parent.callee === node;\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                        return true;\n                    case \"MemberExpression\":\n                        return this.name === \"object\"\n                            && parent.object === node;\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\": {\n                        var n_1 = node;\n                        var po = parent.operator;\n                        var pp_1 = PRECEDENCE[po];\n                        var no = n_1.operator;\n                        var np = PRECEDENCE[no];\n                        if (pp_1 > np) {\n                            return true;\n                        }\n                        if (pp_1 === np && this.name === \"right\") {\n                            if (parent.right !== n_1) {\n                                throw new Error(\"Nodes must be equal\");\n                            }\n                            return true;\n                        }\n                    }\n                    default:\n                        return false;\n                }\n            case \"SequenceExpression\":\n                switch (parent.type) {\n                    case \"ForStatement\":\n                        // Although parentheses wouldn't hurt around sequence\n                        // expressions in the head of for loops, traditional style\n                        // dictates that e.g. i++, j++ should not be wrapped with\n                        // parentheses.\n                        return false;\n                    case \"ExpressionStatement\":\n                        return this.name !== \"expression\";\n                    default:\n                        // Otherwise err on the side of overparenthesization, adding\n                        // explicit exceptions above if this proves overzealous.\n                        return true;\n                }\n            case \"YieldExpression\":\n                switch (parent.type) {\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\":\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                    case \"CallExpression\":\n                    case \"MemberExpression\":\n                    case \"NewExpression\":\n                    case \"ConditionalExpression\":\n                    case \"YieldExpression\":\n                        return true;\n                    default:\n                        return false;\n                }\n            case \"Literal\":\n                return parent.type === \"MemberExpression\"\n                    && isNumber.check(node.value)\n                    && this.name === \"object\"\n                    && parent.object === node;\n            case \"AssignmentExpression\":\n            case \"ConditionalExpression\":\n                switch (parent.type) {\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\":\n                        return true;\n                    case \"CallExpression\":\n                        return this.name === \"callee\"\n                            && parent.callee === node;\n                    case \"ConditionalExpression\":\n                        return this.name === \"test\"\n                            && parent.test === node;\n                    case \"MemberExpression\":\n                        return this.name === \"object\"\n                            && parent.object === node;\n                    default:\n                        return false;\n                }\n            default:\n                if (parent.type === \"NewExpression\" &&\n                    this.name === \"callee\" &&\n                    parent.callee === node) {\n                    return containsCallExpression(node);\n                }\n        }\n        if (assumeExpressionContext !== true &&\n            !this.canBeFirstInStatement() &&\n            this.firstInStatement())\n            return true;\n        return false;\n    };\n    function isBinary(node) {\n        return n.BinaryExpression.check(node)\n            || n.LogicalExpression.check(node);\n    }\n    // @ts-ignore 'isUnaryLike' is declared but its value is never read. [6133]\n    function isUnaryLike(node) {\n        return n.UnaryExpression.check(node)\n            // I considered making SpreadElement and SpreadProperty subtypes\n            // of UnaryExpression, but they're not really Expression nodes.\n            || (n.SpreadElement && n.SpreadElement.check(node))\n            || (n.SpreadProperty && n.SpreadProperty.check(node));\n    }\n    var PRECEDENCE = {};\n    [[\"||\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"]\n    ].forEach(function (tier, i) {\n        tier.forEach(function (op) {\n            PRECEDENCE[op] = i;\n        });\n    });\n    function containsCallExpression(node) {\n        if (n.CallExpression.check(node)) {\n            return true;\n        }\n        if (isArray.check(node)) {\n            return node.some(containsCallExpression);\n        }\n        if (n.Node.check(node)) {\n            return types.someField(node, function (_name, child) {\n                return containsCallExpression(child);\n            });\n        }\n        return false;\n    }\n    NPp.canBeFirstInStatement = function () {\n        var node = this.node;\n        return !n.FunctionExpression.check(node)\n            && !n.ObjectExpression.check(node);\n    };\n    NPp.firstInStatement = function () {\n        return firstInStatement(this);\n    };\n    function firstInStatement(path) {\n        for (var node, parent; path.parent; path = path.parent) {\n            node = path.node;\n            parent = path.parent.node;\n            if (n.BlockStatement.check(parent) &&\n                path.parent.name === \"body\" &&\n                path.name === 0) {\n                if (parent.body[0] !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                return true;\n            }\n            if (n.ExpressionStatement.check(parent) &&\n                path.name === \"expression\") {\n                if (parent.expression !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                return true;\n            }\n            if (n.SequenceExpression.check(parent) &&\n                path.parent.name === \"expressions\" &&\n                path.name === 0) {\n                if (parent.expressions[0] !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.CallExpression.check(parent) &&\n                path.name === \"callee\") {\n                if (parent.callee !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.MemberExpression.check(parent) &&\n                path.name === \"object\") {\n                if (parent.object !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.ConditionalExpression.check(parent) &&\n                path.name === \"test\") {\n                if (parent.test !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (isBinary(parent) &&\n                path.name === \"left\") {\n                if (parent.left !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.UnaryExpression.check(parent) &&\n                !parent.prefix &&\n                path.name === \"argument\") {\n                if (parent.argument !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Pruning certain nodes will result in empty or incomplete nodes, here we clean those nodes up.\n     */\n    function cleanUpNodesAfterPrune(remainingNodePath) {\n        if (n.VariableDeclaration.check(remainingNodePath.node)) {\n            var declarations = remainingNodePath.get('declarations').value;\n            if (!declarations || declarations.length === 0) {\n                return remainingNodePath.prune();\n            }\n        }\n        else if (n.ExpressionStatement.check(remainingNodePath.node)) {\n            if (!remainingNodePath.get('expression').value) {\n                return remainingNodePath.prune();\n            }\n        }\n        else if (n.IfStatement.check(remainingNodePath.node)) {\n            cleanUpIfStatementAfterPrune(remainingNodePath);\n        }\n        return remainingNodePath;\n    }\n    function cleanUpIfStatementAfterPrune(ifStatement) {\n        var testExpression = ifStatement.get('test').value;\n        var alternate = ifStatement.get('alternate').value;\n        var consequent = ifStatement.get('consequent').value;\n        if (!consequent && !alternate) {\n            var testExpressionStatement = b.expressionStatement(testExpression);\n            ifStatement.replace(testExpressionStatement);\n        }\n        else if (!consequent && alternate) {\n            var negatedTestExpression = b.unaryExpression('!', testExpression, true);\n            if (n.UnaryExpression.check(testExpression) && testExpression.operator === '!') {\n                negatedTestExpression = testExpression.argument;\n            }\n            ifStatement.get(\"test\").replace(negatedTestExpression);\n            ifStatement.get(\"consequent\").replace(alternate);\n            ifStatement.get(\"alternate\").replace();\n        }\n    }\n    return NodePath;\n}\nexports.default = nodePathPlugin;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nvar node_path_1 = tslib_1.__importDefault(require(\"./node-path\"));\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction pathVisitorPlugin(fork) {\n    var types = fork.use(types_1.default);\n    var NodePath = fork.use(node_path_1.default);\n    var isArray = types.builtInTypes.array;\n    var isObject = types.builtInTypes.object;\n    var isFunction = types.builtInTypes.function;\n    var undefined;\n    var PathVisitor = function PathVisitor() {\n        if (!(this instanceof PathVisitor)) {\n            throw new Error(\"PathVisitor constructor cannot be invoked without 'new'\");\n        }\n        // Permanent state.\n        this._reusableContextStack = [];\n        this._methodNameTable = computeMethodNameTable(this);\n        this._shouldVisitComments =\n            hasOwn.call(this._methodNameTable, \"Block\") ||\n                hasOwn.call(this._methodNameTable, \"Line\");\n        this.Context = makeContextConstructor(this);\n        // State reset every time PathVisitor.prototype.visit is called.\n        this._visiting = false;\n        this._changeReported = false;\n    };\n    function computeMethodNameTable(visitor) {\n        var typeNames = Object.create(null);\n        for (var methodName in visitor) {\n            if (/^visit[A-Z]/.test(methodName)) {\n                typeNames[methodName.slice(\"visit\".length)] = true;\n            }\n        }\n        var supertypeTable = types.computeSupertypeLookupTable(typeNames);\n        var methodNameTable = Object.create(null);\n        var typeNameKeys = Object.keys(supertypeTable);\n        var typeNameCount = typeNameKeys.length;\n        for (var i = 0; i < typeNameCount; ++i) {\n            var typeName = typeNameKeys[i];\n            methodName = \"visit\" + supertypeTable[typeName];\n            if (isFunction.check(visitor[methodName])) {\n                methodNameTable[typeName] = methodName;\n            }\n        }\n        return methodNameTable;\n    }\n    PathVisitor.fromMethodsObject = function fromMethodsObject(methods) {\n        if (methods instanceof PathVisitor) {\n            return methods;\n        }\n        if (!isObject.check(methods)) {\n            // An empty visitor?\n            return new PathVisitor;\n        }\n        var Visitor = function Visitor() {\n            if (!(this instanceof Visitor)) {\n                throw new Error(\"Visitor constructor cannot be invoked without 'new'\");\n            }\n            PathVisitor.call(this);\n        };\n        var Vp = Visitor.prototype = Object.create(PVp);\n        Vp.constructor = Visitor;\n        extend(Vp, methods);\n        extend(Visitor, PathVisitor);\n        isFunction.assert(Visitor.fromMethodsObject);\n        isFunction.assert(Visitor.visit);\n        return new Visitor;\n    };\n    function extend(target, source) {\n        for (var property in source) {\n            if (hasOwn.call(source, property)) {\n                target[property] = source[property];\n            }\n        }\n        return target;\n    }\n    PathVisitor.visit = function visit(node, methods) {\n        return PathVisitor.fromMethodsObject(methods).visit(node);\n    };\n    var PVp = PathVisitor.prototype;\n    PVp.visit = function () {\n        if (this._visiting) {\n            throw new Error(\"Recursively calling visitor.visit(path) resets visitor state. \" +\n                \"Try this.visit(path) or this.traverse(path) instead.\");\n        }\n        // Private state that needs to be reset before every traversal.\n        this._visiting = true;\n        this._changeReported = false;\n        this._abortRequested = false;\n        var argc = arguments.length;\n        var args = new Array(argc);\n        for (var i = 0; i < argc; ++i) {\n            args[i] = arguments[i];\n        }\n        if (!(args[0] instanceof NodePath)) {\n            args[0] = new NodePath({ root: args[0] }).get(\"root\");\n        }\n        // Called with the same arguments as .visit.\n        this.reset.apply(this, args);\n        var didNotThrow;\n        try {\n            var root = this.visitWithoutReset(args[0]);\n            didNotThrow = true;\n        }\n        finally {\n            this._visiting = false;\n            if (!didNotThrow && this._abortRequested) {\n                // If this.visitWithoutReset threw an exception and\n                // this._abortRequested was set to true, return the root of\n                // the AST instead of letting the exception propagate, so that\n                // client code does not have to provide a try-catch block to\n                // intercept the AbortRequest exception.  Other kinds of\n                // exceptions will propagate without being intercepted and\n                // rethrown by a catch block, so their stacks will accurately\n                // reflect the original throwing context.\n                return args[0].value;\n            }\n        }\n        return root;\n    };\n    PVp.AbortRequest = function AbortRequest() { };\n    PVp.abort = function () {\n        var visitor = this;\n        visitor._abortRequested = true;\n        var request = new visitor.AbortRequest();\n        // If you decide to catch this exception and stop it from propagating,\n        // make sure to call its cancel method to avoid silencing other\n        // exceptions that might be thrown later in the traversal.\n        request.cancel = function () {\n            visitor._abortRequested = false;\n        };\n        throw request;\n    };\n    PVp.reset = function (_path /*, additional arguments */) {\n        // Empty stub; may be reassigned or overridden by subclasses.\n    };\n    PVp.visitWithoutReset = function (path) {\n        if (this instanceof this.Context) {\n            // Since this.Context.prototype === this, there's a chance we\n            // might accidentally call context.visitWithoutReset. If that\n            // happens, re-invoke the method against context.visitor.\n            return this.visitor.visitWithoutReset(path);\n        }\n        if (!(path instanceof NodePath)) {\n            throw new Error(\"\");\n        }\n        var value = path.value;\n        var methodName = value &&\n            typeof value === \"object\" &&\n            typeof value.type === \"string\" &&\n            this._methodNameTable[value.type];\n        if (methodName) {\n            var context = this.acquireContext(path);\n            try {\n                return context.invokeVisitorMethod(methodName);\n            }\n            finally {\n                this.releaseContext(context);\n            }\n        }\n        else {\n            // If there was no visitor method to call, visit the children of\n            // this node generically.\n            return visitChildren(path, this);\n        }\n    };\n    function visitChildren(path, visitor) {\n        if (!(path instanceof NodePath)) {\n            throw new Error(\"\");\n        }\n        if (!(visitor instanceof PathVisitor)) {\n            throw new Error(\"\");\n        }\n        var value = path.value;\n        if (isArray.check(value)) {\n            path.each(visitor.visitWithoutReset, visitor);\n        }\n        else if (!isObject.check(value)) {\n            // No children to visit.\n        }\n        else {\n            var childNames = types.getFieldNames(value);\n            // The .comments field of the Node type is hidden, so we only\n            // visit it if the visitor defines visitBlock or visitLine, and\n            // value.comments is defined.\n            if (visitor._shouldVisitComments &&\n                value.comments &&\n                childNames.indexOf(\"comments\") < 0) {\n                childNames.push(\"comments\");\n            }\n            var childCount = childNames.length;\n            var childPaths = [];\n            for (var i = 0; i < childCount; ++i) {\n                var childName = childNames[i];\n                if (!hasOwn.call(value, childName)) {\n                    value[childName] = types.getFieldValue(value, childName);\n                }\n                childPaths.push(path.get(childName));\n            }\n            for (var i = 0; i < childCount; ++i) {\n                visitor.visitWithoutReset(childPaths[i]);\n            }\n        }\n        return path.value;\n    }\n    PVp.acquireContext = function (path) {\n        if (this._reusableContextStack.length === 0) {\n            return new this.Context(path);\n        }\n        return this._reusableContextStack.pop().reset(path);\n    };\n    PVp.releaseContext = function (context) {\n        if (!(context instanceof this.Context)) {\n            throw new Error(\"\");\n        }\n        this._reusableContextStack.push(context);\n        context.currentPath = null;\n    };\n    PVp.reportChanged = function () {\n        this._changeReported = true;\n    };\n    PVp.wasChangeReported = function () {\n        return this._changeReported;\n    };\n    function makeContextConstructor(visitor) {\n        function Context(path) {\n            if (!(this instanceof Context)) {\n                throw new Error(\"\");\n            }\n            if (!(this instanceof PathVisitor)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            Object.defineProperty(this, \"visitor\", {\n                value: visitor,\n                writable: false,\n                enumerable: true,\n                configurable: false\n            });\n            this.currentPath = path;\n            this.needToCallTraverse = true;\n            Object.seal(this);\n        }\n        if (!(visitor instanceof PathVisitor)) {\n            throw new Error(\"\");\n        }\n        // Note that the visitor object is the prototype of Context.prototype,\n        // so all visitor methods are inherited by context objects.\n        var Cp = Context.prototype = Object.create(visitor);\n        Cp.constructor = Context;\n        extend(Cp, sharedContextProtoMethods);\n        return Context;\n    }\n    // Every PathVisitor has a different this.Context constructor and\n    // this.Context.prototype object, but those prototypes can all use the\n    // same reset, invokeVisitorMethod, and traverse function objects.\n    var sharedContextProtoMethods = Object.create(null);\n    sharedContextProtoMethods.reset =\n        function reset(path) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            this.currentPath = path;\n            this.needToCallTraverse = true;\n            return this;\n        };\n    sharedContextProtoMethods.invokeVisitorMethod =\n        function invokeVisitorMethod(methodName) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(this.currentPath instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            var result = this.visitor[methodName].call(this, this.currentPath);\n            if (result === false) {\n                // Visitor methods return false to indicate that they have handled\n                // their own traversal needs, and we should not complain if\n                // this.needToCallTraverse is still true.\n                this.needToCallTraverse = false;\n            }\n            else if (result !== undefined) {\n                // Any other non-undefined value returned from the visitor method\n                // is interpreted as a replacement value.\n                this.currentPath = this.currentPath.replace(result)[0];\n                if (this.needToCallTraverse) {\n                    // If this.traverse still hasn't been called, visit the\n                    // children of the replacement node.\n                    this.traverse(this.currentPath);\n                }\n            }\n            if (this.needToCallTraverse !== false) {\n                throw new Error(\"Must either call this.traverse or return false in \" + methodName);\n            }\n            var path = this.currentPath;\n            return path && path.value;\n        };\n    sharedContextProtoMethods.traverse =\n        function traverse(path, newVisitor) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            if (!(this.currentPath instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            this.needToCallTraverse = false;\n            return visitChildren(path, PathVisitor.fromMethodsObject(newVisitor || this.visitor));\n        };\n    sharedContextProtoMethods.visit =\n        function visit(path, newVisitor) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            if (!(this.currentPath instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            this.needToCallTraverse = false;\n            return PathVisitor.fromMethodsObject(newVisitor || this.visitor).visitWithoutReset(path);\n        };\n    sharedContextProtoMethods.reportChanged = function reportChanged() {\n        this.visitor.reportChanged();\n    };\n    sharedContextProtoMethods.abort = function abort() {\n        this.needToCallTraverse = false;\n        this.visitor.abort();\n    };\n    return PathVisitor;\n}\nexports.default = pathVisitorPlugin;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var getFieldNames = types.getFieldNames;\n    var getFieldValue = types.getFieldValue;\n    var isArray = types.builtInTypes.array;\n    var isObject = types.builtInTypes.object;\n    var isDate = types.builtInTypes.Date;\n    var isRegExp = types.builtInTypes.RegExp;\n    var hasOwn = Object.prototype.hasOwnProperty;\n    function astNodesAreEquivalent(a, b, problemPath) {\n        if (isArray.check(problemPath)) {\n            problemPath.length = 0;\n        }\n        else {\n            problemPath = null;\n        }\n        return areEquivalent(a, b, problemPath);\n    }\n    astNodesAreEquivalent.assert = function (a, b) {\n        var problemPath = [];\n        if (!astNodesAreEquivalent(a, b, problemPath)) {\n            if (problemPath.length === 0) {\n                if (a !== b) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n            }\n            else {\n                throw new Error(\"Nodes differ in the following path: \" +\n                    problemPath.map(subscriptForProperty).join(\"\"));\n            }\n        }\n    };\n    function subscriptForProperty(property) {\n        if (/[_$a-z][_$a-z0-9]*/i.test(property)) {\n            return \".\" + property;\n        }\n        return \"[\" + JSON.stringify(property) + \"]\";\n    }\n    function areEquivalent(a, b, problemPath) {\n        if (a === b) {\n            return true;\n        }\n        if (isArray.check(a)) {\n            return arraysAreEquivalent(a, b, problemPath);\n        }\n        if (isObject.check(a)) {\n            return objectsAreEquivalent(a, b, problemPath);\n        }\n        if (isDate.check(a)) {\n            return isDate.check(b) && (+a === +b);\n        }\n        if (isRegExp.check(a)) {\n            return isRegExp.check(b) && (a.source === b.source &&\n                a.global === b.global &&\n                a.multiline === b.multiline &&\n                a.ignoreCase === b.ignoreCase);\n        }\n        return a == b;\n    }\n    function arraysAreEquivalent(a, b, problemPath) {\n        isArray.assert(a);\n        var aLength = a.length;\n        if (!isArray.check(b) || b.length !== aLength) {\n            if (problemPath) {\n                problemPath.push(\"length\");\n            }\n            return false;\n        }\n        for (var i = 0; i < aLength; ++i) {\n            if (problemPath) {\n                problemPath.push(i);\n            }\n            if (i in a !== i in b) {\n                return false;\n            }\n            if (!areEquivalent(a[i], b[i], problemPath)) {\n                return false;\n            }\n            if (problemPath) {\n                var problemPathTail = problemPath.pop();\n                if (problemPathTail !== i) {\n                    throw new Error(\"\" + problemPathTail);\n                }\n            }\n        }\n        return true;\n    }\n    function objectsAreEquivalent(a, b, problemPath) {\n        isObject.assert(a);\n        if (!isObject.check(b)) {\n            return false;\n        }\n        // Fast path for a common property of AST nodes.\n        if (a.type !== b.type) {\n            if (problemPath) {\n                problemPath.push(\"type\");\n            }\n            return false;\n        }\n        var aNames = getFieldNames(a);\n        var aNameCount = aNames.length;\n        var bNames = getFieldNames(b);\n        var bNameCount = bNames.length;\n        if (aNameCount === bNameCount) {\n            for (var i = 0; i < aNameCount; ++i) {\n                var name = aNames[i];\n                var aChild = getFieldValue(a, name);\n                var bChild = getFieldValue(b, name);\n                if (problemPath) {\n                    problemPath.push(name);\n                }\n                if (!areEquivalent(aChild, bChild, problemPath)) {\n                    return false;\n                }\n                if (problemPath) {\n                    var problemPathTail = problemPath.pop();\n                    if (problemPathTail !== name) {\n                        throw new Error(\"\" + problemPathTail);\n                    }\n                }\n            }\n            return true;\n        }\n        if (!problemPath) {\n            return false;\n        }\n        // Since aNameCount !== bNameCount, we need to find some name that's\n        // missing in aNames but present in bNames, or vice-versa.\n        var seenNames = Object.create(null);\n        for (i = 0; i < aNameCount; ++i) {\n            seenNames[aNames[i]] = true;\n        }\n        for (i = 0; i < bNameCount; ++i) {\n            name = bNames[i];\n            if (!hasOwn.call(seenNames, name)) {\n                problemPath.push(name);\n                return false;\n            }\n            delete seenNames[name];\n        }\n        for (name in seenNames) {\n            problemPath.push(name);\n            break;\n        }\n        return false;\n    }\n    return astNodesAreEquivalent;\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./lib/types\"));\nvar path_visitor_1 = tslib_1.__importDefault(require(\"./lib/path-visitor\"));\nvar equiv_1 = tslib_1.__importDefault(require(\"./lib/equiv\"));\nvar path_1 = tslib_1.__importDefault(require(\"./lib/path\"));\nvar node_path_1 = tslib_1.__importDefault(require(\"./lib/node-path\"));\nfunction default_1(defs) {\n    var fork = createFork();\n    var types = fork.use(types_1.default);\n    defs.forEach(fork.use);\n    types.finalize();\n    var PathVisitor = fork.use(path_visitor_1.default);\n    return {\n        Type: types.Type,\n        builtInTypes: types.builtInTypes,\n        namedTypes: types.namedTypes,\n        builders: types.builders,\n        defineMethod: types.defineMethod,\n        getFieldNames: types.getFieldNames,\n        getFieldValue: types.getFieldValue,\n        eachField: types.eachField,\n        someField: types.someField,\n        getSupertypeNames: types.getSupertypeNames,\n        getBuilderName: types.getBuilderName,\n        astNodesAreEquivalent: fork.use(equiv_1.default),\n        finalize: types.finalize,\n        Path: fork.use(path_1.default),\n        NodePath: fork.use(node_path_1.default),\n        PathVisitor: PathVisitor,\n        use: fork.use,\n        visit: PathVisitor.visit,\n    };\n}\nexports.default = default_1;\nfunction createFork() {\n    var used = [];\n    var usedResult = [];\n    function use(plugin) {\n        var idx = used.indexOf(plugin);\n        if (idx === -1) {\n            idx = used.length;\n            used.push(plugin);\n            usedResult[idx] = plugin(fork);\n        }\n        return usedResult[idx];\n    }\n    var fork = { use: use };\n    return fork;\n}\nmodule.exports = exports[\"default\"];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogicalOperators = exports.AssignmentOperators = exports.BinaryOperators = void 0;\nexports.BinaryOperators = [\n    \"==\", \"!=\", \"===\", \"!==\",\n    \"<\", \"<=\", \">\", \">=\",\n    \"<<\", \">>\", \">>>\",\n    \"+\", \"-\", \"*\", \"/\", \"%\",\n    \"&\",\n    \"|\", \"^\", \"in\",\n    \"instanceof\",\n];\nexports.AssignmentOperators = [\n    \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\",\n    \"<<=\", \">>=\", \">>>=\",\n    \"|=\", \"^=\", \"&=\",\n];\nexports.LogicalOperators = [\n    \"||\", \"&&\",\n];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var builtin = types.builtInTypes;\n    var isNumber = builtin.number;\n    // An example of constructing a new type with arbitrary constraints from\n    // an existing type.\n    function geq(than) {\n        return Type.from(function (value) { return isNumber.check(value) && value >= than; }, isNumber + \" >= \" + than);\n    }\n    ;\n    // Default value-returning functions that may optionally be passed as a\n    // third argument to Def.prototype.field.\n    var defaults = {\n        // Functions were used because (among other reasons) that's the most\n        // elegant way to allow for the emptyArray one always to give a new\n        // array instance.\n        \"null\": function () { return null; },\n        \"emptyArray\": function () { return []; },\n        \"false\": function () { return false; },\n        \"true\": function () { return true; },\n        \"undefined\": function () { },\n        \"use strict\": function () { return \"use strict\"; }\n    };\n    var naiveIsPrimitive = Type.or(builtin.string, builtin.number, builtin.boolean, builtin.null, builtin.undefined);\n    var isPrimitive = Type.from(function (value) {\n        if (value === null)\n            return true;\n        var type = typeof value;\n        if (type === \"object\" ||\n            type === \"function\") {\n            return false;\n        }\n        return true;\n    }, naiveIsPrimitive.toString());\n    return {\n        geq: geq,\n        defaults: defaults,\n        isPrimitive: isPrimitive,\n    };\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_operators_1 = require(\"./core-operators\");\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var def = Type.def;\n    var or = Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    var geq = shared.geq;\n    // Abstract supertype of all syntactic entities that are allowed to have a\n    // .loc field.\n    def(\"Printable\")\n        .field(\"loc\", or(def(\"SourceLocation\"), null), defaults[\"null\"], true);\n    def(\"Node\")\n        .bases(\"Printable\")\n        .field(\"type\", String)\n        .field(\"comments\", or([def(\"Comment\")], null), defaults[\"null\"], true);\n    def(\"SourceLocation\")\n        .field(\"start\", def(\"Position\"))\n        .field(\"end\", def(\"Position\"))\n        .field(\"source\", or(String, null), defaults[\"null\"]);\n    def(\"Position\")\n        .field(\"line\", geq(1))\n        .field(\"column\", geq(0));\n    def(\"File\")\n        .bases(\"Node\")\n        .build(\"program\", \"name\")\n        .field(\"program\", def(\"Program\"))\n        .field(\"name\", or(String, null), defaults[\"null\"]);\n    def(\"Program\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"Function\")\n        .bases(\"Node\")\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"params\", [def(\"Pattern\")])\n        .field(\"body\", def(\"BlockStatement\"))\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"]);\n    def(\"Statement\").bases(\"Node\");\n    // The empty .build() here means that an EmptyStatement can be constructed\n    // (i.e. it's not abstract) but that it needs no arguments.\n    def(\"EmptyStatement\").bases(\"Statement\").build();\n    def(\"BlockStatement\")\n        .bases(\"Statement\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    // TODO Figure out how to silently coerce Expressions to\n    // ExpressionStatements where a Statement was expected.\n    def(\"ExpressionStatement\")\n        .bases(\"Statement\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"IfStatement\")\n        .bases(\"Statement\")\n        .build(\"test\", \"consequent\", \"alternate\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"consequent\", def(\"Statement\"))\n        .field(\"alternate\", or(def(\"Statement\"), null), defaults[\"null\"]);\n    def(\"LabeledStatement\")\n        .bases(\"Statement\")\n        .build(\"label\", \"body\")\n        .field(\"label\", def(\"Identifier\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"BreakStatement\")\n        .bases(\"Statement\")\n        .build(\"label\")\n        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    def(\"ContinueStatement\")\n        .bases(\"Statement\")\n        .build(\"label\")\n        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    def(\"WithStatement\")\n        .bases(\"Statement\")\n        .build(\"object\", \"body\")\n        .field(\"object\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"SwitchStatement\")\n        .bases(\"Statement\")\n        .build(\"discriminant\", \"cases\", \"lexical\")\n        .field(\"discriminant\", def(\"Expression\"))\n        .field(\"cases\", [def(\"SwitchCase\")])\n        .field(\"lexical\", Boolean, defaults[\"false\"]);\n    def(\"ReturnStatement\")\n        .bases(\"Statement\")\n        .build(\"argument\")\n        .field(\"argument\", or(def(\"Expression\"), null));\n    def(\"ThrowStatement\")\n        .bases(\"Statement\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"TryStatement\")\n        .bases(\"Statement\")\n        .build(\"block\", \"handler\", \"finalizer\")\n        .field(\"block\", def(\"BlockStatement\"))\n        .field(\"handler\", or(def(\"CatchClause\"), null), function () {\n        return this.handlers && this.handlers[0] || null;\n    })\n        .field(\"handlers\", [def(\"CatchClause\")], function () {\n        return this.handler ? [this.handler] : [];\n    }, true) // Indicates this field is hidden from eachField iteration.\n        .field(\"guardedHandlers\", [def(\"CatchClause\")], defaults.emptyArray)\n        .field(\"finalizer\", or(def(\"BlockStatement\"), null), defaults[\"null\"]);\n    def(\"CatchClause\")\n        .bases(\"Node\")\n        .build(\"param\", \"guard\", \"body\")\n        .field(\"param\", def(\"Pattern\"))\n        .field(\"guard\", or(def(\"Expression\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"BlockStatement\"));\n    def(\"WhileStatement\")\n        .bases(\"Statement\")\n        .build(\"test\", \"body\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"DoWhileStatement\")\n        .bases(\"Statement\")\n        .build(\"body\", \"test\")\n        .field(\"body\", def(\"Statement\"))\n        .field(\"test\", def(\"Expression\"));\n    def(\"ForStatement\")\n        .bases(\"Statement\")\n        .build(\"init\", \"test\", \"update\", \"body\")\n        .field(\"init\", or(def(\"VariableDeclaration\"), def(\"Expression\"), null))\n        .field(\"test\", or(def(\"Expression\"), null))\n        .field(\"update\", or(def(\"Expression\"), null))\n        .field(\"body\", def(\"Statement\"));\n    def(\"ForInStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"DebuggerStatement\").bases(\"Statement\").build();\n    def(\"Declaration\").bases(\"Statement\");\n    def(\"FunctionDeclaration\")\n        .bases(\"Function\", \"Declaration\")\n        .build(\"id\", \"params\", \"body\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"FunctionExpression\")\n        .bases(\"Function\", \"Expression\")\n        .build(\"id\", \"params\", \"body\");\n    def(\"VariableDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"kind\", \"declarations\")\n        .field(\"kind\", or(\"var\", \"let\", \"const\"))\n        .field(\"declarations\", [def(\"VariableDeclarator\")]);\n    def(\"VariableDeclarator\")\n        .bases(\"Node\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Pattern\"))\n        .field(\"init\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"Expression\").bases(\"Node\");\n    def(\"ThisExpression\").bases(\"Expression\").build();\n    def(\"ArrayExpression\")\n        .bases(\"Expression\")\n        .build(\"elements\")\n        .field(\"elements\", [or(def(\"Expression\"), null)]);\n    def(\"ObjectExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [def(\"Property\")]);\n    // TODO Not in the Mozilla Parser API, but used by Esprima.\n    def(\"Property\")\n        .bases(\"Node\") // Want to be able to visit Property Nodes.\n        .build(\"kind\", \"key\", \"value\")\n        .field(\"kind\", or(\"init\", \"get\", \"set\"))\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n        .field(\"value\", def(\"Expression\"));\n    def(\"SequenceExpression\")\n        .bases(\"Expression\")\n        .build(\"expressions\")\n        .field(\"expressions\", [def(\"Expression\")]);\n    var UnaryOperator = or(\"-\", \"+\", \"!\", \"~\", \"typeof\", \"void\", \"delete\");\n    def(\"UnaryExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"argument\", \"prefix\")\n        .field(\"operator\", UnaryOperator)\n        .field(\"argument\", def(\"Expression\"))\n        // Esprima doesn't bother with this field, presumably because it's\n        // always true for unary operators.\n        .field(\"prefix\", Boolean, defaults[\"true\"]);\n    var BinaryOperator = or.apply(void 0, core_operators_1.BinaryOperators);\n    def(\"BinaryExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", BinaryOperator)\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n    var AssignmentOperator = or.apply(void 0, core_operators_1.AssignmentOperators);\n    def(\"AssignmentExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", AssignmentOperator)\n        .field(\"left\", or(def(\"Pattern\"), def(\"MemberExpression\")))\n        .field(\"right\", def(\"Expression\"));\n    var UpdateOperator = or(\"++\", \"--\");\n    def(\"UpdateExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"argument\", \"prefix\")\n        .field(\"operator\", UpdateOperator)\n        .field(\"argument\", def(\"Expression\"))\n        .field(\"prefix\", Boolean);\n    var LogicalOperator = or.apply(void 0, core_operators_1.LogicalOperators);\n    def(\"LogicalExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", LogicalOperator)\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n    def(\"ConditionalExpression\")\n        .bases(\"Expression\")\n        .build(\"test\", \"consequent\", \"alternate\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"consequent\", def(\"Expression\"))\n        .field(\"alternate\", def(\"Expression\"));\n    def(\"NewExpression\")\n        .bases(\"Expression\")\n        .build(\"callee\", \"arguments\")\n        .field(\"callee\", def(\"Expression\"))\n        // The Mozilla Parser API gives this type as [or(def(\"Expression\"),\n        // null)], but null values don't really make sense at the call site.\n        // TODO Report this nonsense.\n        .field(\"arguments\", [def(\"Expression\")]);\n    def(\"CallExpression\")\n        .bases(\"Expression\")\n        .build(\"callee\", \"arguments\")\n        .field(\"callee\", def(\"Expression\"))\n        // See comment for NewExpression above.\n        .field(\"arguments\", [def(\"Expression\")]);\n    def(\"MemberExpression\")\n        .bases(\"Expression\")\n        .build(\"object\", \"property\", \"computed\")\n        .field(\"object\", def(\"Expression\"))\n        .field(\"property\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean, function () {\n        var type = this.property.type;\n        if (type === 'Literal' ||\n            type === 'MemberExpression' ||\n            type === 'BinaryExpression') {\n            return true;\n        }\n        return false;\n    });\n    def(\"Pattern\").bases(\"Node\");\n    def(\"SwitchCase\")\n        .bases(\"Node\")\n        .build(\"test\", \"consequent\")\n        .field(\"test\", or(def(\"Expression\"), null))\n        .field(\"consequent\", [def(\"Statement\")]);\n    def(\"Identifier\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"name\")\n        .field(\"name\", String)\n        .field(\"optional\", Boolean, defaults[\"false\"]);\n    def(\"Literal\")\n        .bases(\"Expression\")\n        .build(\"value\")\n        .field(\"value\", or(String, Boolean, null, Number, RegExp))\n        .field(\"regex\", or({\n        pattern: String,\n        flags: String\n    }, null), function () {\n        if (this.value instanceof RegExp) {\n            var flags = \"\";\n            if (this.value.ignoreCase)\n                flags += \"i\";\n            if (this.value.multiline)\n                flags += \"m\";\n            if (this.value.global)\n                flags += \"g\";\n            return {\n                pattern: this.value.source,\n                flags: flags\n            };\n        }\n        return null;\n    });\n    // Abstract (non-buildable) comment supertype. Not a Node.\n    def(\"Comment\")\n        .bases(\"Printable\")\n        .field(\"value\", String)\n        // A .leading comment comes before the node, whereas a .trailing\n        // comment comes after it. These two fields should not both be true,\n        // but they might both be false when the comment falls inside a node\n        // and the node has no children for the comment to lead or trail,\n        // e.g. { /*dangling*/ }.\n        .field(\"leading\", Boolean, defaults[\"true\"])\n        .field(\"trailing\", Boolean, defaults[\"false\"]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = tslib_1.__importDefault(require(\"./core\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(core_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"Function\")\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"expression\", Boolean, defaults[\"false\"])\n        .field(\"defaults\", [or(def(\"Expression\"), null)], defaults.emptyArray)\n        // Legacy\n        .field(\"rest\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    // The ESTree way of representing a ...rest parameter.\n    def(\"RestElement\")\n        .bases(\"Pattern\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Pattern\"))\n        .field(\"typeAnnotation\", // for Babylon. Flow parser puts it on the identifier\n    or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null), defaults[\"null\"]);\n    def(\"SpreadElementPattern\")\n        .bases(\"Pattern\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Pattern\"));\n    def(\"FunctionDeclaration\")\n        .build(\"id\", \"params\", \"body\", \"generator\", \"expression\")\n        // May be `null` in the context of `export default function () {}`\n        .field(\"id\", or(def(\"Identifier\"), null));\n    def(\"FunctionExpression\")\n        .build(\"id\", \"params\", \"body\", \"generator\", \"expression\");\n    def(\"ArrowFunctionExpression\")\n        .bases(\"Function\", \"Expression\")\n        .build(\"params\", \"body\", \"expression\")\n        // The forced null value here is compatible with the overridden\n        // definition of the \"id\" field in the Function interface.\n        .field(\"id\", null, defaults[\"null\"])\n        // Arrow function bodies are allowed to be expressions.\n        .field(\"body\", or(def(\"BlockStatement\"), def(\"Expression\")))\n        // The current spec forbids arrow generators, so I have taken the\n        // liberty of enforcing that. TODO Report this.\n        .field(\"generator\", false, defaults[\"false\"]);\n    def(\"ForOfStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Pattern\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"YieldExpression\")\n        .bases(\"Expression\")\n        .build(\"argument\", \"delegate\")\n        .field(\"argument\", or(def(\"Expression\"), null))\n        .field(\"delegate\", Boolean, defaults[\"false\"]);\n    def(\"GeneratorExpression\")\n        .bases(\"Expression\")\n        .build(\"body\", \"blocks\", \"filter\")\n        .field(\"body\", def(\"Expression\"))\n        .field(\"blocks\", [def(\"ComprehensionBlock\")])\n        .field(\"filter\", or(def(\"Expression\"), null));\n    def(\"ComprehensionExpression\")\n        .bases(\"Expression\")\n        .build(\"body\", \"blocks\", \"filter\")\n        .field(\"body\", def(\"Expression\"))\n        .field(\"blocks\", [def(\"ComprehensionBlock\")])\n        .field(\"filter\", or(def(\"Expression\"), null));\n    def(\"ComprehensionBlock\")\n        .bases(\"Node\")\n        .build(\"left\", \"right\", \"each\")\n        .field(\"left\", def(\"Pattern\"))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"each\", Boolean);\n    def(\"Property\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n        .field(\"method\", Boolean, defaults[\"false\"])\n        .field(\"shorthand\", Boolean, defaults[\"false\"])\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    def(\"ObjectProperty\")\n        .field(\"shorthand\", Boolean, defaults[\"false\"]);\n    def(\"PropertyPattern\")\n        .bases(\"Pattern\")\n        .build(\"key\", \"pattern\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"pattern\", def(\"Pattern\"))\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    def(\"ObjectPattern\")\n        .bases(\"Pattern\")\n        .build(\"properties\")\n        .field(\"properties\", [or(def(\"PropertyPattern\"), def(\"Property\"))]);\n    def(\"ArrayPattern\")\n        .bases(\"Pattern\")\n        .build(\"elements\")\n        .field(\"elements\", [or(def(\"Pattern\"), null)]);\n    def(\"SpreadElement\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ArrayExpression\")\n        .field(\"elements\", [or(def(\"Expression\"), def(\"SpreadElement\"), def(\"RestElement\"), null)]);\n    def(\"NewExpression\")\n        .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n    def(\"CallExpression\")\n        .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n    // Note: this node type is *not* an AssignmentExpression with a Pattern on\n    // the left-hand side! The existing AssignmentExpression type already\n    // supports destructuring assignments. AssignmentPattern nodes may appear\n    // wherever a Pattern is allowed, and the right-hand side represents a\n    // default value to be destructured against the left-hand side, if no\n    // value is otherwise provided. For example: default parameter values.\n    def(\"AssignmentPattern\")\n        .bases(\"Pattern\")\n        .build(\"left\", \"right\")\n        .field(\"left\", def(\"Pattern\"))\n        .field(\"right\", def(\"Expression\"));\n    def(\"MethodDefinition\")\n        .bases(\"Declaration\")\n        .build(\"kind\", \"key\", \"value\", \"static\")\n        .field(\"kind\", or(\"constructor\", \"method\", \"get\", \"set\"))\n        .field(\"key\", def(\"Expression\"))\n        .field(\"value\", def(\"Function\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"));\n    def(\"ClassProperty\")\n        .bases(\"Declaration\")\n        .build(\"key\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    def(\"ClassPropertyDefinition\") // static property\n        .bases(\"Declaration\")\n        .build(\"definition\")\n        // Yes, Virginia, circular definitions are permitted.\n        .field(\"definition\", ClassBodyElement);\n    def(\"ClassBody\")\n        .bases(\"Declaration\")\n        .build(\"body\")\n        .field(\"body\", [ClassBodyElement]);\n    def(\"ClassDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\", \"superClass\")\n        .field(\"id\", or(def(\"Identifier\"), null))\n        .field(\"body\", def(\"ClassBody\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"ClassExpression\")\n        .bases(\"Expression\")\n        .build(\"id\", \"body\", \"superClass\")\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"ClassBody\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"Super\")\n        .bases(\"Expression\")\n        .build();\n    // Specifier and ModuleSpecifier are abstract non-standard types\n    // introduced for definitional convenience.\n    def(\"Specifier\").bases(\"Node\");\n    // This supertype is shared/abused by both def/babel.js and\n    // def/esprima.js. In the future, it will be possible to load only one set\n    // of definitions appropriate for a given parser, but until then we must\n    // rely on default functions to reconcile the conflicting AST formats.\n    def(\"ModuleSpecifier\")\n        .bases(\"Specifier\")\n        // This local field is used by Babel/Acorn. It should not technically\n        // be optional in the Babel/Acorn AST format, but it must be optional\n        // in the Esprima AST format.\n        .field(\"local\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        // The id and name fields are used by Esprima. The id field should not\n        // technically be optional in the Esprima AST format, but it must be\n        // optional in the Babel/Acorn AST format.\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"name\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    // import {<id [as name]>} from ...;\n    def(\"ImportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"imported\", \"local\")\n        .field(\"imported\", def(\"Identifier\"));\n    // import <id> from ...;\n    def(\"ImportDefaultSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\");\n    // import <* as id> from ...;\n    def(\"ImportNamespaceSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\");\n    def(\"ImportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"specifiers\", \"source\", \"importKind\")\n        .field(\"specifiers\", [or(def(\"ImportSpecifier\"), def(\"ImportNamespaceSpecifier\"), def(\"ImportDefaultSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", def(\"Literal\"))\n        .field(\"importKind\", or(\"value\", \"type\"), function () {\n        return \"value\";\n    });\n    def(\"ExportNamedDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"declaration\", \"specifiers\", \"source\")\n        .field(\"declaration\", or(def(\"Declaration\"), null))\n        .field(\"specifiers\", [def(\"ExportSpecifier\")], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"ExportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\", \"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"ExportDefaultDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"declaration\")\n        .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\")));\n    def(\"ExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"source\")\n        .field(\"source\", def(\"Literal\"));\n    def(\"TaggedTemplateExpression\")\n        .bases(\"Expression\")\n        .build(\"tag\", \"quasi\")\n        .field(\"tag\", def(\"Expression\"))\n        .field(\"quasi\", def(\"TemplateLiteral\"));\n    def(\"TemplateLiteral\")\n        .bases(\"Expression\")\n        .build(\"quasis\", \"expressions\")\n        .field(\"quasis\", [def(\"TemplateElement\")])\n        .field(\"expressions\", [def(\"Expression\")]);\n    def(\"TemplateElement\")\n        .bases(\"Node\")\n        .build(\"value\", \"tail\")\n        .field(\"value\", { \"cooked\": String, \"raw\": String })\n        .field(\"tail\", Boolean);\n    def(\"MetaProperty\")\n        .bases(\"Expression\")\n        .build(\"meta\", \"property\")\n        .field(\"meta\", def(\"Identifier\"))\n        .field(\"property\", def(\"Identifier\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_operators_1 = require(\"./core-operators\");\nvar es6_1 = tslib_1.__importDefault(require(\"./es6\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nfunction default_1(fork) {\n    fork.use(es6_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var BinaryOperator = or.apply(void 0, tslib_1.__spreadArrays(core_operators_1.BinaryOperators, [\"**\"]));\n    def(\"BinaryExpression\")\n        .field(\"operator\", BinaryOperator);\n    var AssignmentOperator = or.apply(void 0, tslib_1.__spreadArrays(core_operators_1.AssignmentOperators, [\"**=\"]));\n    def(\"AssignmentExpression\")\n        .field(\"operator\", AssignmentOperator);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2016_1 = tslib_1.__importDefault(require(\"./es2016\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2016_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"Function\")\n        .field(\"async\", Boolean, defaults[\"false\"]);\n    def(\"AwaitExpression\")\n        .bases(\"Expression\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2017_1 = tslib_1.__importDefault(require(\"./es2017\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2017_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"ForOfStatement\")\n        .field(\"await\", Boolean, defaults[\"false\"]);\n    // Legacy\n    def(\"SpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ObjectExpression\")\n        .field(\"properties\", [or(def(\"Property\"), def(\"SpreadProperty\"), // Legacy\n        def(\"SpreadElement\"))]);\n    def(\"TemplateElement\")\n        .field(\"value\", { \"cooked\": or(String, null), \"raw\": String });\n    // Legacy\n    def(\"SpreadPropertyPattern\")\n        .bases(\"Pattern\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Pattern\"));\n    def(\"ObjectPattern\")\n        .field(\"properties\", [or(def(\"PropertyPattern\"), def(\"Property\"), def(\"RestElement\"), def(\"SpreadPropertyPattern\"))]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2018_1 = tslib_1.__importDefault(require(\"./es2018\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2018_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"CatchClause\")\n        .field(\"param\", or(def(\"Pattern\"), null), defaults[\"null\"]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_operators_1 = require(\"./core-operators\");\nvar es2019_1 = tslib_1.__importDefault(require(\"./es2019\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2019_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    def(\"ImportExpression\")\n        .bases(\"Expression\")\n        .build(\"source\")\n        .field(\"source\", def(\"Expression\"));\n    def(\"ExportAllDeclaration\")\n        .build(\"source\", \"exported\")\n        .field(\"source\", def(\"Literal\"))\n        .field(\"exported\", or(def(\"Identifier\"), null));\n    // Optional chaining\n    def(\"ChainElement\")\n        .bases(\"Node\")\n        .field(\"optional\", Boolean, defaults[\"false\"]);\n    def(\"CallExpression\")\n        .bases(\"Expression\", \"ChainElement\");\n    def(\"MemberExpression\")\n        .bases(\"Expression\", \"ChainElement\");\n    def(\"ChainExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"ChainElement\"));\n    def(\"OptionalCallExpression\")\n        .bases(\"CallExpression\")\n        .build(\"callee\", \"arguments\", \"optional\")\n        .field(\"optional\", Boolean, defaults[\"true\"]);\n    // Deprecated optional chaining type, doesn't work with babelParser@7.11.0 or newer\n    def(\"OptionalMemberExpression\")\n        .bases(\"MemberExpression\")\n        .build(\"object\", \"property\", \"computed\", \"optional\")\n        .field(\"optional\", Boolean, defaults[\"true\"]);\n    // Nullish coalescing\n    var LogicalOperator = or.apply(void 0, tslib_1.__spreadArrays(core_operators_1.LogicalOperators, [\"??\"]));\n    def(\"LogicalExpression\")\n        .field(\"operator\", LogicalOperator);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2020_1 = tslib_1.__importDefault(require(\"./es2020\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2020_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"JSXAttribute\")\n        .bases(\"Node\")\n        .build(\"name\", \"value\")\n        .field(\"name\", or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\")))\n        .field(\"value\", or(def(\"Literal\"), // attr=\"value\"\n    def(\"JSXExpressionContainer\"), // attr={value}\n    def(\"JSXElement\"), // attr=<div />\n    def(\"JSXFragment\"), // attr=<></>\n    null // attr= or just attr\n    ), defaults[\"null\"]);\n    def(\"JSXIdentifier\")\n        .bases(\"Identifier\")\n        .build(\"name\")\n        .field(\"name\", String);\n    def(\"JSXNamespacedName\")\n        .bases(\"Node\")\n        .build(\"namespace\", \"name\")\n        .field(\"namespace\", def(\"JSXIdentifier\"))\n        .field(\"name\", def(\"JSXIdentifier\"));\n    def(\"JSXMemberExpression\")\n        .bases(\"MemberExpression\")\n        .build(\"object\", \"property\")\n        .field(\"object\", or(def(\"JSXIdentifier\"), def(\"JSXMemberExpression\")))\n        .field(\"property\", def(\"JSXIdentifier\"))\n        .field(\"computed\", Boolean, defaults.false);\n    var JSXElementName = or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\"), def(\"JSXMemberExpression\"));\n    def(\"JSXSpreadAttribute\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    var JSXAttributes = [or(def(\"JSXAttribute\"), def(\"JSXSpreadAttribute\"))];\n    def(\"JSXExpressionContainer\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", or(def(\"Expression\"), def(\"JSXEmptyExpression\")));\n    var JSXChildren = [or(def(\"JSXText\"), def(\"JSXExpressionContainer\"), def(\"JSXSpreadChild\"), def(\"JSXElement\"), def(\"JSXFragment\"), def(\"Literal\") // Legacy: Esprima should return JSXText instead.\n        )];\n    def(\"JSXElement\")\n        .bases(\"Expression\")\n        .build(\"openingElement\", \"closingElement\", \"children\")\n        .field(\"openingElement\", def(\"JSXOpeningElement\"))\n        .field(\"closingElement\", or(def(\"JSXClosingElement\"), null), defaults[\"null\"])\n        .field(\"children\", JSXChildren, defaults.emptyArray)\n        .field(\"name\", JSXElementName, function () {\n        // Little-known fact: the `this` object inside a default function\n        // is none other than the partially-built object itself, and any\n        // fields initialized directly from builder function arguments\n        // (like openingElement, closingElement, and children) are\n        // guaranteed to be available.\n        return this.openingElement.name;\n    }, true) // hidden from traversal\n        .field(\"selfClosing\", Boolean, function () {\n        return this.openingElement.selfClosing;\n    }, true) // hidden from traversal\n        .field(\"attributes\", JSXAttributes, function () {\n        return this.openingElement.attributes;\n    }, true); // hidden from traversal\n    def(\"JSXOpeningElement\")\n        .bases(\"Node\")\n        .build(\"name\", \"attributes\", \"selfClosing\")\n        .field(\"name\", JSXElementName)\n        .field(\"attributes\", JSXAttributes, defaults.emptyArray)\n        .field(\"selfClosing\", Boolean, defaults[\"false\"]);\n    def(\"JSXClosingElement\")\n        .bases(\"Node\")\n        .build(\"name\")\n        .field(\"name\", JSXElementName);\n    def(\"JSXFragment\")\n        .bases(\"Expression\")\n        .build(\"openingFragment\", \"closingFragment\", \"children\")\n        .field(\"openingFragment\", def(\"JSXOpeningFragment\"))\n        .field(\"closingFragment\", def(\"JSXClosingFragment\"))\n        .field(\"children\", JSXChildren, defaults.emptyArray);\n    def(\"JSXOpeningFragment\")\n        .bases(\"Node\")\n        .build();\n    def(\"JSXClosingFragment\")\n        .bases(\"Node\")\n        .build();\n    def(\"JSXText\")\n        .bases(\"Literal\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", String)\n        .field(\"raw\", String, function () {\n        return this.value;\n    });\n    def(\"JSXEmptyExpression\")\n        .bases(\"Node\")\n        .build();\n    def(\"JSXSpreadChild\")\n        .bases(\"Node\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nvar es2020_1 = tslib_1.__importDefault(require(\"./es2020\"));\nfunction default_1(fork) {\n    fork.use(es2020_1.default);\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var def = types.Type.def;\n    var or = Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    def(\"AwaitExpression\")\n        .build(\"argument\", \"all\")\n        .field(\"argument\", or(def(\"Expression\"), null))\n        .field(\"all\", Boolean, defaults[\"false\"]);\n    // Decorators\n    def(\"Decorator\")\n        .bases(\"Node\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"Property\")\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"MethodDefinition\")\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    // Private names\n    def(\"PrivateName\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"ClassPrivateProperty\")\n        .bases(\"ClassProperty\")\n        .build(\"key\", \"value\")\n        .field(\"key\", def(\"PrivateName\"))\n        .field(\"value\", or(def(\"Expression\"), null), defaults[\"null\"]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\n/**\n * Type annotation defs shared between Flow and TypeScript.\n * These defs could not be defined in ./flow.ts or ./typescript.ts directly\n * because they use the same name.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    var TypeAnnotation = or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null);\n    var TypeParamDecl = or(def(\"TypeParameterDeclaration\"), def(\"TSTypeParameterDeclaration\"), null);\n    def(\"Identifier\")\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    def(\"ObjectPattern\")\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    def(\"Function\")\n        .field(\"returnType\", TypeAnnotation, defaults[\"null\"])\n        .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"]);\n    def(\"ClassProperty\")\n        .build(\"key\", \"value\", \"typeAnnotation\", \"static\")\n        .field(\"value\", or(def(\"Expression\"), null))\n        .field(\"static\", Boolean, defaults[\"false\"])\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    [\"ClassDeclaration\",\n        \"ClassExpression\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"])\n            .field(\"superTypeParameters\", or(def(\"TypeParameterInstantiation\"), def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"])\n            .field(\"implements\", or([def(\"ClassImplements\")], [def(\"TSExpressionWithTypeArguments\")]), defaults.emptyArray);\n    });\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./es-proposals\"));\nvar type_annotations_1 = tslib_1.__importDefault(require(\"./type-annotations\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es_proposals_1.default);\n    fork.use(type_annotations_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    // Base types\n    def(\"Flow\").bases(\"Node\");\n    def(\"FlowType\").bases(\"Flow\");\n    // Type annotations\n    def(\"AnyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"EmptyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"MixedTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"VoidTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"SymbolTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"BigIntTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    // Babylon 6 differs in AST from Flow\n    // same as NumberLiteralTypeAnnotation\n    def(\"NumericLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    def(\"BigIntLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", null)\n        .field(\"raw\", String);\n    def(\"StringTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"StringLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", String)\n        .field(\"raw\", String);\n    def(\"BooleanTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"BooleanLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Boolean)\n        .field(\"raw\", String);\n    def(\"TypeAnnotation\")\n        .bases(\"Node\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullableTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NullTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ThisTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistsTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistentialTypeParam\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"FunctionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"params\", \"returnType\", \"rest\", \"typeParameters\")\n        .field(\"params\", [def(\"FunctionTypeParam\")])\n        .field(\"returnType\", def(\"FlowType\"))\n        .field(\"rest\", or(def(\"FunctionTypeParam\"), null))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n    def(\"FunctionTypeParam\")\n        .bases(\"Node\")\n        .build(\"name\", \"typeAnnotation\", \"optional\")\n        .field(\"name\", or(def(\"Identifier\"), null))\n        .field(\"typeAnnotation\", def(\"FlowType\"))\n        .field(\"optional\", Boolean);\n    def(\"ArrayTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"elementType\")\n        .field(\"elementType\", def(\"FlowType\"));\n    def(\"ObjectTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"properties\", \"indexers\", \"callProperties\")\n        .field(\"properties\", [\n        or(def(\"ObjectTypeProperty\"), def(\"ObjectTypeSpreadProperty\"))\n    ])\n        .field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray)\n        .field(\"callProperties\", [def(\"ObjectTypeCallProperty\")], defaults.emptyArray)\n        .field(\"inexact\", or(Boolean, void 0), defaults[\"undefined\"])\n        .field(\"exact\", Boolean, defaults[\"false\"])\n        .field(\"internalSlots\", [def(\"ObjectTypeInternalSlot\")], defaults.emptyArray);\n    def(\"Variance\")\n        .bases(\"Node\")\n        .build(\"kind\")\n        .field(\"kind\", or(\"plus\", \"minus\"));\n    var LegacyVariance = or(def(\"Variance\"), \"plus\", \"minus\", null);\n    def(\"ObjectTypeProperty\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\", \"optional\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ObjectTypeIndexer\")\n        .bases(\"Node\")\n        .build(\"id\", \"key\", \"value\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"key\", def(\"FlowType\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    def(\"ObjectTypeCallProperty\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", def(\"FunctionTypeAnnotation\"))\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    def(\"QualifiedTypeIdentifier\")\n        .bases(\"Node\")\n        .build(\"qualification\", \"id\")\n        .field(\"qualification\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"id\", def(\"Identifier\"));\n    def(\"GenericTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"id\", \"typeParameters\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n    def(\"MemberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"object\", \"property\")\n        .field(\"object\", def(\"Identifier\"))\n        .field(\"property\", or(def(\"MemberTypeAnnotation\"), def(\"GenericTypeAnnotation\")));\n    def(\"UnionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"IntersectionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"TypeofTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeSpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeInternalSlot\")\n        .bases(\"Node\")\n        .build(\"id\", \"value\", \"optional\", \"static\", \"method\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"static\", Boolean)\n        .field(\"method\", Boolean);\n    def(\"TypeParameterDeclaration\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TypeParameter\")]);\n    def(\"TypeParameterInstantiation\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"FlowType\")]);\n    def(\"TypeParameter\")\n        .bases(\"FlowType\")\n        .build(\"name\", \"variance\", \"bound\", \"default\")\n        .field(\"name\", String)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n        .field(\"bound\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"])\n        .field(\"default\", or(def(\"FlowType\"), null), defaults[\"null\"]);\n    def(\"ClassProperty\")\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ClassImplements\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"])\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"InterfaceTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"body\", \"extends\")\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", or([def(\"InterfaceExtends\")], null), defaults[\"null\"]);\n    def(\"InterfaceDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\", \"extends\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", [def(\"InterfaceExtends\")]);\n    def(\"DeclareInterface\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\", \"body\", \"extends\");\n    def(\"InterfaceExtends\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"TypeAlias\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"right\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"right\", def(\"FlowType\"));\n    def(\"DeclareTypeAlias\")\n        .bases(\"TypeAlias\")\n        .build(\"id\", \"typeParameters\", \"right\");\n    def(\"OpaqueType\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"impltype\", \"supertype\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"impltype\", def(\"FlowType\"))\n        .field(\"supertype\", or(def(\"FlowType\"), null));\n    def(\"DeclareOpaqueType\")\n        .bases(\"OpaqueType\")\n        .build(\"id\", \"typeParameters\", \"supertype\")\n        .field(\"impltype\", or(def(\"FlowType\"), null));\n    def(\"TypeCastExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"TupleTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"DeclareVariable\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"DeclareFunction\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n    def(\"DeclareClass\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\");\n    def(\"DeclareModule\")\n        .bases(\"Statement\")\n        .build(\"id\", \"body\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"Literal\")))\n        .field(\"body\", def(\"BlockStatement\"));\n    def(\"DeclareModuleExports\")\n        .bases(\"Statement\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"DeclareExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n        .field(\"default\", Boolean)\n        .field(\"declaration\", or(def(\"DeclareVariable\"), def(\"DeclareFunction\"), def(\"DeclareClass\"), def(\"FlowType\"), // Implies default.\n    def(\"TypeAlias\"), // Implies named type\n    def(\"DeclareOpaqueType\"), // Implies named opaque type\n    def(\"InterfaceDeclaration\"), null))\n        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"DeclareExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"source\")\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"ImportDeclaration\")\n        .field(\"importKind\", or(\"value\", \"type\", \"typeof\"), function () { return \"value\"; });\n    def(\"FlowPredicate\").bases(\"Flow\");\n    def(\"InferredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build();\n    def(\"DeclaredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build(\"value\")\n        .field(\"value\", def(\"Expression\"));\n    def(\"Function\")\n        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n    def(\"CallExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n    def(\"NewExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n    // Enums\n    def(\"EnumDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"body\", or(def(\"EnumBooleanBody\"), def(\"EnumNumberBody\"), def(\"EnumStringBody\"), def(\"EnumSymbolBody\")));\n    def(\"EnumBooleanBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", [def(\"EnumBooleanMember\")])\n        .field(\"explicitType\", Boolean);\n    def(\"EnumNumberBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", [def(\"EnumNumberMember\")])\n        .field(\"explicitType\", Boolean);\n    def(\"EnumStringBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", or([def(\"EnumStringMember\")], [def(\"EnumDefaultedMember\")]))\n        .field(\"explicitType\", Boolean);\n    def(\"EnumSymbolBody\")\n        .build(\"members\")\n        .field(\"members\", [def(\"EnumDefaultedMember\")]);\n    def(\"EnumBooleanMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", or(def(\"Literal\"), Boolean));\n    def(\"EnumNumberMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", def(\"Literal\"));\n    def(\"EnumStringMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", def(\"Literal\"));\n    def(\"EnumDefaultedMember\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2020_1 = tslib_1.__importDefault(require(\"./es2020\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2020_1.default);\n    var types = fork.use(types_1.default);\n    var defaults = fork.use(shared_1.default).defaults;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    def(\"VariableDeclaration\")\n        .field(\"declarations\", [or(def(\"VariableDeclarator\"), def(\"Identifier\") // Esprima deviation.\n        )]);\n    def(\"Property\")\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\") // Esprima deviation.\n    ));\n    def(\"ArrayPattern\")\n        .field(\"elements\", [or(def(\"Pattern\"), def(\"SpreadElement\"), null)]);\n    def(\"ObjectPattern\")\n        .field(\"properties\", [or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\") // Used by Esprima.\n        )]);\n    // Like ModuleSpecifier, except type:\"ExportSpecifier\" and buildable.\n    // export {<id [as name]>} [from ...];\n    def(\"ExportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"id\", \"name\");\n    // export <*> from ...;\n    def(\"ExportBatchSpecifier\")\n        .bases(\"Specifier\")\n        .build();\n    def(\"ExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n        .field(\"default\", Boolean)\n        .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\"), // Implies default.\n    null))\n        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"Block\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"Line\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./es-proposals\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es_proposals_1.default);\n    var types = fork.use(types_1.default);\n    var defaults = fork.use(shared_1.default).defaults;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    def(\"Noop\")\n        .bases(\"Statement\")\n        .build();\n    def(\"DoExpression\")\n        .bases(\"Expression\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"BindExpression\")\n        .bases(\"Expression\")\n        .build(\"object\", \"callee\")\n        .field(\"object\", or(def(\"Expression\"), null))\n        .field(\"callee\", def(\"Expression\"));\n    def(\"ParenthesizedExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"ExportNamespaceSpecifier\")\n        .bases(\"Specifier\")\n        .build(\"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"ExportDefaultSpecifier\")\n        .bases(\"Specifier\")\n        .build(\"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"CommentBlock\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"CommentLine\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"Directive\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", def(\"DirectiveLiteral\"));\n    def(\"DirectiveLiteral\")\n        .bases(\"Node\", \"Expression\")\n        .build(\"value\")\n        .field(\"value\", String, defaults[\"use strict\"]);\n    def(\"InterpreterDirective\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", String);\n    def(\"BlockStatement\")\n        .bases(\"Statement\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")])\n        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n    def(\"Program\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")])\n        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray)\n        .field(\"interpreter\", or(def(\"InterpreterDirective\"), null), defaults[\"null\"]);\n    // Split Literal\n    def(\"StringLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", String);\n    def(\"NumericLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", Number)\n        .field(\"raw\", or(String, null), defaults[\"null\"])\n        .field(\"extra\", {\n        rawValue: Number,\n        raw: String\n    }, function getDefault() {\n        return {\n            rawValue: this.value,\n            raw: this.value + \"\"\n        };\n    });\n    def(\"BigIntLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        // Only String really seems appropriate here, since BigInt values\n        // often exceed the limits of JS numbers.\n        .field(\"value\", or(String, Number))\n        .field(\"extra\", {\n        rawValue: String,\n        raw: String\n    }, function getDefault() {\n        return {\n            rawValue: String(this.value),\n            raw: this.value + \"n\"\n        };\n    });\n    def(\"NullLiteral\")\n        .bases(\"Literal\")\n        .build()\n        .field(\"value\", null, defaults[\"null\"]);\n    def(\"BooleanLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", Boolean);\n    def(\"RegExpLiteral\")\n        .bases(\"Literal\")\n        .build(\"pattern\", \"flags\")\n        .field(\"pattern\", String)\n        .field(\"flags\", String)\n        .field(\"value\", RegExp, function () {\n        return new RegExp(this.pattern, this.flags);\n    });\n    var ObjectExpressionProperty = or(def(\"Property\"), def(\"ObjectMethod\"), def(\"ObjectProperty\"), def(\"SpreadProperty\"), def(\"SpreadElement\"));\n    // Split Property -> ObjectProperty and ObjectMethod\n    def(\"ObjectExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [ObjectExpressionProperty]);\n    // ObjectMethod hoist .value properties to own properties\n    def(\"ObjectMethod\")\n        .bases(\"Node\", \"Function\")\n        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\")\n        .field(\"kind\", or(\"method\", \"get\", \"set\"))\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"params\", [def(\"Pattern\")])\n        .field(\"body\", def(\"BlockStatement\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"accessibility\", // TypeScript\n    or(def(\"Literal\"), null), defaults[\"null\"])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"ObjectProperty\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n        .field(\"accessibility\", // TypeScript\n    or(def(\"Literal\"), null), defaults[\"null\"])\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\"));\n    // MethodDefinition -> ClassMethod\n    def(\"ClassBody\")\n        .bases(\"Declaration\")\n        .build(\"body\")\n        .field(\"body\", [ClassBodyElement]);\n    def(\"ClassMethod\")\n        .bases(\"Declaration\", \"Function\")\n        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")));\n    def(\"ClassPrivateMethod\")\n        .bases(\"Declaration\", \"Function\")\n        .build(\"key\", \"params\", \"body\", \"kind\", \"computed\", \"static\")\n        .field(\"key\", def(\"PrivateName\"));\n    [\"ClassMethod\",\n        \"ClassPrivateMethod\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function () { return \"method\"; })\n            .field(\"body\", def(\"BlockStatement\"))\n            .field(\"computed\", Boolean, defaults[\"false\"])\n            .field(\"static\", or(Boolean, null), defaults[\"null\"])\n            .field(\"abstract\", or(Boolean, null), defaults[\"null\"])\n            .field(\"access\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"])\n            .field(\"accessibility\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"])\n            .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"])\n            .field(\"optional\", or(Boolean, null), defaults[\"null\"]);\n    });\n    var ObjectPatternProperty = or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\"), // Used by Esprima\n    def(\"ObjectProperty\"), // Babel 6\n    def(\"RestProperty\") // Babel 6\n    );\n    // Split into RestProperty and SpreadProperty\n    def(\"ObjectPattern\")\n        .bases(\"Pattern\")\n        .build(\"properties\")\n        .field(\"properties\", [ObjectPatternProperty])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"SpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"RestProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ForAwaitStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    // The callee node of a dynamic import(...) expression.\n    def(\"Import\")\n        .bases(\"Expression\")\n        .build();\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar babel_core_1 = tslib_1.__importDefault(require(\"./babel-core\"));\nvar flow_1 = tslib_1.__importDefault(require(\"./flow\"));\nfunction default_1(fork) {\n    fork.use(babel_core_1.default);\n    fork.use(flow_1.default);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar babel_core_1 = tslib_1.__importDefault(require(\"./babel-core\"));\nvar type_annotations_1 = tslib_1.__importDefault(require(\"./type-annotations\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    // Since TypeScript is parsed by Babylon, include the core Babylon types\n    // but omit the Flow-related types.\n    fork.use(babel_core_1.default);\n    fork.use(type_annotations_1.default);\n    var types = fork.use(types_1.default);\n    var n = types.namedTypes;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    var StringLiteral = types.Type.from(function (value, deep) {\n        if (n.StringLiteral &&\n            n.StringLiteral.check(value, deep)) {\n            return true;\n        }\n        if (n.Literal &&\n            n.Literal.check(value, deep) &&\n            typeof value.value === \"string\") {\n            return true;\n        }\n        return false;\n    }, \"StringLiteral\");\n    def(\"TSType\")\n        .bases(\"Node\");\n    var TSEntityName = or(def(\"Identifier\"), def(\"TSQualifiedName\"));\n    def(\"TSTypeReference\")\n        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"typeName\", \"typeParameters\")\n        .field(\"typeName\", TSEntityName);\n    // An abstract (non-buildable) base type that provide a commonly-needed\n    // optional .typeParameters field.\n    def(\"TSHasOptionalTypeParameterInstantiation\")\n        .field(\"typeParameters\", or(def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"]);\n    // An abstract (non-buildable) base type that provide a commonly-needed\n    // optional .typeParameters field.\n    def(\"TSHasOptionalTypeParameters\")\n        .field(\"typeParameters\", or(def(\"TSTypeParameterDeclaration\"), null, void 0), defaults[\"null\"]);\n    // An abstract (non-buildable) base type that provide a commonly-needed\n    // optional .typeAnnotation field.\n    def(\"TSHasOptionalTypeAnnotation\")\n        .field(\"typeAnnotation\", or(def(\"TSTypeAnnotation\"), null), defaults[\"null\"]);\n    def(\"TSQualifiedName\")\n        .bases(\"Node\")\n        .build(\"left\", \"right\")\n        .field(\"left\", TSEntityName)\n        .field(\"right\", TSEntityName);\n    def(\"TSAsExpression\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TSType\"))\n        .field(\"extra\", or({ parenthesized: Boolean }, null), defaults[\"null\"]);\n    def(\"TSNonNullExpression\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    [\n        \"TSAnyKeyword\",\n        \"TSBigIntKeyword\",\n        \"TSBooleanKeyword\",\n        \"TSNeverKeyword\",\n        \"TSNullKeyword\",\n        \"TSNumberKeyword\",\n        \"TSObjectKeyword\",\n        \"TSStringKeyword\",\n        \"TSSymbolKeyword\",\n        \"TSUndefinedKeyword\",\n        \"TSUnknownKeyword\",\n        \"TSVoidKeyword\",\n        \"TSThisType\",\n    ].forEach(function (keywordType) {\n        def(keywordType)\n            .bases(\"TSType\")\n            .build();\n    });\n    def(\"TSArrayType\")\n        .bases(\"TSType\")\n        .build(\"elementType\")\n        .field(\"elementType\", def(\"TSType\"));\n    def(\"TSLiteralType\")\n        .bases(\"TSType\")\n        .build(\"literal\")\n        .field(\"literal\", or(def(\"NumericLiteral\"), def(\"StringLiteral\"), def(\"BooleanLiteral\"), def(\"TemplateLiteral\"), def(\"UnaryExpression\")));\n    [\"TSUnionType\",\n        \"TSIntersectionType\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .bases(\"TSType\")\n            .build(\"types\")\n            .field(\"types\", [def(\"TSType\")]);\n    });\n    def(\"TSConditionalType\")\n        .bases(\"TSType\")\n        .build(\"checkType\", \"extendsType\", \"trueType\", \"falseType\")\n        .field(\"checkType\", def(\"TSType\"))\n        .field(\"extendsType\", def(\"TSType\"))\n        .field(\"trueType\", def(\"TSType\"))\n        .field(\"falseType\", def(\"TSType\"));\n    def(\"TSInferType\")\n        .bases(\"TSType\")\n        .build(\"typeParameter\")\n        .field(\"typeParameter\", def(\"TSTypeParameter\"));\n    def(\"TSParenthesizedType\")\n        .bases(\"TSType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    var ParametersType = [or(def(\"Identifier\"), def(\"RestElement\"), def(\"ArrayPattern\"), def(\"ObjectPattern\"))];\n    [\"TSFunctionType\",\n        \"TSConstructorType\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .bases(\"TSType\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n            .build(\"parameters\")\n            .field(\"parameters\", ParametersType);\n    });\n    def(\"TSDeclareFunction\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"id\", \"params\", \"returnType\")\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"params\", [def(\"Pattern\")])\n        // tSFunctionTypeAnnotationCommon\n        .field(\"returnType\", or(def(\"TSTypeAnnotation\"), def(\"Noop\"), // Still used?\n    null), defaults[\"null\"]);\n    def(\"TSDeclareMethod\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"key\", \"params\", \"returnType\")\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"params\", [def(\"Pattern\")])\n        // classMethodOrPropertyCommon\n        .field(\"abstract\", Boolean, defaults[\"false\"])\n        .field(\"accessibility\", or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n        .field(\"static\", Boolean, defaults[\"false\"])\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"key\", or(def(\"Identifier\"), def(\"StringLiteral\"), def(\"NumericLiteral\"), \n    // Only allowed if .computed is true.\n    def(\"Expression\")))\n        // classMethodOrDeclareMethodCommon\n        .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function getDefault() { return \"method\"; })\n        .field(\"access\", // Not \"accessibility\"?\n    or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"])\n        // tSFunctionTypeAnnotationCommon\n        .field(\"returnType\", or(def(\"TSTypeAnnotation\"), def(\"Noop\"), // Still used?\n    null), defaults[\"null\"]);\n    def(\"TSMappedType\")\n        .bases(\"TSType\")\n        .build(\"typeParameter\", \"typeAnnotation\")\n        .field(\"readonly\", or(Boolean, \"+\", \"-\"), defaults[\"false\"])\n        .field(\"typeParameter\", def(\"TSTypeParameter\"))\n        .field(\"optional\", or(Boolean, \"+\", \"-\"), defaults[\"false\"])\n        .field(\"typeAnnotation\", or(def(\"TSType\"), null), defaults[\"null\"]);\n    def(\"TSTupleType\")\n        .bases(\"TSType\")\n        .build(\"elementTypes\")\n        .field(\"elementTypes\", [or(def(\"TSType\"), def(\"TSNamedTupleMember\"))]);\n    def(\"TSNamedTupleMember\")\n        .bases(\"TSType\")\n        .build(\"label\", \"elementType\", \"optional\")\n        .field(\"label\", def(\"Identifier\"))\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"elementType\", def(\"TSType\"));\n    def(\"TSRestType\")\n        .bases(\"TSType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSOptionalType\")\n        .bases(\"TSType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSIndexedAccessType\")\n        .bases(\"TSType\")\n        .build(\"objectType\", \"indexType\")\n        .field(\"objectType\", def(\"TSType\"))\n        .field(\"indexType\", def(\"TSType\"));\n    def(\"TSTypeOperator\")\n        .bases(\"TSType\")\n        .build(\"operator\")\n        .field(\"operator\", String)\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSTypeAnnotation\")\n        .bases(\"Node\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", or(def(\"TSType\"), def(\"TSTypeAnnotation\")));\n    def(\"TSIndexSignature\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n        .build(\"parameters\", \"typeAnnotation\")\n        .field(\"parameters\", [def(\"Identifier\")]) // Length === 1\n        .field(\"readonly\", Boolean, defaults[\"false\"]);\n    def(\"TSPropertySignature\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n        .build(\"key\", \"typeAnnotation\", \"optional\")\n        .field(\"key\", def(\"Expression\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"readonly\", Boolean, defaults[\"false\"])\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"TSMethodSignature\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n        .build(\"key\", \"parameters\", \"typeAnnotation\")\n        .field(\"key\", def(\"Expression\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"parameters\", ParametersType);\n    def(\"TSTypePredicate\")\n        .bases(\"TSTypeAnnotation\", \"TSType\")\n        .build(\"parameterName\", \"typeAnnotation\", \"asserts\")\n        .field(\"parameterName\", or(def(\"Identifier\"), def(\"TSThisType\")))\n        .field(\"typeAnnotation\", or(def(\"TSTypeAnnotation\"), null), defaults[\"null\"])\n        .field(\"asserts\", Boolean, defaults[\"false\"]);\n    [\"TSCallSignatureDeclaration\",\n        \"TSConstructSignatureDeclaration\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .bases(\"Declaration\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n            .build(\"parameters\", \"typeAnnotation\")\n            .field(\"parameters\", ParametersType);\n    });\n    def(\"TSEnumMember\")\n        .bases(\"Node\")\n        .build(\"id\", \"initializer\")\n        .field(\"id\", or(def(\"Identifier\"), StringLiteral))\n        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"TSTypeQuery\")\n        .bases(\"TSType\")\n        .build(\"exprName\")\n        .field(\"exprName\", or(TSEntityName, def(\"TSImportType\")));\n    // Inferred from Babylon's tsParseTypeMember method.\n    var TSTypeMember = or(def(\"TSCallSignatureDeclaration\"), def(\"TSConstructSignatureDeclaration\"), def(\"TSIndexSignature\"), def(\"TSMethodSignature\"), def(\"TSPropertySignature\"));\n    def(\"TSTypeLiteral\")\n        .bases(\"TSType\")\n        .build(\"members\")\n        .field(\"members\", [TSTypeMember]);\n    def(\"TSTypeParameter\")\n        .bases(\"Identifier\")\n        .build(\"name\", \"constraint\", \"default\")\n        .field(\"name\", String)\n        .field(\"constraint\", or(def(\"TSType\"), void 0), defaults[\"undefined\"])\n        .field(\"default\", or(def(\"TSType\"), void 0), defaults[\"undefined\"]);\n    def(\"TSTypeAssertion\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"typeAnnotation\", \"expression\")\n        .field(\"typeAnnotation\", def(\"TSType\"))\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"extra\", or({ parenthesized: Boolean }, null), defaults[\"null\"]);\n    def(\"TSTypeParameterDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TSTypeParameter\")]);\n    def(\"TSTypeParameterInstantiation\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TSType\")]);\n    def(\"TSEnumDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"members\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"const\", Boolean, defaults[\"false\"])\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"members\", [def(\"TSEnumMember\")])\n        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"TSTypeAliasDeclaration\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"id\", \"typeAnnotation\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSModuleBlock\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"TSModuleDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\")\n        .field(\"id\", or(StringLiteral, TSEntityName))\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"global\", Boolean, defaults[\"false\"])\n        .field(\"body\", or(def(\"TSModuleBlock\"), def(\"TSModuleDeclaration\"), null), defaults[\"null\"]);\n    def(\"TSImportType\")\n        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"argument\", \"qualifier\", \"typeParameters\")\n        .field(\"argument\", StringLiteral)\n        .field(\"qualifier\", or(TSEntityName, void 0), defaults[\"undefined\"]);\n    def(\"TSImportEqualsDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"moduleReference\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"isExport\", Boolean, defaults[\"false\"])\n        .field(\"moduleReference\", or(TSEntityName, def(\"TSExternalModuleReference\")));\n    def(\"TSExternalModuleReference\")\n        .bases(\"Declaration\")\n        .build(\"expression\")\n        .field(\"expression\", StringLiteral);\n    def(\"TSExportAssignment\")\n        .bases(\"Statement\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"TSNamespaceExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"TSInterfaceBody\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [TSTypeMember]);\n    def(\"TSExpressionWithTypeArguments\")\n        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"expression\", \"typeParameters\")\n        .field(\"expression\", TSEntityName);\n    def(\"TSInterfaceDeclaration\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"id\", \"body\")\n        .field(\"id\", TSEntityName)\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"extends\", or([def(\"TSExpressionWithTypeArguments\")], null), defaults[\"null\"])\n        .field(\"body\", def(\"TSInterfaceBody\"));\n    def(\"TSParameterProperty\")\n        .bases(\"Pattern\")\n        .build(\"parameter\")\n        .field(\"accessibility\", or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n        .field(\"readonly\", Boolean, defaults[\"false\"])\n        .field(\"parameter\", or(def(\"Identifier\"), def(\"AssignmentPattern\")));\n    def(\"ClassProperty\")\n        .field(\"access\", // Not \"accessibility\"?\n    or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"]);\n    // Defined already in es6 and babel-core.\n    def(\"ClassBody\")\n        .field(\"body\", [or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\"), \n        // Just need to add these types:\n        def(\"TSDeclareMethod\"), TSTypeMember)]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.namedTypes = void 0;\nvar namedTypes;\n(function (namedTypes) {\n})(namedTypes = exports.namedTypes || (exports.namedTypes = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.visit = exports.use = exports.Type = exports.someField = exports.PathVisitor = exports.Path = exports.NodePath = exports.namedTypes = exports.getSupertypeNames = exports.getFieldValue = exports.getFieldNames = exports.getBuilderName = exports.finalize = exports.eachField = exports.defineMethod = exports.builtInTypes = exports.builders = exports.astNodesAreEquivalent = void 0;\nvar tslib_1 = require(\"tslib\");\nvar fork_1 = tslib_1.__importDefault(require(\"./fork\"));\nvar core_1 = tslib_1.__importDefault(require(\"./def/core\"));\nvar es6_1 = tslib_1.__importDefault(require(\"./def/es6\"));\nvar es2016_1 = tslib_1.__importDefault(require(\"./def/es2016\"));\nvar es2017_1 = tslib_1.__importDefault(require(\"./def/es2017\"));\nvar es2018_1 = tslib_1.__importDefault(require(\"./def/es2018\"));\nvar es2019_1 = tslib_1.__importDefault(require(\"./def/es2019\"));\nvar es2020_1 = tslib_1.__importDefault(require(\"./def/es2020\"));\nvar jsx_1 = tslib_1.__importDefault(require(\"./def/jsx\"));\nvar flow_1 = tslib_1.__importDefault(require(\"./def/flow\"));\nvar esprima_1 = tslib_1.__importDefault(require(\"./def/esprima\"));\nvar babel_1 = tslib_1.__importDefault(require(\"./def/babel\"));\nvar typescript_1 = tslib_1.__importDefault(require(\"./def/typescript\"));\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./def/es-proposals\"));\nvar namedTypes_1 = require(\"./gen/namedTypes\");\nObject.defineProperty(exports, \"namedTypes\", { enumerable: true, get: function () { return namedTypes_1.namedTypes; } });\nvar _a = fork_1.default([\n    // This core module of AST types captures ES5 as it is parsed today by\n    // git://github.com/ariya/esprima.git#master.\n    core_1.default,\n    // Feel free to add to or remove from this list of extension modules to\n    // configure the precise type hierarchy that you need.\n    es6_1.default,\n    es2016_1.default,\n    es2017_1.default,\n    es2018_1.default,\n    es2019_1.default,\n    es2020_1.default,\n    jsx_1.default,\n    flow_1.default,\n    esprima_1.default,\n    babel_1.default,\n    typescript_1.default,\n    es_proposals_1.default,\n]), astNodesAreEquivalent = _a.astNodesAreEquivalent, builders = _a.builders, builtInTypes = _a.builtInTypes, defineMethod = _a.defineMethod, eachField = _a.eachField, finalize = _a.finalize, getBuilderName = _a.getBuilderName, getFieldNames = _a.getFieldNames, getFieldValue = _a.getFieldValue, getSupertypeNames = _a.getSupertypeNames, n = _a.namedTypes, NodePath = _a.NodePath, Path = _a.Path, PathVisitor = _a.PathVisitor, someField = _a.someField, Type = _a.Type, use = _a.use, visit = _a.visit;\nexports.astNodesAreEquivalent = astNodesAreEquivalent;\nexports.builders = builders;\nexports.builtInTypes = builtInTypes;\nexports.defineMethod = defineMethod;\nexports.eachField = eachField;\nexports.finalize = finalize;\nexports.getBuilderName = getBuilderName;\nexports.getFieldNames = getFieldNames;\nexports.getFieldValue = getFieldValue;\nexports.getSupertypeNames = getSupertypeNames;\nexports.NodePath = NodePath;\nexports.Path = Path;\nexports.PathVisitor = PathVisitor;\nexports.someField = someField;\nexports.Type = Type;\nexports.use = use;\nexports.visit = visit;\n// Populate the exported fields of the namedTypes namespace, while still\n// retaining its member types.\nObject.assign(namedTypes_1.namedTypes, n);\n", "const estemplate = require('./estemplate')\nconst { builders } = require('ast-types')\nconst parse = require('../parse')\n\nconst typedArrays = {\n  Uint8Array: true,\n  Int8Array: true,\n  Uint8ClampedArray: true,\n  Uint16Array: true,\n  Int16Array: true,\n  Uint32Array: true,\n  Int32Array: true,\n  Float32Array: true,\n  Float64Array: true\n}\n\nfunction toAST (obj) {\n  if (typeof obj === 'undefined') { return builders.unaryExpression('void', builders.literal(0)) }\n\n  if (typeof obj === 'number') {\n    if (isNaN(obj)) { return builders.identifier('NaN') }\n\n    if (obj === Infinity) { return builders.identifier('Infinity') }\n\n    if (obj < 0) { return builders.unaryExpression('-', builders.literal(-obj)) }\n\n    return builders.literal(obj)\n  }\n\n  if (obj === null || typeof obj === 'string' || typeof obj === 'boolean') { return builders.literal(obj) }\n\n  if (typeof obj === 'function') {\n    const source = obj.toString()\n\n    try {\n      return parse('x = ' + source).body[0].expression.right\n    } catch (e) {\n      return builders.literal(null)\n    }\n  }\n\n  if (Buffer.isBuffer(obj)) {\n    return builders.newExpression(builders.identifier('Buffer'), [\n      builders.literal(obj.toString('base64')),\n      builders.literal('base64')\n    ])\n  }\n\n  if (Array.isArray(obj)) { return builders.arrayExpression(obj.map(toAST)) }\n\n  if (typeof obj === 'object') {\n    const type = Object.prototype.toString.call(obj).match(/\\[object (.*)\\]/)[1]\n\n    if (type === 'String' || type === 'Number' || type === 'Boolean') { return builders.newExpression(builders.identifier(type), [toAST(obj.valueOf())]) }\n\n    if (type === 'ArrayBuffer') {\n      const buf = new Uint8Array(obj)\n\n      let allZero = true\n      for (let i = 0; i < buf.length; i++) {\n        if (buf[i] !== 0) {\n          allZero = false\n          break\n        }\n      }\n\n      if (allZero) { return builders.newExpression(builders.identifier(type), [builders.literal(obj.byteLength)]) }\n\n      return builders.memberExpression(toAST(buf), builders.identifier('buffer'))\n    }\n\n    if (typedArrays[type]) {\n      return builders.newExpression(builders.identifier(type), [\n        builders.arrayExpression(Array.prototype.slice.call(obj).map(toAST))\n      ])\n    }\n\n    if (type === 'Date') {\n      let d\n      try {\n        d = toAST(obj.toISOString())\n      } catch (e) {\n        d = toAST(NaN)\n      }\n\n      return builders.newExpression(builders.identifier(type), [d])\n    }\n\n    if (type === 'Error') { return builders.newExpression(builders.identifier(obj.constructor.name), [toAST(obj.message)]) }\n\n    if (type === 'RegExp') { return builders.literal(obj) }\n\n    if (typeof obj.toAST === 'function') { return obj.toAST() }\n\n    const properties = []\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        properties.push(builders.property('init', builders.literal(key), toAST(obj[key])))\n      }\n    }\n\n    return builders.objectExpression(properties)\n  }\n\n  throw new Error('Unsupported type to convert to AST')\n}\n\nmodule.exports = function template (source, options) {\n  options = options || {}\n  if (typeof source === 'string') {\n    return estemplate(source, options).body\n  }\n  return toAST(source, options)\n}\n", "const template = require('./template')\n\nfunction normalizeInput (input) {\n  if (typeof input === 'string') return template(input)\n  return input\n}\n\nfunction prependNode (tree, input) {\n  if (Array.isArray(input)) {\n    input.reverse().forEach(node => tree.unshift(node))\n  } else {\n    tree.unshift(input)\n  }\n}\n\nmodule.exports = function prepend (tree, input) {\n  input = normalizeInput(input)\n  if (Array.isArray(tree)) {\n    prependNode(tree, input)\n  } else if (Array.isArray(tree.body)) {\n    prependNode(tree.body, input)\n  }\n  return tree\n}\n", "const template = require('./template')\n\nfunction normalizeInput (input) {\n  if (typeof input === 'string') return template(input)\n  return input\n}\n\nfunction appendInput (tree, input) {\n  if (Array.isArray(input)) {\n    input.forEach(node => tree.push(node))\n  } else {\n    tree.push(input)\n  }\n}\n\nmodule.exports = function append (tree, input) {\n  input = normalizeInput(input)\n  if (Array.isArray(tree)) {\n    appendInput(tree, input)\n  } else if (Array.isArray(tree.body)) {\n    appendInput(tree.body, input)\n  }\n  return tree\n}\n", "// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.\n//\n// Astring was written by David Bonnet and released under an MIT license.\n//\n// The Git repository for Astring is available at:\n// https://github.com/davidbonnet/astring.git\n//\n// Please use the GitHub bug tracker to report issues:\n// https://github.com/davidbonnet/astring/issues\n\nconst { stringify } = JSON\n\n/* c8 ignore if */\nif (!String.prototype.repeat) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\n/* c8 ignore if */\nif (!String.prototype.endsWith) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\nconst OPERATOR_PRECEDENCE = {\n  '||': 3,\n  '&&': 4,\n  '|': 5,\n  '^': 6,\n  '&': 7,\n  '==': 8,\n  '!=': 8,\n  '===': 8,\n  '!==': 8,\n  '<': 9,\n  '>': 9,\n  '<=': 9,\n  '>=': 9,\n  in: 9,\n  instanceof: 9,\n  '<<': 10,\n  '>>': 10,\n  '>>>': 10,\n  '+': 11,\n  '-': 11,\n  '*': 12,\n  '%': 12,\n  '/': 12,\n  '**': 13,\n}\n\n// Enables parenthesis regardless of precedence\nexport const NEEDS_PARENTHESES = 17\n\nexport const EXPRESSIONS_PRECEDENCE = {\n  // Definitions\n  ArrayExpression: 20,\n  TaggedTemplateExpression: 20,\n  ThisExpression: 20,\n  Identifier: 20,\n  Literal: 18,\n  TemplateLiteral: 20,\n  Super: 20,\n  SequenceExpression: 20,\n  // Operations\n  MemberExpression: 19,\n  ChainExpression: 19,\n  CallExpression: 19,\n  NewExpression: 19,\n  // Other definitions\n  ArrowFunctionExpression: NEEDS_PARENTHESES,\n  ClassExpression: NEEDS_PARENTHESES,\n  FunctionExpression: NEEDS_PARENTHESES,\n  ObjectExpression: NEEDS_PARENTHESES,\n  // Other operations\n  UpdateExpression: 16,\n  UnaryExpression: 15,\n  AwaitExpression: 15,\n  BinaryExpression: 14,\n  LogicalExpression: 13,\n  ConditionalExpression: 4,\n  AssignmentExpression: 3,\n  YieldExpression: 2,\n  RestElement: 1,\n}\n\nfunction formatSequence(state, nodes) {\n  /*\n  Writes into `state` a sequence of `nodes`.\n  */\n  const { generator } = state\n  state.write('(')\n  if (nodes != null && nodes.length > 0) {\n    generator[nodes[0].type](nodes[0], state)\n    const { length } = nodes\n    for (let i = 1; i < length; i++) {\n      const param = nodes[i]\n      state.write(', ')\n      generator[param.type](param, state)\n    }\n  }\n  state.write(')')\n}\n\nfunction expressionNeedsParenthesis(state, node, parentNode, isRightHand) {\n  const nodePrecedence = state.expressionsPrecedence[node.type]\n  if (nodePrecedence === NEEDS_PARENTHESES) {\n    return true\n  }\n  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type]\n  if (nodePrecedence !== parentNodePrecedence) {\n    // Different node types\n    return (\n      (!isRightHand &&\n        nodePrecedence === 15 &&\n        parentNodePrecedence === 14 &&\n        parentNode.operator === '**') ||\n      nodePrecedence < parentNodePrecedence\n    )\n  }\n  if (nodePrecedence !== 13 && nodePrecedence !== 14) {\n    // Not a `LogicalExpression` or `BinaryExpression`\n    return false\n  }\n  if (node.operator === '**' && parentNode.operator === '**') {\n    // Exponentiation operator has right-to-left associativity\n    return !isRightHand\n  }\n  if (isRightHand) {\n    // Parenthesis are used if both operators have the same precedence\n    return (\n      OPERATOR_PRECEDENCE[node.operator] <=\n      OPERATOR_PRECEDENCE[parentNode.operator]\n    )\n  }\n  return (\n    OPERATOR_PRECEDENCE[node.operator] <\n    OPERATOR_PRECEDENCE[parentNode.operator]\n  )\n}\n\nfunction formatExpression(state, node, parentNode, isRightHand) {\n  /*\n  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.\n  */\n  const { generator } = state\n  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {\n    state.write('(')\n    generator[node.type](node, state)\n    state.write(')')\n  } else {\n    generator[node.type](node, state)\n  }\n}\n\nfunction reindent(state, text, indent, lineEnd) {\n  /*\n  Writes into `state` the `text` string reindented with the provided `indent`.\n  */\n  const lines = text.split('\\n')\n  const end = lines.length - 1\n  state.write(lines[0].trim())\n  if (end > 0) {\n    state.write(lineEnd)\n    for (let i = 1; i < end; i++) {\n      state.write(indent + lines[i].trim() + lineEnd)\n    }\n    state.write(indent + lines[end].trim())\n  }\n}\n\nfunction formatComments(state, comments, indent, lineEnd) {\n  /*\n  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.\n  Line comments will end with `\"\\n\"` regardless of the value of `lineEnd`.\n  Expects to start on a new unindented line.\n  */\n  const { length } = comments\n  for (let i = 0; i < length; i++) {\n    const comment = comments[i]\n    state.write(indent)\n    if (comment.type[0] === 'L') {\n      // Line comment\n      state.write('// ' + comment.value.trim() + '\\n', comment)\n    } else {\n      // Block comment\n      state.write('/*')\n      reindent(state, comment.value, indent, lineEnd)\n      state.write('*/' + lineEnd)\n    }\n  }\n}\n\nfunction hasCallExpression(node) {\n  /*\n  Returns `true` if the provided `node` contains a call expression and `false` otherwise.\n  */\n  let currentNode = node\n  while (currentNode != null) {\n    const { type } = currentNode\n    if (type[0] === 'C' && type[1] === 'a') {\n      // Is CallExpression\n      return true\n    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {\n      // Is MemberExpression\n      currentNode = currentNode.object\n    } else {\n      return false\n    }\n  }\n}\n\nfunction formatVariableDeclaration(state, node) {\n  /*\n  Writes into `state` a variable declaration.\n  */\n  const { generator } = state\n  const { declarations } = node\n  state.write(node.kind + ' ')\n  const { length } = declarations\n  if (length > 0) {\n    generator.VariableDeclarator(declarations[0], state)\n    for (let i = 1; i < length; i++) {\n      state.write(', ')\n      generator.VariableDeclarator(declarations[i], state)\n    }\n  }\n}\n\nlet ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  BlockStatement\n\nexport const GENERATOR = {\n  /*\n  Default generator.\n  */\n  Program(node, state) {\n    const indent = state.indent.repeat(state.indentLevel)\n    const { lineEnd, writeComments } = state\n    if (writeComments && node.comments != null) {\n      formatComments(state, node.comments, indent, lineEnd)\n    }\n    const statements = node.body\n    const { length } = statements\n    for (let i = 0; i < length; i++) {\n      const statement = statements[i]\n      if (writeComments && statement.comments != null) {\n        formatComments(state, statement.comments, indent, lineEnd)\n      }\n      state.write(indent)\n      this[statement.type](statement, state)\n      state.write(lineEnd)\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, indent, lineEnd)\n    }\n  },\n  BlockStatement: (BlockStatement = function (node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const statementIndent = indent + state.indent\n    state.write('{')\n    const statements = node.body\n    if (statements != null && statements.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, statementIndent, lineEnd)\n      }\n      const { length } = statements\n      for (let i = 0; i < length; i++) {\n        const statement = statements[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n      state.write(indent)\n    } else {\n      if (writeComments && node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, statementIndent, lineEnd)\n        state.write(indent)\n      }\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, statementIndent, lineEnd)\n    }\n    state.write('}')\n    state.indentLevel--\n  }),\n  ClassBody: BlockStatement,\n  EmptyStatement(node, state) {\n    state.write(';')\n  },\n  ExpressionStatement(node, state) {\n    const precedence = state.expressionsPrecedence[node.expression.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      (precedence === 3 && node.expression.left.type[0] === 'O')\n    ) {\n      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern\n      state.write('(')\n      this[node.expression.type](node.expression, state)\n      state.write(')')\n    } else {\n      this[node.expression.type](node.expression, state)\n    }\n    state.write(';')\n  },\n  IfStatement(node, state) {\n    state.write('if (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.consequent.type](node.consequent, state)\n    if (node.alternate != null) {\n      state.write(' else ')\n      this[node.alternate.type](node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this[node.label.type](node.label, state)\n    state.write(': ')\n    this[node.body.type](node.body, state)\n  },\n  BreakStatement(node, state) {\n    state.write('break')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  ContinueStatement(node, state) {\n    state.write('continue')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  WithStatement(node, state) {\n    state.write('with (')\n    this[node.object.type](node.object, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  SwitchStatement(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    state.indentLevel++\n    const caseIndent = indent + state.indent\n    const statementIndent = caseIndent + state.indent\n    state.write('switch (')\n    this[node.discriminant.type](node.discriminant, state)\n    state.write(') {' + lineEnd)\n    const { cases: occurences } = node\n    const { length: occurencesCount } = occurences\n    for (let i = 0; i < occurencesCount; i++) {\n      const occurence = occurences[i]\n      if (writeComments && occurence.comments != null) {\n        formatComments(state, occurence.comments, caseIndent, lineEnd)\n      }\n      if (occurence.test) {\n        state.write(caseIndent + 'case ')\n        this[occurence.test.type](occurence.test, state)\n        state.write(':' + lineEnd)\n      } else {\n        state.write(caseIndent + 'default:' + lineEnd)\n      }\n      const { consequent } = occurence\n      const { length: consequentCount } = consequent\n      for (let i = 0; i < consequentCount; i++) {\n        const statement = consequent[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n    }\n    state.indentLevel -= 2\n    state.write(indent + '}')\n  },\n  ReturnStatement(node, state) {\n    state.write('return')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n    state.write(';')\n  },\n  ThrowStatement(node, state) {\n    state.write('throw ')\n    this[node.argument.type](node.argument, state)\n    state.write(';')\n  },\n  TryStatement(node, state) {\n    state.write('try ')\n    this[node.block.type](node.block, state)\n    if (node.handler) {\n      const { handler } = node\n      if (handler.param == null) {\n        state.write(' catch ')\n      } else {\n        state.write(' catch (')\n        this[handler.param.type](handler.param, state)\n        state.write(') ')\n      }\n      this[handler.body.type](handler.body, state)\n    }\n    if (node.finalizer) {\n      state.write(' finally ')\n      this[node.finalizer.type](node.finalizer, state)\n    }\n  },\n  WhileStatement(node, state) {\n    state.write('while (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    state.write('do ')\n    this[node.body.type](node.body, state)\n    state.write(' while (')\n    this[node.test.type](node.test, state)\n    state.write(');')\n  },\n  ForStatement(node, state) {\n    state.write('for (')\n    if (node.init != null) {\n      const { init } = node\n      if (init.type[0] === 'V') {\n        formatVariableDeclaration(state, init)\n      } else {\n        this[init.type](init, state)\n      }\n    }\n    state.write('; ')\n    if (node.test) {\n      this[node.test.type](node.test, state)\n    }\n    state.write('; ')\n    if (node.update) {\n      this[node.update.type](node.update, state)\n    }\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    state.write(`for ${node.await ? 'await ' : ''}(`)\n    const { left } = node\n    if (left.type[0] === 'V') {\n      formatVariableDeclaration(state, left)\n    } else {\n      this[left.type](left, state)\n    }\n    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`\n    state.write(node.type[3] === 'I' ? ' in ' : ' of ')\n    this[node.right.type](node.right, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  }),\n  ForOfStatement: ForInStatement,\n  DebuggerStatement(node, state) {\n    state.write('debugger;', node)\n  },\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    state.write(\n      (node.async ? 'async ' : '') +\n        (node.generator ? 'function* ' : 'function ') +\n        (node.id ? node.id.name : ''),\n      node,\n    )\n    formatSequence(state, node.params)\n    state.write(' ')\n    this[node.body.type](node.body, state)\n  }),\n  FunctionExpression: FunctionDeclaration,\n  VariableDeclaration(node, state) {\n    formatVariableDeclaration(state, node)\n    state.write(';')\n  },\n  VariableDeclarator(node, state) {\n    this[node.id.type](node.id, state)\n    if (node.init != null) {\n      state.write(' = ')\n      this[node.init.type](node.init, state)\n    }\n  },\n  ClassDeclaration(node, state) {\n    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node)\n    if (node.superClass) {\n      state.write('extends ')\n      const { superClass } = node\n      const { type } = superClass\n      const precedence = state.expressionsPrecedence[type]\n      if (\n        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&\n        (precedence === NEEDS_PARENTHESES ||\n          precedence < state.expressionsPrecedence.ClassExpression)\n      ) {\n        // Not a ClassExpression that needs parentheses\n        state.write('(')\n        this[node.superClass.type](superClass, state)\n        state.write(')')\n      } else {\n        this[superClass.type](superClass, state)\n      }\n      state.write(' ')\n    }\n    this.ClassBody(node.body, state)\n  },\n  ImportDeclaration(node, state) {\n    state.write('import ')\n    const { specifiers } = node\n    const { length } = specifiers\n    // TODO: Once babili is fixed, put this after condition\n    // https://github.com/babel/babili/issues/430\n    let i = 0\n    if (length > 0) {\n      for (; i < length; ) {\n        if (i > 0) {\n          state.write(', ')\n        }\n        const specifier = specifiers[i]\n        const type = specifier.type[6]\n        if (type === 'D') {\n          // ImportDefaultSpecifier\n          state.write(specifier.local.name, specifier)\n          i++\n        } else if (type === 'N') {\n          // ImportNamespaceSpecifier\n          state.write('* as ' + specifier.local.name, specifier)\n          i++\n        } else {\n          // ImportSpecifier\n          break\n        }\n      }\n      if (i < length) {\n        state.write('{')\n        for (;;) {\n          const specifier = specifiers[i]\n          const { name } = specifier.imported\n          state.write(name, specifier)\n          if (name !== specifier.local.name) {\n            state.write(' as ' + specifier.local.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n        state.write('}')\n      }\n      state.write(' from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  ImportExpression(node, state) {\n    state.write('import(')\n    this[node.source.type](node.source, state)\n    state.write(')')\n  },\n  ExportDefaultDeclaration(node, state) {\n    state.write('export default ')\n    this[node.declaration.type](node.declaration, state)\n    if (\n      state.expressionsPrecedence[node.declaration.type] != null &&\n      node.declaration.type[0] !== 'F'\n    ) {\n      // All expression nodes except `FunctionExpression`\n      state.write(';')\n    }\n  },\n  ExportNamedDeclaration(node, state) {\n    state.write('export ')\n    if (node.declaration) {\n      this[node.declaration.type](node.declaration, state)\n    } else {\n      state.write('{')\n      const { specifiers } = node,\n        { length } = specifiers\n      if (length > 0) {\n        for (let i = 0; ; ) {\n          const specifier = specifiers[i]\n          const { name } = specifier.local\n          state.write(name, specifier)\n          if (name !== specifier.exported.name) {\n            state.write(' as ' + specifier.exported.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n      }\n      state.write('}')\n      if (node.source) {\n        state.write(' from ')\n        this.Literal(node.source, state)\n      }\n      state.write(';')\n    }\n  },\n  ExportAllDeclaration(node, state) {\n    if (node.exported != null) {\n      state.write('export * as ' + node.exported.name + ' from ')\n    } else {\n      state.write('export * from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  MethodDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    const kind = node.kind[0]\n    if (kind === 'g' || kind === 's') {\n      // Getter or setter\n      state.write(node.kind + ' ')\n    }\n    if (node.value.async) {\n      state.write('async ')\n    }\n    if (node.value.generator) {\n      state.write('*')\n    }\n    if (node.computed) {\n      state.write('[')\n      this[node.key.type](node.key, state)\n      state.write(']')\n    } else {\n      this[node.key.type](node.key, state)\n    }\n    formatSequence(state, node.value.params)\n    state.write(' ')\n    this[node.value.body.type](node.value.body, state)\n  },\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  ArrowFunctionExpression(node, state) {\n    state.write(node.async ? 'async ' : '', node)\n    const { params } = node\n    if (params != null) {\n      // Omit parenthesis if only one named parameter\n      if (params.length === 1 && params[0].type[0] === 'I') {\n        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`\n        state.write(params[0].name, params[0])\n      } else {\n        formatSequence(state, node.params)\n      }\n    }\n    state.write(' => ')\n    if (node.body.type[0] === 'O') {\n      // Body is an object expression\n      state.write('(')\n      this.ObjectExpression(node.body, state)\n      state.write(')')\n    } else {\n      this[node.body.type](node.body, state)\n    }\n  },\n  ThisExpression(node, state) {\n    state.write('this', node)\n  },\n  Super(node, state) {\n    state.write('super', node)\n  },\n  RestElement: (RestElement = function (node, state) {\n    state.write('...')\n    this[node.argument.type](node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    state.write(node.delegate ? 'yield*' : 'yield')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n  },\n  AwaitExpression(node, state) {\n    state.write('await ', node)\n    formatExpression(state, node.argument, node)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    state.write('`')\n    const { length } = expressions\n    for (let i = 0; i < length; i++) {\n      const expression = expressions[i]\n      const quasi = quasis[i]\n      state.write(quasi.value.raw, quasi)\n      state.write('${')\n      this[expression.type](expression, state)\n      state.write('}')\n    }\n    const quasi = quasis[quasis.length - 1]\n    state.write(quasi.value.raw, quasi)\n    state.write('`')\n  },\n  TemplateElement(node, state) {\n    state.write(node.value.raw, node)\n  },\n  TaggedTemplateExpression(node, state) {\n    this[node.tag.type](node.tag, state)\n    this[node.quasi.type](node.quasi, state)\n  },\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    state.write('[')\n    if (node.elements.length > 0) {\n      const { elements } = node,\n        { length } = elements\n      for (let i = 0; ; ) {\n        const element = elements[i]\n        if (element != null) {\n          this[element.type](element, state)\n        }\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          if (element == null) {\n            state.write(', ')\n          }\n          break\n        }\n      }\n    }\n    state.write(']')\n  }),\n  ArrayPattern: ArrayExpression,\n  ObjectExpression(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const propertyIndent = indent + state.indent\n    state.write('{')\n    if (node.properties.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n      }\n      const comma = ',' + lineEnd\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        const property = properties[i]\n        if (writeComments && property.comments != null) {\n          formatComments(state, property.comments, propertyIndent, lineEnd)\n        }\n        state.write(propertyIndent)\n        this[property.type](property, state)\n        if (++i < length) {\n          state.write(comma)\n        } else {\n          break\n        }\n      }\n      state.write(lineEnd)\n      if (writeComments && node.trailingComments != null) {\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n      }\n      state.write(indent + '}')\n    } else if (writeComments) {\n      if (node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n        if (node.trailingComments != null) {\n          formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        }\n        state.write(indent + '}')\n      } else if (node.trailingComments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        state.write(indent + '}')\n      } else {\n        state.write('}')\n      }\n    } else {\n      state.write('}')\n    }\n    state.indentLevel--\n  },\n  Property(node, state) {\n    if (node.method || node.kind[0] !== 'i') {\n      // Either a method or of kind `set` or `get` (not `init`)\n      this.MethodDefinition(node, state)\n    } else {\n      if (!node.shorthand) {\n        if (node.computed) {\n          state.write('[')\n          this[node.key.type](node.key, state)\n          state.write(']')\n        } else {\n          this[node.key.type](node.key, state)\n        }\n        state.write(': ')\n      }\n      this[node.value.type](node.value, state)\n    }\n  },\n  ObjectPattern(node, state) {\n    state.write('{')\n    if (node.properties.length > 0) {\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        this[properties[i].type](properties[i], state)\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          break\n        }\n      }\n    }\n    state.write('}')\n  },\n  SequenceExpression(node, state) {\n    formatSequence(state, node.expressions)\n  },\n  UnaryExpression(node, state) {\n    if (node.prefix) {\n      const {\n        operator,\n        argument,\n        argument: { type },\n      } = node\n      state.write(operator)\n      const needsParentheses = expressionNeedsParenthesis(state, argument, node)\n      if (\n        !needsParentheses &&\n        (operator.length > 1 ||\n          (type[0] === 'U' &&\n            (type[1] === 'n' || type[1] === 'p') &&\n            argument.prefix &&\n            argument.operator[0] === operator &&\n            (operator === '+' || operator === '-')))\n      ) {\n        // Large operator or argument is UnaryExpression or UpdateExpression node\n        state.write(' ')\n      }\n      if (needsParentheses) {\n        state.write(operator.length > 1 ? ' (' : '(')\n        this[type](argument, state)\n        state.write(')')\n      } else {\n        this[type](argument, state)\n      }\n    } else {\n      // FIXME: This case never occurs\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  UpdateExpression(node, state) {\n    // Always applied to identifiers or members, no parenthesis check needed\n    if (node.prefix) {\n      state.write(node.operator)\n      this[node.argument.type](node.argument, state)\n    } else {\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  AssignmentExpression(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' ' + node.operator + ' ')\n    this[node.right.type](node.right, state)\n  },\n  AssignmentPattern(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' = ')\n    this[node.right.type](node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    const isIn = node.operator === 'in'\n    if (isIn) {\n      // Avoids confusion in `for` loops initializers\n      state.write('(')\n    }\n    formatExpression(state, node.left, node, false)\n    state.write(' ' + node.operator + ' ')\n    formatExpression(state, node.right, node, true)\n    if (isIn) {\n      state.write(')')\n    }\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    const { test } = node\n    const precedence = state.expressionsPrecedence[test.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence <= state.expressionsPrecedence.ConditionalExpression\n    ) {\n      state.write('(')\n      this[test.type](test, state)\n      state.write(')')\n    } else {\n      this[test.type](test, state)\n    }\n    state.write(' ? ')\n    this[node.consequent.type](node.consequent, state)\n    state.write(' : ')\n    this[node.alternate.type](node.alternate, state)\n  },\n  NewExpression(node, state) {\n    state.write('new ')\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression ||\n      hasCallExpression(node.callee)\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    formatSequence(state, node['arguments'])\n  },\n  CallExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    if (node.optional) {\n      state.write('?.')\n    }\n    formatSequence(state, node['arguments'])\n  },\n  ChainExpression(node, state) {\n    this[node.expression.type](node.expression, state)\n  },\n  MemberExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.object.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.MemberExpression\n    ) {\n      state.write('(')\n      this[node.object.type](node.object, state)\n      state.write(')')\n    } else {\n      this[node.object.type](node.object, state)\n    }\n    if (node.computed) {\n      if (node.optional) {\n        state.write('?.')\n      }\n      state.write('[')\n      this[node.property.type](node.property, state)\n      state.write(']')\n    } else {\n      if (node.optional) {\n        state.write('?.')\n      } else {\n        state.write('.')\n      }\n      this[node.property.type](node.property, state)\n    }\n  },\n  MetaProperty(node, state) {\n    state.write(node.meta.name + '.' + node.property.name, node)\n  },\n  Identifier(node, state) {\n    state.write(node.name, node)\n  },\n  Literal(node, state) {\n    if (node.raw != null) {\n      // Non-standard property\n      state.write(node.raw, node)\n    } else if (node.regex != null) {\n      this.RegExpLiteral(node, state)\n    } else if (node.bigint != null) {\n      state.write(node.bigint + 'n', node)\n    } else {\n      state.write(stringify(node.value), node)\n    }\n  },\n  RegExpLiteral(node, state) {\n    const { regex } = node\n    state.write(`/${regex.pattern}/${regex.flags}`, node)\n  },\n}\n\nconst EMPTY_OBJECT = {}\n\n/*\nDEPRECATED: Alternate export of `GENERATOR`.\n*/\nexport const baseGenerator = GENERATOR\n\nclass State {\n  constructor(options) {\n    const setup = options == null ? EMPTY_OBJECT : options\n    this.output = ''\n    // Functional options\n    if (setup.output != null) {\n      this.output = setup.output\n      this.write = this.writeToStream\n    } else {\n      this.output = ''\n    }\n    this.generator = setup.generator != null ? setup.generator : GENERATOR\n    this.expressionsPrecedence =\n      setup.expressionsPrecedence != null\n        ? setup.expressionsPrecedence\n        : EXPRESSIONS_PRECEDENCE\n    // Formating setup\n    this.indent = setup.indent != null ? setup.indent : '  '\n    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\\n'\n    this.indentLevel =\n      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0\n    this.writeComments = setup.comments ? setup.comments : false\n    // Source map\n    if (setup.sourceMap != null) {\n      this.write =\n        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap\n      this.sourceMap = setup.sourceMap\n      this.line = 1\n      this.column = 0\n      this.lineEndSize = this.lineEnd.split('\\n').length - 1\n      this.mapping = {\n        original: null,\n        // Uses the entire state to avoid generating ephemeral objects\n        generated: this,\n        name: undefined,\n        source: setup.sourceMap.file || setup.sourceMap._file,\n      }\n    }\n  }\n\n  write(code) {\n    this.output += code\n  }\n\n  writeToStream(code) {\n    this.output.write(code)\n  }\n\n  writeAndMap(code, node) {\n    this.output += code\n    this.map(code, node)\n  }\n\n  writeToStreamAndMap(code, node) {\n    this.output.write(code)\n    this.map(code, node)\n  }\n\n  map(code, node) {\n    if (node != null) {\n      const { type } = node\n      if (type[0] === 'L' && type[2] === 'n') {\n        // LineComment\n        this.column = 0\n        this.line++\n        return\n      }\n      if (node.loc != null) {\n        const { mapping } = this\n        mapping.original = node.loc.start\n        mapping.name = node.name\n        this.sourceMap.addMapping(mapping)\n      }\n      if (\n        (type[0] === 'T' && type[8] === 'E') ||\n        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')\n      ) {\n        // TemplateElement or Literal string node\n        const { length } = code\n        let { column, line } = this\n        for (let i = 0; i < length; i++) {\n          if (code[i] === '\\n') {\n            column = 0\n            line++\n          } else {\n            column++\n          }\n        }\n        this.column = column\n        this.line = line\n        return\n      }\n    }\n    const { length } = code\n    const { lineEnd } = this\n    if (length > 0) {\n      if (\n        this.lineEndSize > 0 &&\n        (lineEnd.length === 1\n          ? code[length - 1] === lineEnd\n          : code.endsWith(lineEnd))\n      ) {\n        this.line += this.lineEndSize\n        this.column = 0\n      } else {\n        this.column += length\n      }\n    }\n  }\n\n  toString() {\n    return this.output\n  }\n}\n\nexport function generate(node, options) {\n  /*\n  Returns a string representing the rendered code of the provided AST `node`.\n  The `options` are:\n\n  - `indent`: string to use for indentation (defaults to `\u2423\u2423`)\n  - `lineEnd`: string to use for line endings (defaults to `\\n`)\n  - `startingIndentLevel`: indent level to start from (defaults to `0`)\n  - `comments`: generate comments if `true` (defaults to `false`)\n  - `output`: output stream to write the rendered code to (defaults to `null`)\n  - `generator`: custom code generator (defaults to `GENERATOR`)\n  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)\n  */\n  const state = new State(options)\n  // Travel through the AST node and generate the code\n  state.generator[node.type](node, state)\n  return state.output\n}\n", "const astring = require('astring')\n\nmodule.exports = function generate (tree, options) {\n  return astring.generate(tree, options)\n}\n", "const walk = require('./walk')\n\nmodule.exports = function (tree, callback, accumulator) {\n  walk(tree, node => {\n    accumulator = callback(accumulator, node)\n  })\n  return accumulator\n}\n", "const equal = require('./equal')\n\nfunction buildNodeFromAttribute (selector) {\n  const [start, end] = selector.split('=')\n  const startIndex = start.startsWith('[') ? 1 : 0\n  const endIndex = end.endsWith(']') ? end.length - 1 : end.length\n  const key = start.substring(startIndex)\n  const value = JSON.parse(end.substring(0, endIndex))\n  return { [key]: value }\n}\n\nfunction buildNodeFromAttributes (selector) {\n  const attributes = selector.split('][')\n  return attributes.reduce((object, attribute) => {\n    return { ...object, ...buildNodeFromAttribute(attribute) }\n  }, {})\n}\n\nfunction buildComplexNode (selector) {\n  const index = selector.indexOf('[')\n  const type = selector.substring(0, index)\n  const attribute = selector.substring(index, selector.length)\n  return { type, ...buildNodeFromAttributes(attribute) }\n}\n\nfunction buildNode (selector) {\n  if (selector.startsWith('[')) {\n    return buildNodeFromAttributes(selector)\n  } else if (selector.includes('[')) {\n    return buildComplexNode(selector)\n  }\n  return { type: selector }\n}\n\nfunction match (node, selector) {\n  if (typeof selector === 'string') {\n    return equal(node, buildNode(selector))\n  }\n  return equal(node, selector)\n}\n\nmodule.exports = match\n", "function serializeObjectExpression (node) {\n  const object = {}\n  node.properties.forEach(property => {\n    const key = property.key.name || property.key.value\n    object[key] = serialize(property.value)\n  })\n  return object\n}\n\nconst NEW_EXPRESSION_OBJECTS = {\n  Map,\n  Set,\n  WeakMap,\n  WeakSet,\n  Error,\n  EvalError,\n  RangeError,\n  ReferenceError,\n  SyntaxError,\n  TypeError,\n  URIError\n}\n\nfunction serializeNewExpression (node) {\n  if (node.callee.type === 'Identifier') {\n    const { name } = node.callee\n    if (Object.keys(NEW_EXPRESSION_OBJECTS).includes(name)) {\n      return new NEW_EXPRESSION_OBJECTS[name](node.arguments.map(serialize))\n    }\n  }\n}\n\nfunction serialize (node) {\n  if (node.type === 'Literal') {\n    if (node.regex) {\n      return new RegExp(node.regex.pattern, node.regex.flags)\n    }\n    return node.value\n  } else if (node.type === 'ArrayExpression') {\n    return node.elements.map(serialize)\n  } else if (node.type === 'ObjectExpression') {\n    return serializeObjectExpression(node)\n  } else if (node.type === 'NewExpression' && node.callee.type === 'Identifier') {\n    const object = serializeNewExpression(node)\n    if (object) {\n      return object\n    }\n  } else if (node.type === 'CallExpression' && node.callee.name === 'Symbol') {\n    return Symbol(...node.arguments.map(serialize))\n  } else if (node.type === 'Identifier') {\n    if (node.name === 'Infinity') {\n      return Infinity\n    } else if (node.name === 'NaN') {\n      return NaN\n    }\n  }\n}\n\nmodule.exports = serialize\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst intToCharMap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function(number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst base64 = require(\"./base64\");\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nconst VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nconst VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nconst VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nconst VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\n// eslint-disable-next-line no-unused-vars\nfunction fromVLQSigned(aValue) {\n  const isNegative = (aValue & 1) === 1;\n  const shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  let encoded = \"\";\n  let digit;\n\n  let vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  }\n    throw new Error('\"' + aName + '\" is a required argument.');\n\n}\nexports.getArg = getArg;\n\nconst urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nconst dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  const match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  let url = \"\";\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + \":\";\n  }\n  url += \"//\";\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + \"@\";\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port;\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nconst MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  const cache = [];\n\n  return function(input) {\n    for (let i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        const temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    const result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nconst normalize = lruMemoize(function normalize(aPath) {\n  let path = aPath;\n  const url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  const isAbsolute = exports.isAbsolute(path);\n\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  const parts = [];\n  let start = 0;\n  let i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  let up = 0;\n  for (i = parts.length - 1; i >= 0; i--) {\n    const part = parts[i];\n    if (part === \".\") {\n      parts.splice(i, 1);\n    } else if (part === \"..\") {\n      up++;\n    } else if (up > 0) {\n      if (part === \"\") {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join(\"/\");\n\n  if (path === \"\") {\n    path = isAbsolute ? \"/\" : \".\";\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  const aPathUrl = urlParse(aPath);\n  const aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || \"/\";\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  const joined = aPath.charAt(0) === \"/\"\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, \"\") + \"/\" + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function(aPath) {\n  return aPath.charAt(0) === \"/\" || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, \"\");\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  let level = 0;\n  while (aPath.indexOf(aRoot + \"/\") !== 0) {\n    const index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nconst supportsNullProto = (function() {\n  const obj = Object.create(null);\n  return !(\"__proto__\" in obj);\n}());\n\nfunction identity(s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return \"$\" + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  const length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  /* eslint-disable no-multi-spaces */\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n  /* eslint-enable no-multi-spaces */\n\n  for (let i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  let cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  let cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  let cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, \"\"));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || \"\";\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== \"/\" && sourceURL[0] !== \"/\") {\n      sourceRoot += \"/\";\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    const parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      const index = parsed.path.lastIndexOf(\"/\");\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nclass ArraySet {\n  constructor() {\n    this._array = [];\n    this._set = new Map();\n  }\n\n  /**\n   * Static method for creating ArraySet instances from an existing array.\n   */\n  static fromArray(aArray, aAllowDuplicates) {\n    const set = new ArraySet();\n    for (let i = 0, len = aArray.length; i < len; i++) {\n      set.add(aArray[i], aAllowDuplicates);\n    }\n    return set;\n  }\n\n  /**\n   * Return how many unique items are in this ArraySet. If duplicates have been\n   * added, than those do not count towards the size.\n   *\n   * @returns Number\n   */\n  size() {\n    return this._set.size;\n  }\n\n  /**\n   * Add the given string to this set.\n   *\n   * @param String aStr\n   */\n  add(aStr, aAllowDuplicates) {\n    const isDuplicate = this.has(aStr);\n    const idx = this._array.length;\n    if (!isDuplicate || aAllowDuplicates) {\n      this._array.push(aStr);\n    }\n    if (!isDuplicate) {\n      this._set.set(aStr, idx);\n    }\n  }\n\n  /**\n   * Is the given string a member of this set?\n   *\n   * @param String aStr\n   */\n  has(aStr) {\n      return this._set.has(aStr);\n  }\n\n  /**\n   * What is the index of the given string in the array?\n   *\n   * @param String aStr\n   */\n  indexOf(aStr) {\n    const idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n    throw new Error('\"' + aStr + '\" is not in the set.');\n  }\n\n  /**\n   * What is the element at the given index?\n   *\n   * @param Number aIdx\n   */\n  at(aIdx) {\n    if (aIdx >= 0 && aIdx < this._array.length) {\n      return this._array[aIdx];\n    }\n    throw new Error(\"No element indexed by \" + aIdx);\n  }\n\n  /**\n   * Returns the array representation of this set (which has the proper indices\n   * indicated by indexOf). Note that this is a copy of the internal array used\n   * for storing the members so that no one can mess with internal state.\n   */\n  toArray() {\n    return this._array.slice();\n  }\n}\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst util = require(\"./util\");\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  const lineA = mappingA.generatedLine;\n  const lineB = mappingB.generatedLine;\n  const columnA = mappingA.generatedColumn;\n  const columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a negligible overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nclass MappingList {\n  constructor() {\n    this._array = [];\n    this._sorted = true;\n    // Serves as infimum\n    this._last = {generatedLine: -1, generatedColumn: 0};\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n  unsortedForEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  }\n\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n  add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n      this._array.push(aMapping);\n    }\n  }\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n  toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n      this._sorted = true;\n    }\n    return this._array;\n  }\n}\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst base64VLQ = require(\"./base64-vlq\");\nconst util = require(\"./util\");\nconst ArraySet = require(\"./array-set\").ArraySet;\nconst MappingList = require(\"./mapping-list\").MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nclass SourceMapGenerator {\n  constructor(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, \"file\", null);\n    this._sourceRoot = util.getArg(aArgs, \"sourceRoot\", null);\n    this._skipValidation = util.getArg(aArgs, \"skipValidation\", false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  static fromSourceMap(aSourceMapConsumer) {\n    const sourceRoot = aSourceMapConsumer.sourceRoot;\n    const generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function(mapping) {\n      const newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function(sourceFile) {\n      let sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      const content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  }\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  addMapping(aArgs) {\n    const generated = util.getArg(aArgs, \"generated\");\n    const original = util.getArg(aArgs, \"original\", null);\n    let source = util.getArg(aArgs, \"source\", null);\n    let name = util.getArg(aArgs, \"name\", null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source,\n      name\n    });\n  }\n\n  /**\n   * Set the source content for a source file.\n   */\n  setSourceContent(aSourceFile, aSourceContent) {\n    let source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  }\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    let sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          \"SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, \" +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    const sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    const newSources = this._mappings.toArray().length > 0\n      ? new ArraySet()\n      : this._sources;\n    const newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function(mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        const original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      const source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      const name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function(srcFile) {\n      const content = aSourceMapConsumer.sourceContentFor(srcFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          srcFile = util.join(aSourceMapPath, srcFile);\n        }\n        if (sourceRoot != null) {\n          srcFile = util.relative(sourceRoot, srcFile);\n        }\n        this.setSourceContent(srcFile, content);\n      }\n    }, this);\n  }\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  _validateMapping(aGenerated, aOriginal, aSource, aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== \"number\" && typeof aOriginal.column !== \"number\") {\n        throw new Error(\n            \"original.line and original.column are not numbers -- you probably meant to omit \" +\n            \"the original mapping entirely and only map the generated position. If so, pass \" +\n            \"null for the original mapping instead of an object with empty or null values.\"\n        );\n    }\n\n    if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n\n    } else if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n             && aOriginal && \"line\" in aOriginal && \"column\" in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n\n    } else {\n      throw new Error(\"Invalid mapping: \" + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  }\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  _serializeMappings() {\n    let previousGeneratedColumn = 0;\n    let previousGeneratedLine = 1;\n    let previousOriginalColumn = 0;\n    let previousOriginalLine = 0;\n    let previousName = 0;\n    let previousSource = 0;\n    let result = \"\";\n    let next;\n    let mapping;\n    let nameIdx;\n    let sourceIdx;\n\n    const mappings = this._mappings.toArray();\n    for (let i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = \"\";\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += \";\";\n          previousGeneratedLine++;\n        }\n      } else if (i > 0) {\n        if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n          continue;\n        }\n        next += \",\";\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  }\n\n  _generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function(source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      const key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  }\n\n  /**\n   * Externalize the source map.\n   */\n  toJSON() {\n    const map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  }\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nSourceMapGenerator.prototype._version = 3;\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  const mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  const cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  } else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    }\n    return mid;\n  }\n\n  // Our needle is less than aHaystack[mid].\n  if (mid - aLow > 1) {\n    // The element is in the lower half.\n    return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n  }\n\n  // we are in termination case (3) or (2) and return the appropriate thing.\n  if (aBias == exports.LEAST_UPPER_BOUND) {\n    return mid;\n  }\n  return aLow < 0 ? -1 : aLow;\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  let index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "if (typeof fetch === \"function\") {\n  // Web version of reading a wasm file into an array buffer.\n\n  let mappingsWasmUrl = null;\n\n  module.exports = function readWasm() {\n    if (typeof mappingsWasmUrl !== \"string\") {\n      throw new Error(\"You must provide the URL of lib/mappings.wasm by calling \" +\n                      \"SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) \" +\n                      \"before using SourceMapConsumer\");\n    }\n\n    return fetch(mappingsWasmUrl)\n      .then(response => response.arrayBuffer());\n  };\n\n  module.exports.initialize = url => mappingsWasmUrl = url;\n} else {\n  // Node version of reading a wasm file into an array buffer.\n  const fs = require(\"fs\");\n  const path = require(\"path\");\n\n  module.exports = function readWasm() {\n    return new Promise((resolve, reject) => {\n      const wasmPath = path.join(__dirname, \"mappings.wasm\");\n      fs.readFile(wasmPath, null, (error, data) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(data.buffer);\n      });\n    });\n  };\n\n  module.exports.initialize = _ => {\n    console.debug(\"SourceMapConsumer.initialize is a no-op when running in node.js\");\n  };\n}\n", "const readWasm = require(\"../lib/read-wasm\");\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.lastGeneratedColumn = null;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\nlet cachedWasm = null;\n\nmodule.exports = function wasm() {\n  if (cachedWasm) {\n    return cachedWasm;\n  }\n\n  const callbackStack = [];\n\n  cachedWasm = readWasm().then(buffer => {\n      return WebAssembly.instantiate(buffer, {\n        env: {\n          mapping_callback(\n            generatedLine,\n            generatedColumn,\n\n            hasLastGeneratedColumn,\n            lastGeneratedColumn,\n\n            hasOriginal,\n            source,\n            originalLine,\n            originalColumn,\n\n            hasName,\n            name\n          ) {\n            const mapping = new Mapping();\n            // JS uses 1-based line numbers, wasm uses 0-based.\n            mapping.generatedLine = generatedLine + 1;\n            mapping.generatedColumn = generatedColumn;\n\n            if (hasLastGeneratedColumn) {\n              // JS uses inclusive last generated column, wasm uses exclusive.\n              mapping.lastGeneratedColumn = lastGeneratedColumn - 1;\n            }\n\n            if (hasOriginal) {\n              mapping.source = source;\n              // JS uses 1-based line numbers, wasm uses 0-based.\n              mapping.originalLine = originalLine + 1;\n              mapping.originalColumn = originalColumn;\n\n              if (hasName) {\n                mapping.name = name;\n              }\n            }\n\n            callbackStack[callbackStack.length - 1](mapping);\n          },\n\n          start_all_generated_locations_for() { console.time(\"all_generated_locations_for\"); },\n          end_all_generated_locations_for() { console.timeEnd(\"all_generated_locations_for\"); },\n\n          start_compute_column_spans() { console.time(\"compute_column_spans\"); },\n          end_compute_column_spans() { console.timeEnd(\"compute_column_spans\"); },\n\n          start_generated_location_for() { console.time(\"generated_location_for\"); },\n          end_generated_location_for() { console.timeEnd(\"generated_location_for\"); },\n\n          start_original_location_for() { console.time(\"original_location_for\"); },\n          end_original_location_for() { console.timeEnd(\"original_location_for\"); },\n\n          start_parse_mappings() { console.time(\"parse_mappings\"); },\n          end_parse_mappings() { console.timeEnd(\"parse_mappings\"); },\n\n          start_sort_by_generated_location() { console.time(\"sort_by_generated_location\"); },\n          end_sort_by_generated_location() { console.timeEnd(\"sort_by_generated_location\"); },\n\n          start_sort_by_original_location() { console.time(\"sort_by_original_location\"); },\n          end_sort_by_original_location() { console.timeEnd(\"sort_by_original_location\"); },\n        }\n      });\n  }).then(Wasm => {\n    return {\n      exports: Wasm.instance.exports,\n      withMappingCallback: (mappingCallback, f) => {\n        callbackStack.push(mappingCallback);\n        try {\n          f();\n        } finally {\n          callbackStack.pop();\n        }\n      }\n    };\n  }).then(null, e => {\n    cachedWasm = null;\n    throw e;\n  });\n\n  return cachedWasm;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst util = require(\"./util\");\nconst binarySearch = require(\"./binary-search\");\nconst ArraySet = require(\"./array-set\").ArraySet;\nconst base64VLQ = require(\"./base64-vlq\"); // eslint-disable-line no-unused-vars\nconst readWasm = require(\"../lib/read-wasm\");\nconst wasm = require(\"./wasm\");\n\nconst INTERNAL = Symbol(\"smcInternal\");\n\nclass SourceMapConsumer {\n  constructor(aSourceMap, aSourceMapURL) {\n    // If the constructor was called by super(), just return Promise<this>.\n    // Yes, this is a hack to retain the pre-existing API of the base-class\n    // constructor also being an async factory function.\n    if (aSourceMap == INTERNAL) {\n      return Promise.resolve(this);\n    }\n\n    return _factory(aSourceMap, aSourceMapURL);\n  }\n\n  static initialize(opts) {\n    readWasm.initialize(opts[\"lib/mappings.wasm\"]);\n  }\n\n  static fromSourceMap(aSourceMap, aSourceMapURL) {\n    return _factoryBSM(aSourceMap, aSourceMapURL);\n  }\n\n  /**\n   * Construct a new `SourceMapConsumer` from `rawSourceMap` and `sourceMapUrl`\n   * (see the `SourceMapConsumer` constructor for details. Then, invoke the `async\n   * function f(SourceMapConsumer) -> T` with the newly constructed consumer, wait\n   * for `f` to complete, call `destroy` on the consumer, and return `f`'s return\n   * value.\n   *\n   * You must not use the consumer after `f` completes!\n   *\n   * By using `with`, you do not have to remember to manually call `destroy` on\n   * the consumer, since it will be called automatically once `f` completes.\n   *\n   * ```js\n   * const xSquared = await SourceMapConsumer.with(\n   *   myRawSourceMap,\n   *   null,\n   *   async function (consumer) {\n   *     // Use `consumer` inside here and don't worry about remembering\n   *     // to call `destroy`.\n   *\n   *     const x = await whatever(consumer);\n   *     return x * x;\n   *   }\n   * );\n   *\n   * // You may not use that `consumer` anymore out here; it has\n   * // been destroyed. But you can use `xSquared`.\n   * console.log(xSquared);\n   * ```\n   */\n  static with(rawSourceMap, sourceMapUrl, f) {\n    // Note: The `acorn` version that `webpack` currently depends on doesn't\n    // support `async` functions, and the nodes that we support don't all have\n    // `.finally`. Therefore, this is written a bit more convolutedly than it\n    // should really be.\n\n    let consumer = null;\n    const promise = new SourceMapConsumer(rawSourceMap, sourceMapUrl);\n    return promise\n      .then(c => {\n        consumer = c;\n        return f(c);\n      })\n      .then(x => {\n        if (consumer) {\n          consumer.destroy();\n        }\n        return x;\n      }, e => {\n        if (consumer) {\n          consumer.destroy();\n        }\n        throw e;\n      });\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  _parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  }\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  eachMapping(aCallback, aContext, aOrder) {\n    throw new Error(\"Subclasses must implement eachMapping\");\n  }\n\n  /**\n   * Returns all generated line and column information for the original source,\n   * line, and column provided. If no column is provided, returns all mappings\n   * corresponding to a either the line we are searching for or the next\n   * closest line that has any mappings. Otherwise, returns all mappings\n   * corresponding to the given line and either the column we are searching for\n   * or the next closest column that has any offsets.\n   *\n   * The only argument is an object with the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.  The line number is 1-based.\n   *   - column: Optional. the column number in the original source.\n   *    The column number is 0-based.\n   *\n   * and an array of objects is returned, each with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.  The\n   *    line number is 1-based.\n   *   - column: The column number in the generated source, or null.\n   *    The column number is 0-based.\n   */\n  allGeneratedPositionsFor(aArgs) {\n    throw new Error(\"Subclasses must implement allGeneratedPositionsFor\");\n  }\n\n  destroy() {\n    throw new Error(\"Subclasses must implement destroy\");\n  }\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nclass BasicSourceMapConsumer extends SourceMapConsumer {\n  constructor(aSourceMap, aSourceMapURL) {\n    return super(INTERNAL).then(that => {\n      let sourceMap = aSourceMap;\n      if (typeof aSourceMap === \"string\") {\n        sourceMap = util.parseSourceMapInput(aSourceMap);\n      }\n\n      const version = util.getArg(sourceMap, \"version\");\n      let sources = util.getArg(sourceMap, \"sources\");\n      // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n      // requires the array) to play nice here.\n      const names = util.getArg(sourceMap, \"names\", []);\n      let sourceRoot = util.getArg(sourceMap, \"sourceRoot\", null);\n      const sourcesContent = util.getArg(sourceMap, \"sourcesContent\", null);\n      const mappings = util.getArg(sourceMap, \"mappings\");\n      const file = util.getArg(sourceMap, \"file\", null);\n\n      // Once again, Sass deviates from the spec and supplies the version as a\n      // string rather than a number, so we use loose equality checking here.\n      if (version != that._version) {\n        throw new Error(\"Unsupported version: \" + version);\n      }\n\n      if (sourceRoot) {\n        sourceRoot = util.normalize(sourceRoot);\n      }\n\n      sources = sources\n        .map(String)\n        // Some source maps produce relative source paths like \"./foo.js\" instead of\n        // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n        // See bugzil.la/1090768.\n        .map(util.normalize)\n        // Always ensure that absolute sources are internally stored relative to\n        // the source root, if the source root is absolute. Not doing this would\n        // be particularly problematic when the source root is a prefix of the\n        // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n        .map(function(source) {\n          return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n            ? util.relative(sourceRoot, source)\n            : source;\n        });\n\n      // Pass `true` below to allow duplicate names and sources. While source maps\n      // are intended to be compressed and deduplicated, the TypeScript compiler\n      // sometimes generates source maps with duplicates in them. See Github issue\n      // #72 and bugzil.la/889492.\n      that._names = ArraySet.fromArray(names.map(String), true);\n      that._sources = ArraySet.fromArray(sources, true);\n\n      that._absoluteSources = that._sources.toArray().map(function(s) {\n        return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n      });\n\n      that.sourceRoot = sourceRoot;\n      that.sourcesContent = sourcesContent;\n      that._mappings = mappings;\n      that._sourceMapURL = aSourceMapURL;\n      that.file = file;\n\n      that._computedColumnSpans = false;\n      that._mappingsPtr = 0;\n      that._wasm = null;\n\n      return wasm().then(w => {\n        that._wasm = w;\n        return that;\n      });\n    });\n  }\n\n  /**\n   * Utility function to find the index of a source.  Returns -1 if not\n   * found.\n   */\n  _findSourceIndex(aSource) {\n    let relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    if (this._sources.has(relativeSource)) {\n      return this._sources.indexOf(relativeSource);\n    }\n\n    // Maybe aSource is an absolute URL as returned by |sources|.  In\n    // this case we can't simply undo the transform.\n    for (let i = 0; i < this._absoluteSources.length; ++i) {\n      if (this._absoluteSources[i] == aSource) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @param String aSourceMapURL\n   *        The URL at which the source map can be found (optional)\n   * @returns BasicSourceMapConsumer\n   */\n  static fromSourceMap(aSourceMap, aSourceMapURL) {\n    return new BasicSourceMapConsumer(aSourceMap.toString());\n  }\n\n  get sources() {\n    return this._absoluteSources.slice();\n  }\n\n  _getMappingsPtr() {\n    if (this._mappingsPtr === 0) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this._mappingsPtr;\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  _parseMappings(aStr, aSourceRoot) {\n    const size = aStr.length;\n\n    const mappingsBufPtr = this._wasm.exports.allocate_mappings(size);\n    const mappingsBuf = new Uint8Array(this._wasm.exports.memory.buffer, mappingsBufPtr, size);\n    for (let i = 0; i < size; i++) {\n      mappingsBuf[i] = aStr.charCodeAt(i);\n    }\n\n    const mappingsPtr = this._wasm.exports.parse_mappings(mappingsBufPtr);\n\n    if (!mappingsPtr) {\n      const error = this._wasm.exports.get_last_error();\n      let msg = `Error parsing mappings (code ${error}): `;\n\n      // XXX: keep these error codes in sync with `fitzgen/source-map-mappings`.\n      switch (error) {\n        case 1:\n          msg += \"the mappings contained a negative line, column, source index, or name index\";\n          break;\n        case 2:\n          msg += \"the mappings contained a number larger than 2**32\";\n          break;\n        case 3:\n          msg += \"reached EOF while in the middle of parsing a VLQ\";\n          break;\n        case 4:\n          msg += \"invalid base 64 character while parsing a VLQ\";\n          break;\n        default:\n          msg += \"unknown error code\";\n          break;\n      }\n\n      throw new Error(msg);\n    }\n\n    this._mappingsPtr = mappingsPtr;\n  }\n\n  eachMapping(aCallback, aContext, aOrder) {\n    const context = aContext || null;\n    const order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n    const sourceRoot = this.sourceRoot;\n\n    this._wasm.withMappingCallback(\n      mapping => {\n        if (mapping.source !== null) {\n          mapping.source = this._sources.at(mapping.source);\n          mapping.source = util.computeSourceURL(sourceRoot, mapping.source, this._sourceMapURL);\n\n          if (mapping.name !== null) {\n            mapping.name = this._names.at(mapping.name);\n          }\n        }\n\n        aCallback.call(context, mapping);\n      },\n      () => {\n        switch (order) {\n        case SourceMapConsumer.GENERATED_ORDER:\n          this._wasm.exports.by_generated_location(this._getMappingsPtr());\n          break;\n        case SourceMapConsumer.ORIGINAL_ORDER:\n          this._wasm.exports.by_original_location(this._getMappingsPtr());\n          break;\n        default:\n          throw new Error(\"Unknown order of iteration.\");\n        }\n      }\n    );\n  }\n\n  allGeneratedPositionsFor(aArgs) {\n    let source = util.getArg(aArgs, \"source\");\n    const originalLine = util.getArg(aArgs, \"line\");\n    const originalColumn = aArgs.column || 0;\n\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return [];\n    }\n\n    if (originalLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (originalColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    const mappings = [];\n\n    this._wasm.withMappingCallback(\n      m => {\n        let lastColumn = m.lastGeneratedColumn;\n        if (this._computedColumnSpans && lastColumn === null) {\n          lastColumn = Infinity;\n        }\n        mappings.push({\n          line: m.generatedLine,\n          column: m.generatedColumn,\n          lastColumn,\n        });\n      }, () => {\n        this._wasm.exports.all_generated_locations_for(\n          this._getMappingsPtr(),\n          source,\n          originalLine - 1,\n          \"column\" in aArgs,\n          originalColumn\n        );\n      }\n    );\n\n    return mappings;\n  }\n\n  destroy() {\n    if (this._mappingsPtr !== 0) {\n      this._wasm.exports.free_mappings(this._mappingsPtr);\n      this._mappingsPtr = 0;\n    }\n  }\n\n  /**\n   * Compute the last column for each generated mapping. The last column is\n   * inclusive.\n   */\n  computeColumnSpans() {\n    if (this._computedColumnSpans) {\n      return;\n    }\n\n    this._wasm.exports.compute_column_spans(this._getMappingsPtr());\n    this._computedColumnSpans = true;\n  }\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the generated source.  The column\n   *     number is 0-based.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the original source, or null.  The\n   *     column number is 0-based.\n   *   - name: The original identifier, or null.\n   */\n  originalPositionFor(aArgs) {\n    const needle = {\n      generatedLine: util.getArg(aArgs, \"line\"),\n      generatedColumn: util.getArg(aArgs, \"column\")\n    };\n\n    if (needle.generatedLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (needle.generatedColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    let bias = util.getArg(aArgs, \"bias\", SourceMapConsumer.GREATEST_LOWER_BOUND);\n    if (bias == null) {\n      bias = SourceMapConsumer.GREATEST_LOWER_BOUND;\n    }\n\n    let mapping;\n    this._wasm.withMappingCallback(m => mapping = m, () => {\n      this._wasm.exports.original_location_for(\n        this._getMappingsPtr(),\n        needle.generatedLine - 1,\n        needle.generatedColumn,\n        bias\n      );\n    });\n\n    if (mapping) {\n      if (mapping.generatedLine === needle.generatedLine) {\n        let source = util.getArg(mapping, \"source\", null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n\n        let name = util.getArg(mapping, \"name\", null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n\n        return {\n          source,\n          line: util.getArg(mapping, \"originalLine\", null),\n          column: util.getArg(mapping, \"originalColumn\", null),\n          name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  }\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function(sc) { return sc == null; });\n  }\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * available.\n   */\n  sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    const index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    let relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    let url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      const fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n\n    throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n  }\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the original source.  The column\n   *     number is 0-based.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the generated source, or null.\n   *     The column number is 0-based.\n   */\n  generatedPositionFor(aArgs) {\n    let source = util.getArg(aArgs, \"source\");\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    const needle = {\n      source,\n      originalLine: util.getArg(aArgs, \"line\"),\n      originalColumn: util.getArg(aArgs, \"column\")\n    };\n\n    if (needle.originalLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (needle.originalColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    let bias = util.getArg(aArgs, \"bias\", SourceMapConsumer.GREATEST_LOWER_BOUND);\n    if (bias == null) {\n      bias = SourceMapConsumer.GREATEST_LOWER_BOUND;\n    }\n\n    let mapping;\n    this._wasm.withMappingCallback(m => mapping = m, () => {\n      this._wasm.exports.generated_location_for(\n        this._getMappingsPtr(),\n        needle.source,\n        needle.originalLine - 1,\n        needle.originalColumn,\n        bias\n      );\n    });\n\n    if (mapping) {\n      if (mapping.source === needle.source) {\n        let lastColumn = mapping.lastGeneratedColumn;\n        if (this._computedColumnSpans && lastColumn === null) {\n          lastColumn = Infinity;\n        }\n        return {\n          line: util.getArg(mapping, \"generatedLine\", null),\n          column: util.getArg(mapping, \"generatedColumn\", null),\n          lastColumn,\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  }\n}\n\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nclass IndexedSourceMapConsumer extends SourceMapConsumer {\n  constructor(aSourceMap, aSourceMapURL) {\n    return super(INTERNAL).then(that => {\n      let sourceMap = aSourceMap;\n      if (typeof aSourceMap === \"string\") {\n        sourceMap = util.parseSourceMapInput(aSourceMap);\n      }\n\n      const version = util.getArg(sourceMap, \"version\");\n      const sections = util.getArg(sourceMap, \"sections\");\n\n      if (version != that._version) {\n        throw new Error(\"Unsupported version: \" + version);\n      }\n\n      that._sources = new ArraySet();\n      that._names = new ArraySet();\n      that.__generatedMappings = null;\n      that.__originalMappings = null;\n      that.__generatedMappingsUnsorted = null;\n      that.__originalMappingsUnsorted = null;\n\n      let lastOffset = {\n        line: -1,\n        column: 0\n      };\n      return Promise.all(sections.map(s => {\n        if (s.url) {\n          // The url field will require support for asynchronicity.\n          // See https://github.com/mozilla/source-map/issues/16\n          throw new Error(\"Support for url field in sections not implemented.\");\n        }\n        const offset = util.getArg(s, \"offset\");\n        const offsetLine = util.getArg(offset, \"line\");\n        const offsetColumn = util.getArg(offset, \"column\");\n\n        if (offsetLine < lastOffset.line ||\n            (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n          throw new Error(\"Section offsets must be ordered and non-overlapping.\");\n        }\n        lastOffset = offset;\n\n        const cons = new SourceMapConsumer(util.getArg(s, \"map\"), aSourceMapURL);\n        return cons.then(consumer => {\n          return {\n            generatedOffset: {\n              // The offset fields are 0-based, but we use 1-based indices when\n              // encoding/decoding from VLQ.\n              generatedLine: offsetLine + 1,\n              generatedColumn: offsetColumn + 1\n            },\n            consumer\n          };\n        });\n      })).then(s => {\n        that._sections = s;\n        return that;\n      });\n    });\n  }\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n  get _generatedMappings() {\n    if (!this.__generatedMappings) {\n      this._sortGeneratedMappings();\n    }\n\n    return this.__generatedMappings;\n  }\n\n  get _originalMappings() {\n    if (!this.__originalMappings) {\n      this._sortOriginalMappings();\n    }\n\n    return this.__originalMappings;\n  }\n\n  get _generatedMappingsUnsorted() {\n    if (!this.__generatedMappingsUnsorted) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappingsUnsorted;\n  }\n\n  get _originalMappingsUnsorted() {\n    if (!this.__originalMappingsUnsorted) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappingsUnsorted;\n  }\n\n  _sortGeneratedMappings() {\n    const mappings = this._generatedMappingsUnsorted;\n    mappings.sort(util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = mappings;\n  }\n\n  _sortOriginalMappings() {\n    const mappings = this._originalMappingsUnsorted;\n    mappings.sort(util.compareByOriginalPositions);\n    this.__originalMappings = mappings;\n  }\n\n  /**\n   * The list of original sources.\n   */\n  get sources() {\n    const sources = [];\n    for (let i = 0; i < this._sections.length; i++) {\n      for (let j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the generated source.  The column\n   *     number is 0-based.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the original source, or null.  The\n   *     column number is 0-based.\n   *   - name: The original identifier, or null.\n   */\n  originalPositionFor(aArgs) {\n    const needle = {\n      generatedLine: util.getArg(aArgs, \"line\"),\n      generatedColumn: util.getArg(aArgs, \"column\")\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    const sectionIndex = binarySearch.search(needle, this._sections,\n      function(aNeedle, section) {\n        const cmp = aNeedle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (aNeedle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    const section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  }\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  hasContentsOfAllSources() {\n    return this._sections.every(function(s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  }\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * available.\n   */\n  sourceContentFor(aSource, nullOnMissing) {\n    for (let i = 0; i < this._sections.length; i++) {\n      const section = this._sections[i];\n\n      const content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n  }\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the original source.  The column\n   *     number is 0-based.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the generated source, or null.\n   *     The column number is 0-based.\n   */\n  generatedPositionFor(aArgs) {\n    for (let i = 0; i < this._sections.length; i++) {\n      const section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, \"source\")) === -1) {\n        continue;\n      }\n      const generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        const ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  _parseMappings(aStr, aSourceRoot) {\n    const generatedMappings = this.__generatedMappingsUnsorted = [];\n    const originalMappings = this.__originalMappingsUnsorted = [];\n    for (let i = 0; i < this._sections.length; i++) {\n      const section = this._sections[i];\n\n      const sectionMappings = [];\n      section.consumer.eachMapping(m => sectionMappings.push(m));\n\n      for (let j = 0; j < sectionMappings.length; j++) {\n        const mapping = sectionMappings[j];\n\n        // TODO: test if null is correct here.  The original code used\n        // `source`, which would actually have gotten used as null because\n        // var's get hoisted.\n        // See: https://github.com/mozilla/source-map/issues/333\n        let source = util.computeSourceURL(section.consumer.sourceRoot, null, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        let name = null;\n        if (mapping.name) {\n          this._names.add(mapping.name);\n          name = this._names.indexOf(mapping.name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        const adjustedMapping = {\n          source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name\n        };\n\n        generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === \"number\") {\n          originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n  }\n\n  eachMapping(aCallback, aContext, aOrder) {\n    const context = aContext || null;\n    const order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    let mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    const sourceRoot = this.sourceRoot;\n    mappings.map(function(mapping) {\n      let source = null;\n      if (mapping.source !== null) {\n        source = this._sources.at(mapping.source);\n        source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      }\n      return {\n        source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  }\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  _findMapping(aNeedle, aMappings, aLineName,\n              aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError(\"Line must be greater than or equal to 1, got \"\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError(\"Column must be greater than or equal to 0, got \"\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  }\n\n  allGeneratedPositionsFor(aArgs) {\n    const line = util.getArg(aArgs, \"line\");\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    const needle = {\n      source: util.getArg(aArgs, \"source\"),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, \"column\", 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    if (needle.originalLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (needle.originalColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    const mappings = [];\n\n    let index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      let mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        const originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          let lastColumn = mapping.lastGeneratedColumn;\n          if (this._computedColumnSpans && lastColumn === null) {\n            lastColumn = Infinity;\n          }\n          mappings.push({\n            line: util.getArg(mapping, \"generatedLine\", null),\n            column: util.getArg(mapping, \"generatedColumn\", null),\n            lastColumn,\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        const originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          let lastColumn = mapping.lastGeneratedColumn;\n          if (this._computedColumnSpans && lastColumn === null) {\n            lastColumn = Infinity;\n          }\n          mappings.push({\n            line: util.getArg(mapping, \"generatedLine\", null),\n            column: util.getArg(mapping, \"generatedColumn\", null),\n            lastColumn,\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  }\n\n  destroy() {\n    for (let i = 0; i < this._sections.length; i++) {\n      this._sections[i].consumer.destroy();\n    }\n  }\n}\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n/*\n * Cheat to get around inter-twingled classes.  `factory()` can be at the end\n * where it has access to non-hoisted classes, but it gets hoisted itself.\n */\nfunction _factory(aSourceMap, aSourceMapURL) {\n  let sourceMap = aSourceMap;\n  if (typeof aSourceMap === \"string\") {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  const consumer = sourceMap.sections != null\n      ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n      : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n  return Promise.resolve(consumer);\n}\n\nfunction _factoryBSM(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst SourceMapGenerator = require(\"./source-map-generator\").SourceMapGenerator;\nconst util = require(\"./util\");\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nconst REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nconst NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nconst isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nclass SourceNode {\n  constructor(aLine, aColumn, aSource, aChunks, aName) {\n    this.children = [];\n    this.sourceContents = {};\n    this.line = aLine == null ? null : aLine;\n    this.column = aColumn == null ? null : aColumn;\n    this.source = aSource == null ? null : aSource;\n    this.name = aName == null ? null : aName;\n    this[isSourceNode] = true;\n    if (aChunks != null) this.add(aChunks);\n  }\n\n  /**\n   * Creates a SourceNode from generated code and a SourceMapConsumer.\n   *\n   * @param aGeneratedCode The generated code\n   * @param aSourceMapConsumer The SourceMap for the generated code\n   * @param aRelativePath Optional. The path that relative sources in the\n   *        SourceMapConsumer should be relative to.\n   */\n  static fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    const node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    const remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    let remainingLinesIndex = 0;\n    const shiftNextLine = function() {\n      const lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      const newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    let lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    let lastMapping = null;\n    let nextLine;\n\n    aSourceMapConsumer.eachMapping(function(mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          nextLine = remainingLines[remainingLinesIndex] || \"\";\n          const code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        nextLine = remainingLines[remainingLinesIndex] || \"\";\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function(sourceFile) {\n      const content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        const source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  }\n\n  /**\n   * Add a chunk of generated JS to this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  add(aChunk) {\n    if (Array.isArray(aChunk)) {\n      aChunk.forEach(function(chunk) {\n        this.add(chunk);\n      }, this);\n    } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n      if (aChunk) {\n        this.children.push(aChunk);\n      }\n    } else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  }\n\n  /**\n   * Add a chunk of generated JS to the beginning of this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  prepend(aChunk) {\n    if (Array.isArray(aChunk)) {\n      for (let i = aChunk.length - 1; i >= 0; i--) {\n        this.prepend(aChunk[i]);\n      }\n    } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n      this.children.unshift(aChunk);\n    } else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  }\n\n  /**\n   * Walk over the tree of JS snippets in this node and its children. The\n   * walking function is called once for each snippet of JS and is passed that\n   * snippet and the its original associated source's line/column location.\n   *\n   * @param aFn The traversal function.\n   */\n  walk(aFn) {\n    let chunk;\n    for (let i = 0, len = this.children.length; i < len; i++) {\n      chunk = this.children[i];\n      if (chunk[isSourceNode]) {\n        chunk.walk(aFn);\n      } else if (chunk !== \"\") {\n        aFn(chunk, { source: this.source,\n                      line: this.line,\n                      column: this.column,\n                      name: this.name });\n      }\n    }\n  }\n\n  /**\n   * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n   * each of `this.children`.\n   *\n   * @param aSep The separator.\n   */\n  join(aSep) {\n    let newChildren;\n    let i;\n    const len = this.children.length;\n    if (len > 0) {\n      newChildren = [];\n      for (i = 0; i < len - 1; i++) {\n        newChildren.push(this.children[i]);\n        newChildren.push(aSep);\n      }\n      newChildren.push(this.children[i]);\n      this.children = newChildren;\n    }\n    return this;\n  }\n\n  /**\n   * Call String.prototype.replace on the very right-most source snippet. Useful\n   * for trimming whitespace from the end of a source node, etc.\n   *\n   * @param aPattern The pattern to replace.\n   * @param aReplacement The thing to replace the pattern with.\n   */\n  replaceRight(aPattern, aReplacement) {\n    const lastChild = this.children[this.children.length - 1];\n    if (lastChild[isSourceNode]) {\n      lastChild.replaceRight(aPattern, aReplacement);\n    } else if (typeof lastChild === \"string\") {\n      this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n    } else {\n      this.children.push(\"\".replace(aPattern, aReplacement));\n    }\n    return this;\n  }\n\n  /**\n   * Set the source content for a source file. This will be added to the SourceMapGenerator\n   * in the sourcesContent field.\n   *\n   * @param aSourceFile The filename of the source file\n   * @param aSourceContent The content of the source file\n   */\n  setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  }\n\n  /**\n   * Walk over the tree of SourceNodes. The walking function is called for each\n   * source file content and is passed the filename and source content.\n   *\n   * @param aFn The traversal function.\n   */\n  walkSourceContents(aFn) {\n    for (let i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    const sources = Object.keys(this.sourceContents);\n    for (let i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  }\n\n  /**\n   * Return the string representation of this source node. Walks over the tree\n   * and concatenates all the various snippets together to one string.\n   */\n  toString() {\n    let str = \"\";\n    this.walk(function(chunk) {\n      str += chunk;\n    });\n    return str;\n  }\n\n  /**\n   * Returns the string representation of this source node along with a source\n   * map.\n   */\n  toStringWithSourceMap(aArgs) {\n    const generated = {\n      code: \"\",\n      line: 1,\n      column: 0\n    };\n    const map = new SourceMapGenerator(aArgs);\n    let sourceMappingActive = false;\n    let lastOriginalSource = null;\n    let lastOriginalLine = null;\n    let lastOriginalColumn = null;\n    let lastOriginalName = null;\n    this.walk(function(chunk, original) {\n      generated.code += chunk;\n      if (original.source !== null\n          && original.line !== null\n          && original.column !== null) {\n        if (lastOriginalSource !== original.source\n          || lastOriginalLine !== original.line\n          || lastOriginalColumn !== original.column\n          || lastOriginalName !== original.name) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n        lastOriginalSource = original.source;\n        lastOriginalLine = original.line;\n        lastOriginalColumn = original.column;\n        lastOriginalName = original.name;\n        sourceMappingActive = true;\n      } else if (sourceMappingActive) {\n        map.addMapping({\n          generated: {\n            line: generated.line,\n            column: generated.column\n          }\n        });\n        lastOriginalSource = null;\n        sourceMappingActive = false;\n      }\n      for (let idx = 0, length = chunk.length; idx < length; idx++) {\n        if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n          generated.line++;\n          generated.column = 0;\n          // Mappings end at eol\n          if (idx + 1 === length) {\n            lastOriginalSource = null;\n            sourceMappingActive = false;\n          } else if (sourceMappingActive) {\n            map.addMapping({\n              source: original.source,\n              original: {\n                line: original.line,\n                column: original.column\n              },\n              generated: {\n                line: generated.line,\n                column: generated.column\n              },\n              name: original.name\n            });\n          }\n        } else {\n          generated.column++;\n        }\n      }\n    });\n    this.walkSourceContents(function(sourceFile, sourceContent) {\n      map.setSourceContent(sourceFile, sourceContent);\n    });\n\n    return { code: generated.code, map };\n  }\n}\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require(\"./lib/source-map-generator\").SourceMapGenerator;\nexports.SourceMapConsumer = require(\"./lib/source-map-consumer\").SourceMapConsumer;\nexports.SourceNode = require(\"./lib/source-node\").SourceNode;\n", "const { SourceMapGenerator } = require('source-map')\nconst generate = require('./generate')\n\nmodule.exports = function sourcemap (tree) {\n  const map = new SourceMapGenerator({ file: 'UNKNOWN' })\n  const source = generate(tree, { sourceMap: map })\n  return { source, map: map.toString() }\n}\n", "const walk = require('./walk')\n\nmodule.exports = function mark (tree) {\n  let cid = 1\n  walk(tree, node => {\n    node.cid = cid\n    cid += 1\n  })\n}\n", "module.exports = function program (body, options) {\n  body = Array.isArray(body) ? body : [body].filter(Boolean)\n  return {\n    type: 'Program',\n    sourceType: 'module',\n    body,\n    ...options\n  }\n}\n", "// An IIFE (Immediately Invoked Function Expression)\n// is a JavaScript function that runs as soon as it is defined.\n\nmodule.exports = function iife (body) {\n  body = Array.isArray(body) ? body : [body].filter(Boolean)\n  return {\n    type: 'ExpressionStatement',\n    expression: {\n      type: 'CallExpression',\n      callee: {\n        type: 'FunctionExpression',\n        id: null,\n        params: [],\n        body: {\n          type: 'BlockStatement',\n          body\n        },\n        async: false,\n        generator: false\n      },\n      arguments: []\n    }\n  }\n}\n", "class Node {\n  constructor (options) {\n    this.type = 'Node'\n    this.loc = null\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Node\n", "class SourceLocation {\n  constructor (options) {\n    this.type = 'SourceLocation'\n    this.source = null\n    this.start = null\n    this.end = null\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = SourceLocation\n", "class Position {\n  constructor (options) {\n    this.type = 'Position'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Position\n", "class Identifier {\n  constructor (param) {\n    this.type = 'Identifier'\n    const options = typeof param === 'string' ? { name: param } : param\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Identifier\n", "function isPrimitive (param) {\n  return typeof param === 'string' || typeof param === 'number' || typeof param === 'boolean' || param === null\n}\n\nclass Literal {\n  constructor (param) {\n    this.type = 'Literal'\n    const options = isPrimitive(param) ? { value: param } : param\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Literal\n", "class RegExpLiteral {\n  constructor (options) {\n    this.type = 'RegExpLiteral'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = RegExpLiteral\n", "class Program {\n  constructor (options) {\n    this.type = 'Program'\n    this.sourceType = 'script'\n    this.body = []\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Program\n", "class Function {\n  constructor (options) {\n    this.type = 'Function'\n    this.generator = false\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Function\n", "class Statement {\n  constructor (options) {\n    this.type = 'Statement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Statement\n", "const Statement = require('./Statement')\n\nclass ExpressionStatement extends Statement {\n  constructor (options) {\n    super()\n    this.type = 'ExpressionStatement'\n    this.expression = null\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ExpressionStatement\n", "class Directive {\n  constructor (options) {\n    this.type = 'Directive'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Directive\n", "const Statement = require('./Statement')\n\nclass BlockStatement extends Statement {\n  constructor (options) {\n    super()\n    this.type = 'BlockStatement'\n    this.body = []\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = BlockStatement\n", "class FunctionBody {\n  constructor (options) {\n    this.type = 'FunctionBody'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = FunctionBody\n", "const Statement = require('./Statement')\n\nclass EmptyStatement extends Statement {\n  constructor (options) {\n    super()\n    this.type = 'EmptyStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = EmptyStatement\n", "class DebuggerStatement {\n  constructor (options) {\n    this.type = 'DebuggerStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = DebuggerStatement\n", "class WithStatement {\n  constructor (options) {\n    this.type = 'WithStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = WithStatement\n", "class ReturnStatement {\n  constructor (options) {\n    this.type = 'ReturnStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ReturnStatement\n", "class LabeledStatement {\n  constructor (options) {\n    this.type = 'LabeledStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = LabeledStatement\n", "class BreakStatement {\n  constructor (options) {\n    this.type = 'BreakStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = BreakStatement\n", "class ContinueStatement {\n  constructor (options) {\n    this.type = 'ContinueStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ContinueStatement\n", "const Statement = require('./Statement')\n\nclass IfStatement extends Statement {\n  constructor (options) {\n    super()\n    this.type = 'IfStatement'\n    this.test = null\n    this.consequent = null\n    this.alternate = null\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = IfStatement\n", "class SwitchStatement {\n  constructor (options) {\n    this.type = 'SwitchStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = SwitchStatement\n", "class SwitchCase {\n  constructor (options) {\n    this.type = 'SwitchCase'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = SwitchCase\n", "class ThrowStatement {\n  constructor (options) {\n    this.type = 'ThrowStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ThrowStatement\n", "class TryStatement {\n  constructor (options) {\n    this.type = 'TryStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = TryStatement\n", "class CatchClause {\n  constructor (options) {\n    this.type = 'CatchClause'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = CatchClause\n", "class WhileStatement {\n  constructor (options) {\n    this.type = 'WhileStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = WhileStatement\n", "class DoWhileStatement {\n  constructor (options) {\n    this.type = 'DoWhileStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = DoWhileStatement\n", "class ForStatement {\n  constructor (options) {\n    this.type = 'ForStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ForStatement\n", "class ForInStatement {\n  constructor (options) {\n    this.type = 'ForInStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ForInStatement\n", "class Declaration {\n  constructor (options) {\n    this.type = 'Declaration'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Declaration\n", "class FunctionDeclaration {\n  constructor (options) {\n    this.type = 'FunctionDeclaration'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = FunctionDeclaration\n", "class VariableDeclaration {\n  constructor (options) {\n    this.type = 'VariableDeclaration'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = VariableDeclaration\n", "class VariableDeclarator {\n  constructor (options) {\n    this.type = 'VariableDeclarator'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = VariableDeclarator\n", "class Expression {\n  constructor (options) {\n    this.type = 'Expression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Expression\n", "class ThisExpression {\n  constructor (options) {\n    this.type = 'ThisExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ThisExpression\n", "class ArrayExpression {\n  constructor (param) {\n    this.type = 'ArrayExpression'\n    const options = Array.isArray(param) ? { elements: param } : param\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ArrayExpression\n", "class ObjectExpression {\n  constructor (options) {\n    this.type = 'ObjectExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ObjectExpression\n", "class Property {\n  constructor (options) {\n    this.type = 'Property'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Property\n", "class FunctionExpression {\n  constructor (options) {\n    this.type = 'FunctionExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = FunctionExpression\n", "class UnaryExpression {\n  constructor (options) {\n    this.type = 'UnaryExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = UnaryExpression\n", "class UnaryOperator {\n  constructor (options) {\n    this.type = 'UnaryOperator'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = UnaryOperator\n", "class UpdateExpression {\n  constructor (options) {\n    this.type = 'UpdateExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = UpdateExpression\n", "class UpdateOperator {\n  constructor (options) {\n    this.type = 'UpdateOperator'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = UpdateOperator\n", "class BinaryExpression {\n  constructor (options) {\n    this.type = 'BinaryExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = BinaryExpression\n", "class BinaryOperator {\n  constructor (options) {\n    this.type = 'BinaryOperator'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = BinaryOperator\n", "class AssignmentExpression {\n  constructor (options) {\n    this.type = 'AssignmentExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = AssignmentExpression\n", "class AssignmentOperator {\n  constructor (options) {\n    this.type = 'AssignmentOperator'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = AssignmentOperator\n", "class LogicalExpression {\n  constructor (options) {\n    this.type = 'LogicalExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = LogicalExpression\n", "class LogicalOperator {\n  constructor (options) {\n    this.type = 'LogicalOperator'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = LogicalOperator\n", "class MemberExpression {\n  constructor (options) {\n    this.type = 'MemberExpression'\n    this.computed = false\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = MemberExpression\n", "class ConditionalExpression {\n  constructor (options) {\n    this.type = 'ConditionalExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ConditionalExpression\n", "const Identifier = require('./Identifier')\n\nclass CallExpression {\n  constructor (param, array) {\n    this.type = 'CallExpression'\n    const options = typeof param === 'string' ? { callee: new Identifier(param) } : param\n    if (Array.isArray(array)) {\n      options.arguments = array.map(param => {\n        return typeof param === 'string' ? new Identifier(param) : param\n      })\n    }\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = CallExpression\n", "class NewExpression {\n  constructor (options) {\n    this.type = 'NewExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = NewExpression\n", "class SequenceExpression {\n  constructor (options) {\n    this.type = 'SequenceExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = SequenceExpression\n", "class Pattern {\n  constructor (options) {\n    this.type = 'Pattern'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Pattern\n", "class ForOfStatement {\n  constructor (options) {\n    this.type = 'ForOfStatement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ForOfStatement\n", "class Super {\n  constructor (options) {\n    this.type = 'Super'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Super\n", "class SpreadElement {\n  constructor (options) {\n    this.type = 'SpreadElement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = SpreadElement\n", "class YieldExpression {\n  constructor (options) {\n    this.type = 'YieldExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = YieldExpression\n", "class TemplateLiteral {\n  constructor (options) {\n    this.type = 'TemplateLiteral'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = TemplateLiteral\n", "class TaggedTemplateExpression {\n  constructor (options) {\n    this.type = 'TaggedTemplateExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = TaggedTemplateExpression\n", "class TemplateElement {\n  constructor (options) {\n    this.type = 'TemplateElement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = TemplateElement\n", "class ObjectPattern {\n  constructor (options) {\n    this.type = 'ObjectPattern'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ObjectPattern\n", "class ArrayPattern {\n  constructor (options) {\n    this.type = 'ArrayPattern'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ArrayPattern\n", "class RestElement {\n  constructor (options) {\n    this.type = 'RestElement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = RestElement\n", "class AssignmentPattern {\n  constructor (options) {\n    this.type = 'AssignmentPattern'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = AssignmentPattern\n", "class Class {\n  constructor (options) {\n    this.type = 'Class'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = Class\n", "class ClassBody {\n  constructor (options) {\n    this.type = 'ClassBody'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ClassBody\n", "class MethodDefinition {\n  constructor (options) {\n    this.type = 'MethodDefinition'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = MethodDefinition\n", "class ClassDeclaration {\n  constructor (options) {\n    this.type = 'ClassDeclaration'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ClassDeclaration\n", "class ClassExpression {\n  constructor (options) {\n    this.type = 'ClassExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ClassExpression\n", "class MetaProperty {\n  constructor (options) {\n    this.type = 'MetaProperty'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = MetaProperty\n", "class ModuleDeclaration {\n  constructor (options) {\n    this.type = 'ModuleDeclaration'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ModuleDeclaration\n", "class ModuleSpecifier {\n  constructor (options) {\n    this.type = 'ModuleSpecifier'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ModuleSpecifier\n", "class ImportDeclaration {\n  constructor (options) {\n    this.type = 'ImportDeclaration'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ImportDeclaration\n", "class ImportSpecifier {\n  constructor (options) {\n    this.type = 'ImportSpecifier'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ImportSpecifier\n", "class ImportDefaultSpecifier {\n  constructor (options) {\n    this.type = 'ImportDefaultSpecifier'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ImportDefaultSpecifier\n", "class ImportNamespaceSpecifier {\n  constructor (options) {\n    this.type = 'ImportNamespaceSpecifier'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ImportNamespaceSpecifier\n", "class ExportNamedDeclaration {\n  constructor (options) {\n    this.type = 'ExportNamedDeclaration'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ExportNamedDeclaration\n", "class ExportSpecifier {\n  constructor (options) {\n    this.type = 'ExportSpecifier'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ExportSpecifier\n", "class ExportDefaultDeclaration {\n  constructor (options) {\n    this.type = 'ExportDefaultDeclaration'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ExportDefaultDeclaration\n", "class ExportAllDeclaration {\n  constructor (options) {\n    this.type = 'ExportAllDeclaration'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ExportAllDeclaration\n", "class AwaitExpression {\n  constructor (options) {\n    this.type = 'AwaitExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = AwaitExpression\n", "class BigIntLiteral {\n  constructor (options) {\n    this.type = 'BigIntLiteral'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = BigIntLiteral\n", "class ChainExpression {\n  constructor (options) {\n    this.type = 'ChainExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ChainExpression\n", "class ChainElement {\n  constructor (options) {\n    this.type = 'ChainElement'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ChainElement\n", "class ImportExpression {\n  constructor (options) {\n    this.type = 'ImportExpression'\n    Object.assign(this, options)\n  }\n}\n\nmodule.exports = ImportExpression\n", "const ArrayExpression = require('../nodes/ArrayExpression')\nconst BinaryExpression = require('../nodes/BinaryExpression')\nconst Literal = require('../nodes/Literal')\n\nmodule.exports = function toBinaryExpression (input) {\n  const expression = Array.isArray(input) ? new ArrayExpression({ elements: input }) : input\n  if (expression.type === 'ArrayExpression') {\n    const { elements } = expression\n    if (elements.length === 0) {\n      return new Literal({ value: '' })\n    }\n    if (elements.length === 1) {\n      return elements[0]\n    }\n    if (elements.length === 2) {\n      return new BinaryExpression({\n        operator: '+',\n        left: elements[0],\n        right: elements[1]\n      })\n    }\n    if (elements.length >= 3) {\n      let expression = new BinaryExpression({\n        operator: '+',\n        left: elements[0],\n        right: elements[1]\n      })\n      for (let index = 2; index < elements.length; index += 1) {\n        expression = new BinaryExpression({\n          operator: '+',\n          left: expression,\n          right: elements[index]\n        })\n      }\n      return expression\n    }\n  }\n  return expression\n}\n", "const OPERATORS = ['+', '-', '*', '/', '%', '**', '===', '==', '!=', '!==', '>', '<', '>=', '<=', '&', '|', '^', '<<', '>>']\n\nfunction isOperatorSupported (operator) {\n  return OPERATORS.includes(operator)\n}\n\nfunction calculate (operator, left, right) {\n  switch (operator) {\n    case '+': return left + right\n    case '-': return left - right\n    case '*': return left * right\n    case '/': return left / right\n    case '%': return left % right\n    case '**': return left ** right\n    case '==': return left == right\n    case '===': return left === right\n    case '>': return left > right\n    case '<': return left < right\n    case '>=': return left >= right\n    case '<=': return left <= right\n    case '!==': return left !== right\n    case '!=': return left != right\n    case '&': return left & right\n    case '|': return left | right\n    case '^': return left ^ right\n    case '<<': return left << right\n    case '>>': return left >> right\n  }\n}\n\nmodule.exports = function binaryExpressionReduction (node) {\n  if (node.type === 'BinaryExpression') {\n    if (node.left.type === 'BinaryExpression' && isOperatorSupported(node.left.operator)) {\n      node.left = binaryExpressionReduction(node.left)\n    }\n    if (node.right.type === 'BinaryExpression' && isOperatorSupported(node.right.operator)) {\n      node.right = binaryExpressionReduction(node.right)\n    }\n    if (node.left.type === 'Literal' && node.right.type === 'Literal' && isOperatorSupported(node.operator)) {\n      return { type: 'Literal', value: calculate(node.operator, node.left.value, node.right.value) }\n    }\n  }\n  return node\n}\n", "const truthyValues = ['Infinity']\nconst falsyValues = ['undefined', 'NaN']\n\nfunction isTruthy (value) {\n  return !!value\n}\n\nmodule.exports = function isNodeTruthy (node) {\n  if (node.type === 'Literal') {\n    return isTruthy(node.value)\n  } else if (node.type === 'ArrayExpression' || node.type === 'ObjectExpression') {\n    return true\n  } else if (node.type === 'Identifier' && truthyValues.includes(node.name)) {\n    return true\n  } else if (node.type === 'Identifier' && falsyValues.includes(node.name)) {\n    return false\n  } else if (node.type === 'UnaryExpression') {\n    if (node.operator === 'void') {\n      return false\n    } else if (node.operator === '-' && node.argument.type === 'Identifier' && truthyValues.includes(node.argument.name)) {\n      return true\n    }\n  } else if (node.type === 'TemplateLiteral' && node.expressions.length === 0) {\n    return isTruthy(node.quasis[0].value.raw)\n  }\n}\n", "function getBody (node) {\n  if (node && node.type === 'BlockStatement') {\n    if (node.body.length === 1) {\n      return node.body[0]\n    }\n    return node.body\n  }\n  return node\n}\n\nconst isNodeTruthy = require('./utilities/isNodeTruthy')\n\nmodule.exports = function ifStatementRemoval (node) {\n  if (node.type === 'IfStatement') {\n    const truthy = isNodeTruthy(node.test)\n    if (typeof truthy === 'boolean') {\n      if (truthy) {\n        return getBody(node.consequent)\n      } else {\n        return getBody(node.alternate)\n      }\n    }\n  }\n  return node\n}\n", "const GLOBAL_PROPERTIES = ['Infinity', 'NaN', 'undefined', 'null']\n\nmodule.exports = function isGlobalProperty (node) {\n  return node.type === 'Identifier' && GLOBAL_PROPERTIES.includes(node.name)\n}\n", "const isGlobalProperty = require('./utilities/isGlobalProperty')\n\nconst LOGICAL_OPERATORS = ['&&', '||', '??']\n\nfunction isLogicalOperator (operator) {\n  return LOGICAL_OPERATORS.includes(operator)\n}\n\nfunction getGlobalProperty (name) {\n  switch (name) {\n    case 'Infinity': return Infinity\n    case 'NaN': return NaN\n    case 'undefined': return undefined\n    case 'null': return null\n  }\n}\n\nfunction getNodeValue (node) {\n  return isGlobalProperty(node) ? getGlobalProperty(node.name) : node.value\n}\n\nfunction identifier (name) {\n  return { type: 'Identifier', name }\n}\n\nfunction literal (value) {\n  return { type: 'Literal', value }\n}\n\nfunction serialize (value) {\n  switch (value) {\n    case Infinity: return identifier('Infinity')\n    case NaN: return identifier('NaN')\n    case undefined: return identifier('undefined')\n    case null: return identifier('null')\n    default: return literal(value)\n  }\n}\n\nfunction evaluate (operator, left, right) {\n  switch (operator) {\n    case '&&': return serialize(left && right)\n    case '||': return serialize(left || right)\n    case '??': return serialize(left ?? right)\n  }\n}\n\nfunction isNodeSupported (node) {\n  return node.type === 'Literal' || isGlobalProperty(node)\n}\n\nmodule.exports = function logicalExpressionReduction (node) {\n  if (node.type === 'LogicalExpression' &&\n    isNodeSupported(node.left) &&\n    isNodeSupported(node.right) &&\n    isLogicalOperator(node.operator)) {\n    return evaluate(node.operator, getNodeValue(node.left), getNodeValue(node.right))\n  }\n  return node\n}\n", "module.exports = function memberExpressionReduction (node) {\n  if (\n    node.type === 'MemberExpression' &&\n    node.object.type === 'ObjectExpression' &&\n    node.property.type === 'Identifier'\n  ) {\n    const property = node.object.properties.find(property => property.key.type === 'Identifier' && property.key.name === node.property.name)\n    if (property && property.value.type === 'Literal') {\n      return property.value\n    }\n  }\n  return node\n}\n", "function isComparisonOperator (operator) {\n  return (/^(==|===|!=|!==|<|>|<=|>=)$/).test(operator)\n}\n\nfunction getNegatedOperator (operator) {\n  if (operator === '===') return '!=='\n  if (operator === '<') return '>='\n  if (operator === '>') return '<='\n  if (operator === '>=') return '<'\n  if (operator === '<=') return '>'\n  if (operator === '==') return '!='\n  if (operator === '!=') return '=='\n  if (operator === '!==') return '==='\n}\n\nmodule.exports = function negationOperatorRemoval (node) {\n  if (\n    node.type === 'UnaryExpression' &&\n    node.operator === '!' &&\n    node.argument.type === 'BinaryExpression' &&\n    isComparisonOperator(node.argument.operator)\n  ) {\n    node.argument.operator = getNegatedOperator(node.argument.operator)\n    return node.argument\n  }\n  return node\n}\n", "const isNodeTruthy = require('./utilities/isNodeTruthy')\n\nfunction isTruthy (value) {\n  return !!value\n}\n\nmodule.exports = function ternaryOperatorReduction (node) {\n  if (node.type === 'ConditionalExpression') {\n    const truthy = isNodeTruthy(node.test)\n    if (typeof truthy === 'boolean') {\n      if (truthy) {\n        return node.consequent\n      } else {\n        return node.alternate\n      }\n    }\n  }\n  return node\n}\n", "const isGlobalProperty = require('./utilities/isGlobalProperty')\n\nfunction getTypeOfGlobalProperty (name) {\n  switch (name) {\n    case 'Infinity': return typeof Infinity\n    case 'NaN': return typeof NaN\n    case 'undefined': return typeof undefined\n    case 'null': return typeof null\n  }\n}\n\nmodule.exports = function typeofOperatorReduction (node) {\n  if (node.type === 'UnaryExpression' && node.operator === 'typeof') {\n    if (node.argument.type === 'Literal') {\n      return { type: 'Literal', value: typeof node.argument.value }\n    } else if (node.argument.type === 'ArrayExpression') {\n      return { type: 'Literal', value: typeof [] }\n    } else if (node.argument.type === 'ObjectExpression') {\n      return { type: 'Literal', value: typeof {} }\n    } else if (isGlobalProperty(node.argument)) {\n      return { type: 'Literal', value: getTypeOfGlobalProperty(node.argument.name) }\n    }\n  }\n  return node\n}\n", "const find = require('./src/find')\nconst each = require('./src/each')\nconst first = require('./src/first')\nconst last = require('./src/last')\nconst count = require('./src/count')\nconst equal = require('./src/equal')\nconst has = require('./src/has')\nconst remove = require('./src/remove')\nconst prepend = require('./src/prepend')\nconst append = require('./src/append')\nconst replace = require('./src/replace')\nconst walk = require('./src/walk')\nconst traverse = require('./src/traverse')\nconst generate = require('./src/generate')\nconst parse = require('./src/parse')\nconst reduce = require('./src/reduce')\nconst template = require('./src/template')\nconst match = require('./src/match')\nconst serialize = require('./src/serialize')\nconst sourcemap = require('./src/sourcemap')\nconst mark = require('./src/mark')\nconst program = require('./src/program')\nconst iife = require('./src/iife')\n\nclass AbstractSyntaxTree {\n  static find (tree, selector) {\n    return find(tree, selector)\n  }\n\n  static each (tree, selector, callback) {\n    return each(tree, selector, callback)\n  }\n\n  static first (tree, selector) {\n    return first(tree, selector)\n  }\n\n  static last (tree, selector) {\n    return last(tree, selector)\n  }\n\n  static count (tree, selector) {\n    return count(tree, selector)\n  }\n\n  static has (tree, selector) {\n    return has(tree, selector)\n  }\n\n  static remove (tree, target, options) {\n    return remove(tree, target, options)\n  }\n\n  static prepend (tree, node) {\n    return prepend(tree, node)\n  }\n\n  static append (tree, node) {\n    return append(tree, node)\n  }\n\n  static equal (node1, node2) {\n    return equal(node1, node2)\n  }\n\n  static match (node, selector) {\n    return match(node, selector)\n  }\n\n  static generate (tree, options) {\n    return generate(tree, options)\n  }\n\n  static parse (source, options) {\n    return parse(source, options)\n  }\n\n  static walk (tree, callback) {\n    return walk(tree, callback)\n  }\n\n  static serialize (node) {\n    return serialize(node)\n  }\n\n  static traverse (tree, callback) {\n    return traverse(tree, callback)\n  }\n\n  static replace (tree, callback) {\n    return replace(tree, callback)\n  }\n\n  static template (source, options) {\n    return template(source, options)\n  }\n\n  static reduce (tree, callback, accumulator) {\n    return reduce(tree, callback, accumulator)\n  }\n\n  static program (body, options) {\n    return program(body, options)\n  }\n\n  static iife (body) {\n    return iife(body)\n  }\n\n  constructor (source = '', options = {}) {\n    if (typeof source === 'string') {\n      this._tree = parse(source, { loc: true, ...options })\n    } else {\n      this._tree = source\n    }\n  }\n\n  get type () {\n    return this._tree.type\n  }\n\n  get body () {\n    return this._tree.body\n  }\n\n  get source () {\n    return generate(this._tree)\n  }\n\n  get map () {\n    return sourcemap(this._tree).map\n  }\n\n  set body (body) {\n    this._tree.body = body\n  }\n\n  find (selector) {\n    return find(this._tree, selector)\n  }\n\n  each (selector, callback) {\n    return each(this._tree, selector, callback)\n  }\n\n  first (selector) {\n    return first(this._tree, selector)\n  }\n\n  last (selector) {\n    return last(this._tree, selector)\n  }\n\n  count (selector) {\n    return count(this._tree, selector)\n  }\n\n  has (selector) {\n    return has(this._tree, selector)\n  }\n\n  remove (target, options) {\n    return remove(this._tree, target, options)\n  }\n\n  walk (callback) {\n    return walk(this._tree, callback)\n  }\n\n  traverse (options) {\n    return traverse(this._tree, options)\n  }\n\n  replace (options) {\n    return replace(this._tree, options)\n  }\n\n  reduce (callback, accumulator) {\n    return reduce(this._tree, callback, accumulator)\n  }\n\n  prepend (node) {\n    return prepend(this._tree, node)\n  }\n\n  append (node) {\n    return append(this._tree, node)\n  }\n\n  wrap (callback) {\n    this._tree.body = callback(this._tree.body)\n  }\n\n  unwrap () {\n    this._tree.body = first(this._tree, 'BlockStatement').body\n  }\n\n  mark () {\n    return mark(this._tree)\n  }\n}\n\nAbstractSyntaxTree.Node = require('./src/nodes/Node')\nAbstractSyntaxTree.SourceLocation = require('./src/nodes/SourceLocation')\nAbstractSyntaxTree.Position = require('./src/nodes/Position')\nAbstractSyntaxTree.Identifier = require('./src/nodes/Identifier')\nAbstractSyntaxTree.Literal = require('./src/nodes/Literal')\nAbstractSyntaxTree.RegExpLiteral = require('./src/nodes/RegExpLiteral')\nAbstractSyntaxTree.Program = require('./src/nodes/Program')\nAbstractSyntaxTree.Function = require('./src/nodes/Function')\nAbstractSyntaxTree.Statement = require('./src/nodes/Statement')\nAbstractSyntaxTree.ExpressionStatement = require('./src/nodes/ExpressionStatement')\nAbstractSyntaxTree.Directive = require('./src/nodes/Directive')\nAbstractSyntaxTree.BlockStatement = require('./src/nodes/BlockStatement')\nAbstractSyntaxTree.FunctionBody = require('./src/nodes/FunctionBody')\nAbstractSyntaxTree.EmptyStatement = require('./src/nodes/EmptyStatement')\nAbstractSyntaxTree.DebuggerStatement = require('./src/nodes/DebuggerStatement')\nAbstractSyntaxTree.WithStatement = require('./src/nodes/WithStatement')\nAbstractSyntaxTree.ReturnStatement = require('./src/nodes/ReturnStatement')\nAbstractSyntaxTree.LabeledStatement = require('./src/nodes/LabeledStatement')\nAbstractSyntaxTree.BreakStatement = require('./src/nodes/BreakStatement')\nAbstractSyntaxTree.ContinueStatement = require('./src/nodes/ContinueStatement')\nAbstractSyntaxTree.IfStatement = require('./src/nodes/IfStatement')\nAbstractSyntaxTree.SwitchStatement = require('./src/nodes/SwitchStatement')\nAbstractSyntaxTree.SwitchCase = require('./src/nodes/SwitchCase')\nAbstractSyntaxTree.ThrowStatement = require('./src/nodes/ThrowStatement')\nAbstractSyntaxTree.TryStatement = require('./src/nodes/TryStatement')\nAbstractSyntaxTree.CatchClause = require('./src/nodes/CatchClause')\nAbstractSyntaxTree.WhileStatement = require('./src/nodes/WhileStatement')\nAbstractSyntaxTree.DoWhileStatement = require('./src/nodes/DoWhileStatement')\nAbstractSyntaxTree.ForStatement = require('./src/nodes/ForStatement')\nAbstractSyntaxTree.ForInStatement = require('./src/nodes/ForInStatement')\nAbstractSyntaxTree.Declaration = require('./src/nodes/Declaration')\nAbstractSyntaxTree.FunctionDeclaration = require('./src/nodes/FunctionDeclaration')\nAbstractSyntaxTree.VariableDeclaration = require('./src/nodes/VariableDeclaration')\nAbstractSyntaxTree.VariableDeclarator = require('./src/nodes/VariableDeclarator')\nAbstractSyntaxTree.Expression = require('./src/nodes/Expression')\nAbstractSyntaxTree.ThisExpression = require('./src/nodes/ThisExpression')\nAbstractSyntaxTree.ArrayExpression = require('./src/nodes/ArrayExpression')\nAbstractSyntaxTree.ObjectExpression = require('./src/nodes/ObjectExpression')\nAbstractSyntaxTree.Property = require('./src/nodes/Property')\nAbstractSyntaxTree.FunctionExpression = require('./src/nodes/FunctionExpression')\nAbstractSyntaxTree.UnaryExpression = require('./src/nodes/UnaryExpression')\nAbstractSyntaxTree.UnaryOperator = require('./src/nodes/UnaryOperator')\nAbstractSyntaxTree.UpdateExpression = require('./src/nodes/UpdateExpression')\nAbstractSyntaxTree.UpdateOperator = require('./src/nodes/UpdateOperator')\nAbstractSyntaxTree.BinaryExpression = require('./src/nodes/BinaryExpression')\nAbstractSyntaxTree.BinaryOperator = require('./src/nodes/BinaryOperator')\nAbstractSyntaxTree.AssignmentExpression = require('./src/nodes/AssignmentExpression')\nAbstractSyntaxTree.AssignmentOperator = require('./src/nodes/AssignmentOperator')\nAbstractSyntaxTree.LogicalExpression = require('./src/nodes/LogicalExpression')\nAbstractSyntaxTree.LogicalOperator = require('./src/nodes/LogicalOperator')\nAbstractSyntaxTree.MemberExpression = require('./src/nodes/MemberExpression')\nAbstractSyntaxTree.ConditionalExpression = require('./src/nodes/ConditionalExpression')\nAbstractSyntaxTree.CallExpression = require('./src/nodes/CallExpression')\nAbstractSyntaxTree.NewExpression = require('./src/nodes/NewExpression')\nAbstractSyntaxTree.SequenceExpression = require('./src/nodes/SequenceExpression')\nAbstractSyntaxTree.Pattern = require('./src/nodes/Pattern')\nAbstractSyntaxTree.ForOfStatement = require('./src/nodes/ForOfStatement')\nAbstractSyntaxTree.Super = require('./src/nodes/Super')\nAbstractSyntaxTree.SpreadElement = require('./src/nodes/SpreadElement')\nAbstractSyntaxTree.YieldExpression = require('./src/nodes/YieldExpression')\nAbstractSyntaxTree.TemplateLiteral = require('./src/nodes/TemplateLiteral')\nAbstractSyntaxTree.TaggedTemplateExpression = require('./src/nodes/TaggedTemplateExpression')\nAbstractSyntaxTree.TemplateElement = require('./src/nodes/TemplateElement')\nAbstractSyntaxTree.ObjectPattern = require('./src/nodes/ObjectPattern')\nAbstractSyntaxTree.ArrayPattern = require('./src/nodes/ArrayPattern')\nAbstractSyntaxTree.RestElement = require('./src/nodes/RestElement')\nAbstractSyntaxTree.AssignmentPattern = require('./src/nodes/AssignmentPattern')\nAbstractSyntaxTree.Class = require('./src/nodes/Class')\nAbstractSyntaxTree.ClassBody = require('./src/nodes/ClassBody')\nAbstractSyntaxTree.MethodDefinition = require('./src/nodes/MethodDefinition')\nAbstractSyntaxTree.ClassDeclaration = require('./src/nodes/ClassDeclaration')\nAbstractSyntaxTree.ClassExpression = require('./src/nodes/ClassExpression')\nAbstractSyntaxTree.MetaProperty = require('./src/nodes/MetaProperty')\nAbstractSyntaxTree.ModuleDeclaration = require('./src/nodes/ModuleDeclaration')\nAbstractSyntaxTree.ModuleSpecifier = require('./src/nodes/ModuleSpecifier')\nAbstractSyntaxTree.ImportDeclaration = require('./src/nodes/ImportDeclaration')\nAbstractSyntaxTree.ImportSpecifier = require('./src/nodes/ImportSpecifier')\nAbstractSyntaxTree.ImportDefaultSpecifier = require('./src/nodes/ImportDefaultSpecifier')\nAbstractSyntaxTree.ImportNamespaceSpecifier = require('./src/nodes/ImportNamespaceSpecifier')\nAbstractSyntaxTree.ExportNamedDeclaration = require('./src/nodes/ExportNamedDeclaration')\nAbstractSyntaxTree.ExportSpecifier = require('./src/nodes/ExportSpecifier')\nAbstractSyntaxTree.ExportDefaultDeclaration = require('./src/nodes/ExportDefaultDeclaration')\nAbstractSyntaxTree.ExportAllDeclaration = require('./src/nodes/ExportAllDeclaration')\nAbstractSyntaxTree.AwaitExpression = require('./src/nodes/AwaitExpression')\nAbstractSyntaxTree.BigIntLiteral = require('./src/nodes/BigIntLiteral')\nAbstractSyntaxTree.ChainExpression = require('./src/nodes/ChainExpression')\nAbstractSyntaxTree.ChainElement = require('./src/nodes/ChainElement')\nAbstractSyntaxTree.ImportExpression = require('./src/nodes/ImportExpression')\n\nAbstractSyntaxTree.toBinaryExpression = require('./src/transform/toBinaryExpression')\n\nAbstractSyntaxTree.binaryExpressionReduction = require('./src/optimize/binaryExpressionReduction')\nAbstractSyntaxTree.ifStatementRemoval = require('./src/optimize/ifStatementRemoval')\nAbstractSyntaxTree.logicalExpressionReduction = require('./src/optimize/logicalExpressionReduction')\nAbstractSyntaxTree.memberExpressionReduction = require('./src/optimize/memberExpressionReduction')\nAbstractSyntaxTree.negationOperatorRemoval = require('./src/optimize/negationOperatorRemoval')\nAbstractSyntaxTree.ternaryOperatorReduction = require('./src/optimize/ternaryOperatorReduction')\nAbstractSyntaxTree.typeofOperatorReduction = require('./src/optimize/typeofOperatorReduction')\n\nmodule.exports = AbstractSyntaxTree\n", "\"use strict\";function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function _iterableToArrayLimit(a,b){if(Symbol.iterator in Object(a)||\"[object Arguments]\"===Object.prototype.toString.call(a)){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{d||null==h[\"return\"]||h[\"return\"]()}finally{if(e)throw f}}return c}}function _arrayWithHoles(a){if(Array.isArray(a))return a}var Sim=[\"Cosine\",\"DiceCoefficient\",\"JaccardIndex\",\"Levenshtein\",\"LongestCommonSubsequence\",\"MetricLCS\"],_Sim$map=Sim.map(function(a){return require(\"./main/packages/\".concat(a))}),_Sim$map2=_slicedToArray(_Sim$map,6),Cosine=_Sim$map2[0],DiceCoefficient=_Sim$map2[1],JaccardIndex=_Sim$map2[2],Levenshtein=_Sim$map2[3],LongestCommonSubsequence=_Sim$map2[4],MetricLCS=_Sim$map2[5];module.exports={cosine:new Cosine,diceCoefficient:new DiceCoefficient,jaccardIndex:new JaccardIndex,levenshtein:new Levenshtein,lcs:new LongestCommonSubsequence,mlcs:new MetricLCS};", "import fs from 'fs'\nimport path from \"path\"\nimport ast from 'abstract-syntax-tree'\nimport { cloneDetection } from './sort-match.js'\nimport { parseOptmized } from './parse-to-ast.js'\n\nconst arrayFiles = []\nconst __dirname = path.resolve();\nconst isDirectory = (dirPath, file) => fs.statSync(dirPath + \"/\" + file).isDirectory()\n\n// const hashCode = s => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0)\n\nconst getAllFiles = (dirPath, arrayOfFiles) => {\n  arrayOfFiles = arrayOfFiles || []\n  const files = fs.readdirSync(dirPath)\n\n  files.forEach((file) => {\n    if (['__base-functions.js', '__similarity-matrix.js'].includes(file)) return\n    if (isDirectory(dirPath, file)) arrayOfFiles = getAllFiles(dirPath + \"/\" + file, arrayOfFiles)\n    if (!isDirectory(dirPath, file)) arrayOfFiles.push(path.join(__dirname, dirPath, \"/\", file))\n  })\n\n  return arrayOfFiles\n}\n\nconst addTreeWithNameHashed = (tree) => {\n  ast.walk(tree, (node) => { if (node?.type === 'FunctionDeclaration' && node?.id?.name) node.id.name = `${node.id.name}_${Math.floor(Math.random() * 999 + 1)}` })\n  ast.walk(tree, (node, parent) => { if (node?.type === 'ArrowFunctionExpression' && parent?.id?.name) parent.id.name = `${parent.id.name}_${Math.floor(Math.random() * 999 + 1)}` })\n}\n\ngetAllFiles(process.argv[2])\n  .map(file => {\n    fs.writeFileSync(`${process.cwd()}/__base-functions.js`, '')\n    if (!((file.indexOf('.') !== 0) && (file.slice(-3) === '.js'))) return\n    console.log('[READING FILE]:', file)\n    \n    const content = fs.readFileSync(`${file}`, 'utf-8')\n    \n    let fileToTree\n    try {\n      fileToTree = parseOptmized(content)\n    } catch (e) {\n      console.log('ERROR: ', e)\n    }\n    \n    fileToTree.body.forEach((tree) => {\n      addTreeWithNameHashed(tree)\n      \n      if (tree?.type === 'FunctionDeclaration') arrayFiles.push(tree)\n      if (tree?.declaration?.type === 'FunctionDeclaration') arrayFiles.push(tree.declaration)\n  \n      if (tree?.declarations && tree?.declarations[0]?.init?.type === 'ArrowFunctionExpression') arrayFiles.push(tree)\n      if (tree?.declaration?.declarations && tree?.declaration?.declarations[0]?.init?.type === 'ArrowFunctionExpression') arrayFiles.push(tree.declaration)\n    })\n  })\n\narrayFiles.forEach(tree => {\n  const contentBase = fs.readFileSync(`${process.cwd()}/__base-functions.js`, 'utf-8')\n  const fileWrite = `${contentBase}\\n\\n${ast.generate(tree)}`\n\n  fs.writeFileSync(`${process.cwd()}/__base-functions.js`, fileWrite)\n})\n  \nconst file = fs.readFileSync(`${process.cwd()}/__base-functions.js`, 'utf-8')\nconst parseFile = parseOptmized(file)\n\nconst arrayNames = []\nconst arrayFunctions = []\n\nparseFile.body.map((el) => {\n  if (el?.id?.name) arrayNames.push(el?.id?.name)\n  if (el?.declarations && el?.declarations[0]?.init?.type === 'ArrowFunctionExpression') arrayNames.push(el?.declarations[0]?.id?.name)\n\n  if (el?.type !== 'VariableDeclaration') return arrayFunctions.push(el)\n  return arrayFunctions.push(el.declarations[0].init)\n})\n\ncloneDetection(arrayNames, arrayFunctions.map(el => ast.generate(el)))", "import fs from 'fs'\nimport ast from 'abstract-syntax-tree'\nimport stringComparision from 'string-comparison'\nimport { cleanning } from '../../clone-detection/libs/pre-processing.js'\nimport { parseOptmized } from '../../clone-detection/libs/parse-to-ast.js'\n\nexport const cloneDetection = (functionsName, functionsArray) => {\n  const arr = []\n  const parsedArray = functionsArray.map(element => parseOptmized(element))\n  const cleannedTree = parsedArray.map(tree => cleanning(tree))\n  const cleannedCode = cleannedTree.map(tree => ast.generate(tree))\n  \n  const arrayLength = cleannedCode.length\n  console.log(`\\n\u2728\u2728 S\u00C3O ${arrayLength} FUN\u00C7\u00D5ES SENDO ANALISADAS AOS PARESs. \u2728\u2728\\n`)\n  \n  for (let i = 0; i < arrayLength; i++) {\n    const treeControl = cleannedCode.splice(0, 1)\n    // if (cleannedCode.length <= 0) return console.log('\\n-----------------------------------------------------------')\n    // const result = stringComparision.levenshtein.sortMatch(...treeControl, cleannedCode)\n\n    let string = ''\n    for (let j = 0; j < i; j++) { string += ' 0.000' }\n    string += ' 1.000'\n\n    for (let k = 0; k < cleannedCode.length; k++) {\n      const simi = stringComparision.levenshtein.similarity(`${treeControl}`, `${cleannedCode[k]}`)\n      string += ` ${simi.toFixed(3)}`\n    }\n    \n    console.log([i], string)\n    arr.push(`${functionsName[i]} ${string}`)\n    \n    // console.log('\\n----------------------------------------------------------------------------------------------\\n')\n    // console.log(functionsName[i],\"-\", ...result.map(el => `[${el.index}]: ${el.rating} |`))\n  }\n  \n  fs.writeFileSync(`${process.cwd()}/__similarity-matrix.csv`, '')\n  \n  arr.forEach(el => {\n    const content = fs.readFileSync(`${process.cwd()}/__similarity-matrix.csv`, 'utf-8')\n    fs.writeFileSync(`${process.cwd()}/__similarity-matrix.csv`, `${content}\\n${el}`)\n  })\n\n  console.log(`\\n\u26A1\u26A1 UMA MATRIZ QUADRADA FOI GERADA EM: ${process.cwd()}/__similarity-matrix.csv \u26A1\u26A1\\n`)\n}\n\n//--> quanto menor a arvore, menor o tempo de processamento (alem de outros metodos de similaridade)\n//--> adicionar minifier (entender impacto no coeficiente)\n//--> husky: pegar tudo que foi alterado (git) e rodar a ferramenta em cima deles\n//--> Organizar o codigo por steps e notificar etapas via console.log", "import ast from 'abstract-syntax-tree'\n\nexport const isObject = (value) => {\n  return typeof value === 'object' && value !== null && !Array.isArray(value)\n}\n\nexport const isParams = (type, params) => {\n  return (type === 'FunctionDeclaration' && Array.isArray(params))\n}\n\nexport const convertArrowtoRegular = (node) => {\n  node = { ...node.expression }\n  node?.params?.map((element) => element.name = 'params_name')\n  node.id = { type: 'Identifier', name: 'functiondeclaration_name' }\n  if (node?.type === 'ArrowFunctionExpression') node.type = 'FunctionDeclaration'\n\n  const { expression, ...convertedNode } = node\n  return convertedNode\n}\n\nexport const normalizeNamesByNode = (tree) => {\n  ast.walk(tree, (node, parent) => {\n    if (node?.name) node.name = `${parent?.type}_name`.toLowerCase()\n\n    if (isParams(parent?.type, parent?.params)) {\n      parent.id.name = `${parent?.type}_name`.toLowerCase()\n      parent.params.map((element) => element.name = 'params_name')\n    }\n  })\n}\n\nexport const normalizeLiteralValues = (tree) => {\n  ast.walk(tree, (node) => {\n    if (node?.type === 'Literal') node.value = typeof node.value\n  })\n}\n\nexport const deleteAttrsByNode = (tree) => {\n  ast.walk(tree, (node) => {\n    if (node?.generator === false) delete node.generator\n    if (node?.sourceType === 'module') delete node.sourceType\n  })\n}\n\nexport const organizeAttrsByNode = (node) => {\n  const arraySort = Object.entries(node).sort((a, b) => {\n    if (a < b) return 1\n    if (a > b) return -1\n    return 0\n  })\n  return Object.fromEntries(arraySort)\n}\n\nexport const cleanning = (tree) => {\n  return ast.replace(tree, (node) => {\n    if (isObject(node?.expression)) node = convertArrowtoRegular(node)\n    deleteAttrsByNode(tree)\n    normalizeNamesByNode(tree)\n    normalizeLiteralValues(tree)\n    return organizeAttrsByNode(node)\n  })\n}\n", "import ast from 'abstract-syntax-tree'\n\nexport const parseOptmized = (snippet) => {\n  return ast.binaryExpressionReduction(ast.parse(`${snippet}`))\n}\n\nexport const parse = (snippet) => {\n  return ast.parse(`${snippet}`)\n}"],
  "mappings": "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",
  "names": []
}
